{"version":3,"file":"static/js/803.6a3d7d2b.chunk.js","mappings":"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","sources":["hooks/nft/useNFTMintSupply.ts","components/NFT/market/CollectionInfo.tsx","hooks/nft/tradeData.ts","views/nft/Collection.tsx"],"sourcesContent":["import { useEffect, useState, useMemo } from \"react\";\nimport { getSwapNFTStat } from \"hooks/nft/useNFTCalls\";\nimport type { NFTControllerInfo } from \"@w2e/types\";\n\nconst SwapNFTIds = [\"4lnl6-hqaaa-aaaag-qblla-cai\"];\n\nexport function useNFTMintSupply(canisterMetadata: NFTControllerInfo | undefined | null) {\n  const [mintSupply, setMintSupply] = useState<undefined | bigint>(undefined);\n\n  useEffect(() => {\n    if (canisterMetadata && !SwapNFTIds.includes(canisterMetadata.cid)) {\n      setMintSupply(canisterMetadata.mintSupply);\n    } else if (canisterMetadata && SwapNFTIds.includes(canisterMetadata.cid)) {\n      getSwapNFTStat().then((result) => {\n        setMintSupply(result ? result[0] : undefined);\n      });\n    }\n  }, [canisterMetadata]);\n\n  return useMemo(() => mintSupply, [mintSupply]);\n}\n","import { ReactNode, useMemo } from \"react\";\nimport { Typography, Grid, Box, useMediaQuery, Avatar } from \"@mui/material\";\nimport { createTheme, Theme } from \"@mui/material/styles\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useCanisterMetadata } from \"hooks/nft/useNFTCalls\";\nimport { useNFTMintSupply } from \"hooks/nft/useNFTMintSupply\";\nimport { useCollectionData } from \"hooks/nft/tradeData\";\nimport { Trans } from \"@lingui/macro\";\nimport VerifyNFT from \"components/NFT/VerifyNFT\";\nimport WICPPriceFormat from \"components/NFT/WICPPriceFormat\";\nimport { formatAmount } from \"@w2e/utils\";\nimport { LoadingRow, Breadcrumbs } from \"components/index\";\n\nimport CollectionLinks from \"../collectionsIcon/index\";\n\nexport const customizeTheme = createTheme({\n  breakpoints: {\n    values: {\n      md: 1280,\n      960: 960,\n      780: 780,\n      640: 640,\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return {\n    descItem: {\n      fontSize: \"12px\",\n      lineHeight: \"20px\",\n    },\n\n    infoBox: {\n      display: \"flex\",\n      background: theme.palette.background.level1,\n      borderRadius: \"12px\",\n      gap: \"70px\",\n      padding: \"27px 64px 18px 64px\",\n      [customizeTheme.breakpoints.down(\"960\")]: {\n        gap: \"60px\",\n        padding: \"27px 54px 18px 54px\",\n      },\n      [customizeTheme.breakpoints.down(\"780\")]: {\n        gap: \"40px\",\n        padding: \"20px 34px 13px 34px\",\n      },\n      [customizeTheme.breakpoints.down(\"780\")]: {\n        gap: \"40px\",\n        padding: \"13px 20px 13px 20px\",\n      },\n    },\n\n    infoText: {\n      fontWeight: \"600\",\n      fontSize: \"28px\",\n      color: theme.palette.text.primary,\n      textAlign: \"center\",\n      [customizeTheme.breakpoints.down(\"md\")]: {\n        fontSize: \"24px\",\n      },\n      [customizeTheme.breakpoints.down(\"md\")]: {\n        fontSize: \"20px\",\n      },\n    },\n  };\n});\n\nfunction CollectionDataItem({ label, value }: { label: ReactNode; value: ReactNode }) {\n  const classes = useStyles();\n\n  return (\n    <Box>\n      <Typography className={classes.infoText} component=\"div\">\n        {value}\n      </Typography>\n      <Typography sx={{ marginTop: \"8px\" }} align=\"center\">\n        {label}\n      </Typography>\n    </Box>\n  );\n}\n\nexport default function CollectionInfo({ canisterId }: { canisterId: string }) {\n  const classes = useStyles();\n\n  const { result: canister, loading } = useCanisterMetadata(canisterId);\n  const { result: collectionResult } = useCollectionData(canisterId);\n\n  const mintSupply = useNFTMintSupply(canister);\n\n  const matchDownMD = useMediaQuery(customizeTheme.breakpoints.down(\"md\"));\n  const matchDown640 = useMediaQuery(customizeTheme.breakpoints.down(\"640\"));\n\n  const links = useMemo(() => {\n    if (canisterId === \"xzcnc-myaaa-aaaak-abk7a-cai\") {\n      const _links = [...(canister?.linkMap ?? [])].filter((e) => e.k !== \"Twitter\");\n      _links.push({ k: \"Twitter\", v: \"https://twitter.com/ghost_icp\" });\n      return _links;\n    }\n\n    return canister?.linkMap;\n  }, [canisterId, canister?.linkMap]);\n\n  return (\n    <>\n      <Box mb=\"40px\">\n        <Breadcrumbs\n          prevLink=\"/marketplace/collections\"\n          prevLabel={<Trans>Marketplace</Trans>}\n          currentLabel={canister?.name}\n        />\n      </Box>\n\n      <Grid container flexDirection={matchDownMD ? \"column\" : \"row\"}>\n        <Box sx={{ minWidth: \"390px\" }}>\n          {loading ? (\n            <LoadingRow>\n              <div />\n              <div />\n              <div />\n              <div />\n            </LoadingRow>\n          ) : (\n            <Grid container>\n              <Avatar src={canister?.image ?? \"\"} sx={{ width: \"100px\", height: \"100px\", marginRight: \"24px\" }}>\n                &nbsp;\n              </Avatar>\n              <Grid item>\n                <Typography\n                  color=\"text.primary\"\n                  sx={{\n                    fontSize: \"22px\",\n                    fontWeight: \"600\",\n                    marginTop: \"10px\",\n                  }}\n                >\n                  {canister?.name}\n                </Typography>\n                <Box mt=\"20px\">\n                  <VerifyNFT minter={canister?.creator} secondaryColor fontSize=\"14px\" />\n                </Box>\n\n                <Box mt=\"20px\">\n                  <CollectionLinks links={links} width=\"42px\" />\n                </Box>\n              </Grid>\n            </Grid>\n          )}\n        </Box>\n\n        <Grid item xs mt={matchDownMD ? \"20px\" : \"0\"}>\n          <Grid container justifyContent={matchDownMD ? \"flex-start\" : \"flex-end\"}>\n            <Box className={classes.infoBox}>\n              {matchDown640 ? (\n                <>\n                  <Box>\n                    <CollectionDataItem\n                      value={\n                        collectionResult?.floorPrice ? (\n                          <WICPPriceFormat\n                            imgSize=\"22px\"\n                            price={collectionResult?.floorPrice}\n                            fontSize=\"28px\"\n                            fontWeight={600}\n                            digits={4}\n                            typographyProps={{\n                              className: classes.infoText,\n                            }}\n                          />\n                        ) : (\n                          \"--\"\n                        )\n                      }\n                      label={<Trans>floor price</Trans>}\n                    />\n\n                    <Box sx={{ height: \"20px\", width: \"1px\" }} />\n\n                    <CollectionDataItem\n                      value={\n                        collectionResult?.totalTurnover || collectionResult?.totalTurnover === BigInt(0) ? (\n                          <WICPPriceFormat\n                            imgSize=\"22px\"\n                            price={collectionResult?.totalTurnover}\n                            fontSize=\"28px\"\n                            fontWeight={600}\n                            color=\"text.primary\"\n                            typographyProps={{\n                              className: classes.infoText,\n                            }}\n                          />\n                        ) : (\n                          \"--\"\n                        )\n                      }\n                      label={<Trans>total volume</Trans>}\n                    />\n                  </Box>\n\n                  <Box>\n                    <CollectionDataItem\n                      value={!!mintSupply || mintSupply === BigInt(0) ? formatAmount(Number(mintSupply), 0) : \"--\"}\n                      label={<Trans>items</Trans>}\n                    />\n\n                    <Box sx={{ height: \"20px\", width: \"1px\" }} />\n\n                    <CollectionDataItem\n                      value={\n                        !!collectionResult?.listSize || collectionResult?.listSize === BigInt(0)\n                          ? formatAmount(Number(collectionResult?.listSize), 0)\n                          : \"--\"\n                      }\n                      label={<Trans>listings</Trans>}\n                    />\n                  </Box>\n                </>\n              ) : (\n                <>\n                  <CollectionDataItem\n                    value={\n                      collectionResult?.floorPrice || collectionResult?.floorPrice === BigInt(0) ? (\n                        <WICPPriceFormat\n                          imgSize=\"22px\"\n                          price={collectionResult?.floorPrice}\n                          fontSize=\"28px\"\n                          fontWeight={600}\n                          digits={4}\n                          typographyProps={{\n                            className: classes.infoText,\n                          }}\n                        />\n                      ) : (\n                        \"--\"\n                      )\n                    }\n                    label={<Trans>floor price</Trans>}\n                  />\n\n                  <CollectionDataItem\n                    value={\n                      collectionResult?.totalTurnover || collectionResult?.totalTurnover === BigInt(0) ? (\n                        <WICPPriceFormat\n                          imgSize=\"22px\"\n                          price={collectionResult?.totalTurnover}\n                          fontSize=\"28px\"\n                          fontWeight={600}\n                          color=\"text.primary\"\n                          typographyProps={{\n                            className: classes.infoText,\n                          }}\n                        />\n                      ) : (\n                        \"--\"\n                      )\n                    }\n                    label={<Trans>total volume</Trans>}\n                  />\n\n                  <CollectionDataItem\n                    value={!!mintSupply || mintSupply === BigInt(0) ? formatAmount(Number(mintSupply), 0) : \"--\"}\n                    label={<Trans>items</Trans>}\n                  />\n\n                  <CollectionDataItem\n                    value={\n                      !!collectionResult?.listSize || collectionResult?.listSize === BigInt(0)\n                        ? formatAmount(Number(collectionResult?.listSize), 0)\n                        : \"--\"\n                    }\n                    label={<Trans>listings</Trans>}\n                  />\n                </>\n              )}\n            </Box>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import { useCallback } from \"react\";\nimport { resultFormat, isAvailablePageArgs } from \"@w2e/utils\";\nimport type { NFTControllerInfo, TradeStateResult } from \"@w2e/types\";\nimport { PaginationResult } from \"types/global\";\nimport { NFTTradeStat, NFTCanisterController } from \"@w2e/actor\";\nimport { useCallsData } from \"@w2e/hooks\";\n\nexport function useMarketplaceRecommendCanisters(offset: number, limit: number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!isAvailablePageArgs(offset, limit)) return undefined;\n      return resultFormat<PaginationResult<NFTControllerInfo>>(\n        await (await NFTCanisterController()).findTop5Canister(BigInt(offset), BigInt(limit)),\n      ).data;\n    }, [offset, limit]),\n  );\n}\n\nexport function useNFTCanisters(offset: number, limit: number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!isAvailablePageArgs(offset, limit)) return undefined;\n      return resultFormat<PaginationResult<NFTControllerInfo>>(\n        await (await NFTCanisterController()).findCanister(BigInt(offset), BigInt(limit)),\n      ).data;\n    }, [offset, limit]),\n  );\n}\n\nexport function useCollectionData(canisterId: string | undefined) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId) return undefined;\n      const result = await (await NFTTradeStat()).getCanisterStat(canisterId);\n      return resultFormat<TradeStateResult>(result).data;\n    }, [canisterId]),\n  );\n}\n","import { useState } from \"react\";\nimport MarketWrapper, { Pages, MarketPageConfig } from \"components/NFT/market/MarketWrapper\";\nimport { useParams } from \"react-router-dom\";\nimport CollectionInfo from \"components/NFT/market/CollectionInfo\";\n\nexport default function NFTCollectionMarketplace() {\n  const { canisterId } = useParams<{ canisterId: string }>();\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [sortBy, setSortBy] = useState<null | string>(\"price\");\n  const [pageConfig, setPageConfig] = useState<MarketPageConfig>(Pages[0]);\n\n  const handlePageChange = (page: MarketPageConfig) => {\n    setPageConfig(page);\n  };\n\n  const getComponent = () => {\n    const Component = pageConfig.component;\n    return <Component searchValue={searchValue} sortBy={sortBy} canisterId={canisterId} />;\n  };\n\n  return (\n    <MarketWrapper\n      defaultSortBy={sortBy}\n      onSearchValueChange={setSearchValue}\n      onSortByChange={setSortBy}\n      onPageChange={handlePageChange}\n      title={<CollectionInfo canisterId={canisterId} />}\n    >\n      {getComponent()}\n    </MarketWrapper>\n  );\n}\n"],"names":["SwapNFTIds","customizeTheme","createTheme","breakpoints","values","md","useStyles","makeStyles","theme","descItem","fontSize","lineHeight","infoBox","display","background","palette","level1","borderRadius","gap","padding","down","infoText","fontWeight","color","text","primary","textAlign","CollectionDataItem","_ref","label","value","classes","_jsxs","Box","children","_jsx","Typography","className","component","sx","marginTop","align","CollectionInfo","_ref2","_canister$image","canisterId","result","canister","loading","useCanisterMetadata","collectionResult","useCallsData","useCallback","async","NFTTradeStat","getCanisterStat","resultFormat","data","useCollectionData","mintSupply","canisterMetadata","setMintSupply","useState","undefined","useEffect","includes","cid","getSwapNFTStat","then","useMemo","useNFTMintSupply","matchDownMD","useMediaQuery","matchDown640","links","_canister$linkMap","_links","linkMap","filter","e","k","push","v","_Fragment","mb","Breadcrumbs","prevLink","prevLabel","Trans","id","currentLabel","name","Grid","container","flexDirection","minWidth","LoadingRow","Avatar","src","image","width","height","marginRight","item","mt","VerifyNFT","minter","creator","secondaryColor","CollectionLinks","xs","justifyContent","floorPrice","WICPPriceFormat","imgSize","price","digits","typographyProps","totalTurnover","BigInt","formatAmount","Number","listSize","NFTCollectionMarketplace","useParams","searchValue","setSearchValue","sortBy","setSortBy","pageConfig","setPageConfig","Pages","MarketWrapper","defaultSortBy","onSearchValueChange","onSortByChange","onPageChange","page","title","getComponent","Component"],"sourceRoot":""}
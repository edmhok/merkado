{"version":3,"file":"static/js/4404.7903a7bc.chunk.js","mappings":"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","sources":["components/Layout/CardContent1120.tsx","hooks/useNFTUpload.ts","components/NFT/UploadCloudIcon.tsx","components/NFT/Upload.tsx","utils/type.ts","hooks/nft/useNFTCalls.ts","store/nft/hooks.ts","components/NFT/CanisterCreateConfirm.tsx","components/PercentageSlider/Marks.tsx","views/nft/CanisterCreate.tsx","../packages/utils/src/isValidUrl.ts","../node_modules/.pnpm/@mui+icons-material@5.5.0_@mui+material@5.15.20_@emotion+react@11.11.4_@types+react@17.0.2_re_y34dkmz43sjsezmk4faklzfb6e/node_modules/@mui/icons-material/Add.js","../node_modules/.pnpm/@mui+icons-material@5.5.0_@mui+material@5.15.20_@emotion+react@11.11.4_@types+react@17.0.2_re_y34dkmz43sjsezmk4faklzfb6e/node_modules/@mui/icons-material/HighlightOff.js"],"sourcesContent":["import { Box } from \"@mui/material\";\n\nexport interface CardContent1120Props {\n  children: React.ReactNode;\n}\n\nexport function CardContent1120({ children }: CardContent1120Props) {\n  return (\n    <Box sx={{ display: \"flex\", width: \"100%\", justifyContent: \"center\" }}>\n      <Box sx={{ width: \"100%\", maxWidth: \"1120px\" }}>{children}</Box>\n    </Box>\n  );\n}\n","import { useMemo, useState } from \"react\";\nimport { fileCanisterId, network, NETWORK, host } from \"constants/index\";\nimport { t } from \"@lingui/macro\";\nimport { NFTCanister } from \"@w2e/actor\";\nimport { resultFormat } from \"@w2e/utils\";\n\nexport interface UploadChunkRequest {\n  batch_id: bigint;\n  chunk: Blob;\n  canisterId: string;\n}\n\nconst uploadChunk = async ({ batch_id, chunk, canisterId }: UploadChunkRequest) => {\n  return (await NFTCanister(canisterId, true)).create_chunk({\n    batch_id,\n    content: [...new Uint8Array(await chunk.arrayBuffer())],\n  });\n};\n\nexport interface FileUploadResult {\n  loading: boolean;\n  error: string;\n  data: { filePath: string; batchId: bigint; fileType: string };\n}\n\nexport type UploadCallbackProps = {\n  file: File;\n  canisterId: string;\n};\n\nexport default function useFileUpload({ fileType }: { fileType: string }): [\n  FileUploadResult,\n  ({ file, canisterId }: UploadCallbackProps) => Promise<\n    | {\n        filePath: string;\n        batchId: bigint;\n        fileType: string;\n      }\n    | undefined\n  >,\n] {\n  const [fileError, setFileError] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [filePath, setFilePath] = useState<string>(\"\");\n  const [batchId, setBatchId] = useState<bigint>(BigInt(0));\n\n  const fileUploadCallback = async ({ file, canisterId }: UploadCallbackProps) => {\n    if (uploading) return;\n\n    setUploading(true);\n\n    const actor = await NFTCanister(canisterId, true);\n\n    const result = resultFormat<{\n      batch_id: bigint;\n    }>(await actor.create_batch());\n\n    const batch_id = result.data?.batch_id;\n\n    if (!batch_id && batch_id !== BigInt(0)) {\n      setFileError(t`Failed to create batch${result.message ? `, ${result.message}` : \"\"}`);\n      setUploading(false);\n      return;\n    }\n\n    const promises: Promise<{ chunk_id: bigint }>[] = [];\n\n    const chunkSize = 700000;\n\n    for (let start = 0; start < file.size; start += chunkSize) {\n      const chunk = file.slice(start, start + chunkSize);\n\n      promises.push(\n        uploadChunk({\n          batch_id,\n          chunk,\n          canisterId,\n        }),\n      );\n    }\n\n    const chunkIds = await Promise.all(promises).catch((err) => {\n      console.error(err);\n      setFileError(t`Failed to upload, please try again`);\n      setUploading(false);\n    });\n\n    if (!chunkIds) {\n      setFileError(t`Failed to upload, please try again`);\n      setUploading(false);\n      return;\n    }\n\n    await actor.commit_batch({\n      batch_id,\n      chunk_ids: chunkIds.map(({ chunk_id }) => chunk_id),\n      content_type: file.type,\n    });\n\n    setUploading(false);\n\n    const filePath =\n      network === NETWORK.IC\n        ? `https://${canisterId ?? fileCanisterId}.raw.icp0.io/${batch_id}`\n        : network === NETWORK.LOCAL\n        ? // TODO get from process port\n          `http://localhost:3000/dfx_image/${batch_id}?canisterId=${canisterId ?? fileCanisterId}`\n        : `${host}/${batch_id}?canisterId=${canisterId ?? fileCanisterId}`;\n\n    setFilePath(filePath);\n    setBatchId(batch_id);\n\n    return { filePath, batchId, fileType };\n  };\n\n  return useMemo(\n    () => [\n      {\n        loading: uploading,\n        error: fileError,\n        data: { filePath, batchId, fileType },\n      },\n      fileUploadCallback,\n    ],\n\n    [uploading, filePath, batchId, fileUploadCallback, fileType],\n  );\n}\n","export default function UploadCloudIcon() {\n  return (\n    <svg width=\"58\" height=\"38\" viewBox=\"0 0 58 38\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M0 23.571C0 31.2176 5.94742 37.475 13.4688 37.9699V37.9996H14.2013C14.2775 38.0008 14.3539 38.0014 14.4304 38.0014C14.5069 38.0014 14.5832 38.0008 14.6595 37.9996H44.2536V37.9797C44.4916 37.9934 44.7314 38.0004 44.9729 38.0004C51.7471 38.0004 57.2387 32.5088 57.2387 25.7346C57.2387 19.0745 51.9306 13.6542 45.3142 13.4734C43.6604 5.77266 36.8138 0 28.6189 0C22.0403 0 16.3306 3.72016 13.4787 9.17151C5.95265 9.66151 0 15.9211 0 23.571ZM28.6797 9.62109L39.5638 20.5052H33.0098V31.2837H24.3516V20.5052H17.7956L28.6797 9.62109Z\"\n        fill=\"#4F5A84\"\n      />\n    </svg>\n  );\n}\n","import { useEffect, useState, useImperativeHandle, forwardRef, Ref, useRef } from \"react\";\nimport { Grid, TextField, Typography, useTheme } from \"@mui/material\";\nimport Loading from \"components/Loading\";\nimport { isMobile } from \"react-device-detect\";\nimport useFileUpload from \"hooks/useNFTUpload\";\nimport { getFileType } from \"utils/type\";\nimport { t } from \"@lingui/macro\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Identity as CallIdentity } from \"types/index\";\nimport Identity, { SubmitLoadingProps, IdentityRef } from \"components/Identity\";\nimport CloudUploadIcon from \"./UploadCloudIcon\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return {\n    fileName: {\n      padding: \"0 40px\",\n      ...theme.mixins.overflowEllipsis2,\n    },\n  };\n});\n\nexport interface UploadProps {\n  onUploaded?: (uploadParams: { batch_id: bigint; file_path: string; file_type: string }) => void;\n  maxSize?: number;\n  accept?: string;\n  types?: string[];\n  placeholder?: string;\n  imageProps?: any;\n  beforeUpload?: (file: File) => boolean;\n  canisterId: string;\n  uploadImmediately?: boolean;\n  onFileSelected?: (file: File) => void;\n  onFileError?: (error: string) => void;\n  disabled?: boolean;\n  base64?: boolean;\n  uploadWithIdentity?: boolean;\n  minHeight?: string;\n  [x: string]: any;\n}\n\nexport interface UploadRef {\n  uploadCb: () => Promise<\n    | {\n        filePath: string;\n        batchId: bigint;\n        fileType: string;\n      }\n    | undefined\n  >;\n}\n\nconst Upload = forwardRef(\n  (\n    {\n      onUploaded,\n      maxSize = 10 * 1024 * 1024,\n      accept,\n      types = [],\n      placeholder,\n      imageProps,\n      beforeUpload,\n      canisterId,\n      uploadImmediately = true,\n      onFileSelected,\n      onFileError,\n      disabled,\n      base64,\n      uploadWithIdentity = false,\n      minHeight,\n      ...props\n    }: UploadProps,\n    ref: Ref<UploadRef>,\n  ) => {\n    const classes = useStyles();\n    const theme = useTheme() as Theme;\n    const [file, setFile] = useState<File | null>(null);\n    const [fileType, setFileType] = useState(\"\");\n    const [filePath, setFilePath] = useState(\"\");\n    const [fileName, setFileName] = useState(\"\");\n    const [fileError, setFileError] = useState(\"\");\n    const [imagePreview, setImagePreview] = useState<string>(\"\");\n    const [values, uploadCallback] = useFileUpload({\n      fileType,\n    });\n\n    const identityRef = useRef<IdentityRef>(null);\n\n    const {\n      loading: uploadLoading,\n      error: uploadError,\n      data: { filePath: _filePath, batchId },\n    } = values;\n\n    const textFiledProps = {\n      ...props,\n      defaultValue: undefined,\n    };\n\n    useEffect(() => {\n      if (_filePath) {\n        setFilePath(_filePath);\n      }\n    }, [_filePath]);\n\n    useEffect(() => {\n      if (props.defaultValue) {\n        setImagePreview(props.defaultValue);\n      }\n    }, [props]);\n\n    useEffect(() => {\n      if (filePath) {\n        setImagePreview(filePath);\n        if (onUploaded) {\n          onUploaded({\n            batch_id: batchId,\n            file_path: filePath,\n            file_type: fileType,\n          });\n        }\n      }\n    }, [filePath, fileType]);\n\n    useEffect(() => {\n      if (onFileError) {\n        onFileError(fileError);\n      }\n    }, [fileError]);\n\n    async function uploadCb() {\n      if (file) {\n        return await uploadCallback({\n          file,\n          canisterId,\n        });\n      }\n    }\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        uploadCb,\n      }),\n      [uploadCallback, file, uploadCb],\n    );\n\n    const handleIdentityFileUpload = async (\n      identity: CallIdentity,\n      { loading }: SubmitLoadingProps,\n      { file, canisterId }: any,\n    ) => {\n      if (loading || !file) return;\n\n      await uploadCallback({\n        file: file as File,\n        canisterId,\n      });\n    };\n\n    const fileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (disabled) return;\n      event.preventDefault();\n\n      const targetFile = event.target.files?.[0];\n      let fileType = getFileType(targetFile?.type ?? \"\");\n\n      if (fileType === \"other\" || fileType === \"unKnow\") {\n        const arr = targetFile?.name?.split(\".\") ?? [];\n        fileType = arr[arr.length - 1];\n      }\n\n      if (!targetFile) {\n        setFileError(t`No file selected`);\n        return;\n      }\n\n      if (types.length && !types.includes(fileType)) {\n        setFileError(t`Not allowed this file type`);\n        return;\n      }\n      setFileError(\"\");\n\n      if (maxSize && targetFile.size > maxSize) {\n        setFileError(t`File is large than ${maxSize} bytes`);\n        return;\n      }\n      setFileError(\"\");\n\n      setFileType(fileType);\n      setFileName(targetFile.name);\n      if (onFileSelected) onFileSelected(targetFile);\n\n      let valid = true;\n      if (beforeUpload) valid = beforeUpload(targetFile);\n      if (!valid) return;\n\n      setFile(targetFile);\n\n      if (base64) {\n        if (fileType === \"image\") {\n          const reader = new FileReader();\n          reader.readAsDataURL(targetFile);\n          reader.onload = function onload(event) {\n            if (event.type === \"load\") {\n              setFilePath(reader.result as string);\n            }\n          };\n        }\n      } else if (uploadImmediately) {\n        if (uploadWithIdentity) {\n          identityRef?.current?.submit({ file: targetFile, canisterId });\n        } else {\n          uploadCallback({ file: targetFile, canisterId });\n        }\n      } else if (fileType === \"image\") {\n        const reader = new FileReader();\n        reader.readAsDataURL(targetFile);\n        reader.onload = function onload(event) {\n          if (event.type === \"load\") {\n            setImagePreview(reader.result as string);\n          }\n        };\n      }\n    };\n\n    return (\n      <Grid\n        container\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={{\n          width: \"100%\",\n          height: \"100%\",\n          border: \"1px dashed #4f5a84\",\n          borderRadius: \"8px\",\n          position: \"relative\",\n          padding: \"10px\",\n          minHeight: minHeight ?? \"auto\",\n        }}\n      >\n        {!file ? (\n          <CloudUploadIcon />\n        ) : fileType === \"image\" && imagePreview ? (\n          <img\n            src={imagePreview}\n            alt=\"\"\n            style={{\n              width: \"100%\",\n              height: \"100%\",\n              objectFit: \"cover\",\n              maxWidth: isMobile ? \"140px\" : \"160px\",\n              maxHeight: isMobile ? \"140px\" : \"160px\",\n              ...(imageProps?.style ?? {}),\n            }}\n          />\n        ) : (\n          <Typography className={classes.fileName}>{fileName}</Typography>\n        )}\n\n        <TextField\n          {...textFiledProps}\n          sx={{\n            display: uploadLoading ? \"none\" : \"block\",\n            position: \"absolute\",\n            width: \"100%\",\n            height: \"100%\",\n            zIndex: 5,\n            top: 0,\n            left: 0,\n            background: \"transparent\",\n            \"& div\": {\n              background: \"transparent\",\n            },\n            \"& fieldset\": {\n              display: \"none\",\n            },\n            \"& input\": {\n              opacity: 0,\n              height: \"100%\",\n              cursor: \"pointer\",\n              background: \"transparent\",\n            },\n            \"& label\": {\n              opacity: 0,\n            },\n            \"& .MuiOutlinedInput-root\": {\n              width: \"100%\",\n              height: \"100%\",\n            },\n          }}\n          type=\"file\"\n          inputProps={{\n            accept,\n          }}\n          title=\"\"\n          onChange={fileUpload}\n        />\n        {imagePreview === \"\" && placeholder ? <Typography sx={{ marginTop: \"5px\" }}>{placeholder}</Typography> : null}\n        {!!fileError || !!uploadError ? (\n          <Typography mt=\"4px\" sx={{ color: theme.colors.errorMain, textAlign: \"center\" }}>\n            {fileError || uploadError}\n          </Typography>\n        ) : null}\n        {uploadLoading && <Loading loading={uploadLoading} maskBorderRadius=\"12px\" />}\n        {uploadWithIdentity ? <Identity ref={identityRef} onSubmit={handleIdentityFileUpload} /> : null}\n      </Grid>\n    );\n  },\n);\n\nexport default Upload;\n","export function isImage(fileType: string): boolean {\n  return !!fileType.match(\"image.*\");\n}\n\nexport function isVideo(fileType: string): boolean {\n  return !!fileType.match(\"video.*\");\n}\n\nexport function isAudio(fileType: string): boolean {\n  return !!fileType.match(\"audio.*\");\n}\n\nexport function isJSON(fileType: string): boolean {\n  return fileType === \"application/json\";\n}\n\nexport function isPDF(fileType: string): boolean {\n  return fileType === \"application/pdf\";\n}\n\nexport function isText(fileType: string): boolean {\n  return fileType === \"text/plain\";\n}\n\nexport function isJavascript(fileType: string): boolean {\n  return fileType === \"text/javascript\";\n}\n\nexport function isExcel(fileType: string): boolean {\n  return (\n    fileType === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" ||\n    fileType === \"application/vnd.ms-excel\"\n  );\n}\n\nexport function isDoc(fileType: string): boolean {\n  return (\n    fileType === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" ||\n    fileType === \"application/msword\"\n  );\n}\n\nexport function getFileType(fileType: string): string {\n  if (isImage(fileType)) return \"image\";\n  if (isVideo(fileType)) return \"video\";\n  if (isAudio(fileType)) return \"audio\";\n\n  if (\n    isJSON(fileType) ||\n    isPDF(fileType) ||\n    isText(fileType) ||\n    isJavascript(fileType) ||\n    isExcel(fileType) ||\n    isDoc(fileType)\n  )\n    return \"other\";\n\n  return \"unKnow\";\n}\n\nexport function isValidUrl(urlString: string): boolean {\n  const reg = new RegExp(/http(s)?:\\/\\/([\\w-]+\\.)+[\\w-]+(\\/[\\w- ./?%&=]*)?/);\n  return reg.test(urlString);\n}\n","import { useCallback } from \"react\";\nimport { PaginationResult, Identity } from \"types/index\";\nimport type {\n  NFTTokenMetadata,\n  NFTTransaction,\n  NFTCanisterInfo,\n  NFTTransferArgs,\n  NFTControllerArgs,\n  NFTBatchMintArgs,\n  NFTControllerInfo,\n  StatusResult,\n} from \"@w2e/types\";\nimport { OLD_CANISTER_IDS } from \"constants/nft\";\nimport { resultFormat, principalToAccount, isAvailablePageArgs } from \"@w2e/utils\";\nimport { swapNFT, NFTCanisterController, NFTCanister } from \"@w2e/actor\";\nimport { useCallsData } from \"@w2e/hooks\";\nimport { Principal } from \"@dfinity/principal\";\nimport { v2SwapNFT } from \"actor/swapV2\";\n\nexport async function approveForAll(identity: Identity, spenderCanisterId: string) {\n  const spender = principalToAccount(spenderCanisterId);\n  const result = await (await swapNFT(identity)).approveForAll({ spender: { address: spender }, approved: true });\n  return resultFormat(result);\n}\n\nexport async function allowanceAll(account: string, spenderCanisterId: string) {\n  const spender = principalToAccount(spenderCanisterId);\n  return resultFormat<boolean>(await (await swapNFT()).isApproveForAll(account, spender)).data;\n}\n\nexport async function v2ApproveAll(identity: Identity, spenderCanisterId: string) {\n  const spender = principalToAccount(spenderCanisterId);\n  const result = await (await v2SwapNFT(identity)).approveForAll({ spender: { address: spender }, approved: true });\n  return resultFormat(result);\n}\n\nexport async function v2AllowanceAll(account: string, spenderCanisterId: string) {\n  const spender = principalToAccount(spenderCanisterId);\n  return resultFormat<boolean>(await (await v2SwapNFT()).isApproveForAll(account, spender)).data;\n}\n\nexport async function findTokenListByPool(principal: Principal, pool: string, offset: number, limit: number) {\n  return resultFormat<PaginationResult<NFTTokenMetadata>>(\n    await (await swapNFT()).findTokenListByPool(pool, BigInt(offset), BigInt(limit)),\n  ).data;\n}\n\nexport function useUserNFTs(user: Principal | undefined, offset: number, limit: number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!user || !isAvailablePageArgs(offset, limit)) return undefined;\n\n      return resultFormat<PaginationResult<NFTTokenMetadata>>(\n        await (await swapNFT()).findTokenList({ principal: user }, BigInt(offset), BigInt(limit)),\n      ).data;\n    }, [user]),\n  );\n}\n\nexport async function findV2TokenListByPool(\n  account: string,\n  searchCondition: { k: string; v: string }[],\n  offset: number,\n  limit: number,\n) {\n  return resultFormat<PaginationResult<NFTTokenMetadata>>(\n    await (await v2SwapNFT()).findMatchNFTLists({ address: account }, searchCondition, BigInt(offset), BigInt(limit)),\n  ).data;\n}\n\nexport async function getSwapNFTTokenURI(tokenId: bigint | number) {\n  const { data } = resultFormat<string>(await (await swapNFT()).tokenURI(BigInt(tokenId)));\n  return JSON.parse(data ?? \"\") as { image: string; [key: string]: any };\n}\n\nexport function useMintNFTCallback(): (\n  canisterId: string,\n  identity: Identity,\n  params: NFTBatchMintArgs,\n) => Promise<StatusResult<bigint>> {\n  return useCallback(async (canisterId, identity, params) => {\n    if (params.count && BigInt(params.count) > 1) {\n      return resultFormat<bigint>(await (await NFTCanister(canisterId, identity)).mint_batch(params));\n    }\n\n    return resultFormat<bigint>(\n      await (\n        await NFTCanister(canisterId, identity)\n      ).mint({\n        ...params,\n      }),\n    );\n  }, []);\n}\n\nexport function useNFTMetadata(\n  canisterId: string | undefined | null,\n  tokenId: number | bigint | null | undefined,\n  reload?: any,\n) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || (!tokenId && tokenId !== 0)) return undefined;\n      return resultFormat<NFTTokenMetadata>(await (await NFTCanister(canisterId)).icsMetadata(Number(tokenId))).data;\n    }, [tokenId]),\n    reload,\n  );\n}\n\nexport function useNFTTransaction(\n  canisterId: string,\n  tokenIdentifier: string | null | undefined,\n  offset: number,\n  limit: number,\n  reload?: boolean,\n) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !tokenIdentifier || !isAvailablePageArgs(offset, limit)) return undefined;\n      return resultFormat<PaginationResult<NFTTransaction>>(\n        await (await NFTCanister(canisterId)).findTxRecord(tokenIdentifier, BigInt(offset), BigInt(limit)),\n      ).data;\n    }, [canisterId, tokenIdentifier, offset, limit]),\n    reload,\n  );\n}\n\nexport function useUserNFTTransactions(canisterId: string, account: string, offset: number, limit: number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !account || !isAvailablePageArgs(offset, limit)) return undefined;\n\n      return resultFormat<PaginationResult<NFTTransaction>>(\n        await (await NFTCanister(canisterId)).findTokenTxRecord({ address: account }, BigInt(offset), BigInt(limit)),\n      ).data;\n    }, [account, offset, limit]),\n  );\n}\n\nexport function useNFTTransferCallback(): (\n  canisterId: string,\n  identity: Identity,\n  params: NFTTransferArgs,\n) => Promise<StatusResult<boolean>> {\n  return useCallback(\n    async (canisterId, identity, params) =>\n      resultFormat<boolean>(await (await NFTCanister(canisterId, identity)).transfer(params)),\n    [],\n  );\n}\n\nexport function useCanisterCycles(canisterId: string) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId) return undefined;\n      return resultFormat<bigint>(await (await NFTCanister(canisterId)).cycleBalance()).data;\n    }, [canisterId]),\n  );\n}\n\nexport function useCanisterUserNFTCount(canisterId: string, account: string, reload?: boolean | number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !account) return undefined;\n      return resultFormat<bigint>(await (await NFTCanister(canisterId)).ownerNFTCount({ address: account })).data;\n    }, [canisterId, account]),\n    reload,\n  );\n}\n\nexport function useNFTCanisterList(offset: number, limit: number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!isAvailablePageArgs(offset, limit)) return undefined;\n      return resultFormat<PaginationResult<NFTControllerInfo>>(\n        await (await NFTCanisterController()).findCanister(BigInt(offset), BigInt(limit)),\n      ).data;\n    }, [offset, limit]),\n  );\n}\n\nexport function useUserCanisterList(account: string, offset: number, limit: number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!isAvailablePageArgs(offset, limit)) return undefined;\n      return resultFormat<PaginationResult<NFTControllerInfo>>(\n        await (await NFTCanisterController()).findUserCanister(account, BigInt(offset), BigInt(limit)),\n      ).data;\n    }, [offset, limit]),\n  );\n}\n\nexport async function createCanister(values: NFTControllerArgs): Promise<StatusResult<string>> {\n  return resultFormat<string>(await (await NFTCanisterController(true)).create(values));\n}\n\nexport async function setCanisterLogo(canisterId: string, logo: string) {\n  return resultFormat<boolean>(await (await NFTCanister(canisterId, true)).setLogo(logo));\n}\n\nexport async function setCanisterLogoInController(canisterId: string, logo: string) {\n  return resultFormat<boolean>(await (await NFTCanisterController(true)).setLogo(logo, canisterId));\n}\n\nexport function useCanisterMetadata(canisterId: string) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId) return undefined;\n      if (OLD_CANISTER_IDS.includes(canisterId))\n        return resultFormat<NFTControllerInfo>(await (await NFTCanisterController()).canisterInfo(canisterId)).data;\n      return resultFormat<NFTCanisterInfo>(await (await NFTCanister(canisterId)).canisterInfo()).data;\n    }, [canisterId]),\n  );\n}\n\nexport async function getCanisterLogo(canisterId: string) {\n  // The there canisters doesn't has info method in canister\n  if (OLD_CANISTER_IDS.includes(canisterId))\n    return resultFormat<NFTControllerInfo>(await (await NFTCanisterController()).canisterInfo(canisterId)).data?.image;\n  return resultFormat<NFTCanisterInfo>(await (await NFTCanister(canisterId)).canisterInfo()).data?.image;\n}\n\nexport function useCanisterLogo(canisterId: string) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId) return undefined;\n      return await getCanisterLogo(canisterId);\n    }, [canisterId]),\n  );\n}\n\nexport function useCanisterNFTList(canisterId: string, account: string, offset: number, limit: number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !account || !isAvailablePageArgs(offset, limit)) return undefined;\n\n      return resultFormat<PaginationResult<NFTTokenMetadata>>(\n        await (await NFTCanister(canisterId)).findTokenList({ address: account }, BigInt(offset), BigInt(limit)),\n      ).data;\n    }, [canisterId, account, offset, limit]),\n  );\n}\n\nexport function useNFTMintInfo() {\n  return useCallsData(\n    useCallback(async () => {\n      return resultFormat<[bigint, bigint, string, string]>(await (await NFTCanisterController()).feeInfo()).data;\n    }, []),\n  );\n}\n\nexport async function getSwapNFTStat() {\n  return resultFormat<[bigint, bigint]>(await (await swapNFT()).getNftStat()).data;\n}\n","import { useCallback, useMemo } from \"react\";\nimport { useAppSelector, useAppDispatch } from \"store/hooks\";\nimport { ImportedNFT } from \"types/nft\";\nimport { updateUserSelectedCanisters, deleteUserSelectedCanisters, importNFT, deleteNFT } from \"./actions\";\n\nexport function useSelectedCanisters() {\n  return useAppSelector((state) => state.nft.userSelectedCanisters);\n}\n\nexport function useSelectedCanistersManager(): [\n  string[],\n  (selectedCanisters: string[]) => void,\n  (selectedCanister: string) => void,\n] {\n  const dispatch = useAppDispatch();\n  const userSelectedCanisters = useSelectedCanisters();\n\n  const setUserSelectedCanistersCallback = useCallback(\n    (selectedCanisters: string[]) => {\n      dispatch(updateUserSelectedCanisters(selectedCanisters));\n    },\n    [dispatch],\n  );\n\n  const deleteUserSelectedCanisterCallback = useCallback(\n    (selectedCanister: string) => {\n      dispatch(deleteUserSelectedCanisters(selectedCanister));\n    },\n    [dispatch],\n  );\n\n  return [userSelectedCanisters, setUserSelectedCanistersCallback, deleteUserSelectedCanisterCallback];\n}\n\nexport function useImportedNFTs() {\n  return useAppSelector((state) => state.nft.importedNFTs);\n}\n\nexport function useEXTManager() {\n  const dispatch = useAppDispatch();\n  const importedNFTs = useImportedNFTs();\n\n  const importCall = useCallback(\n    (val: ImportedNFT) => {\n      dispatch(importNFT(val));\n    },\n    [dispatch],\n  );\n\n  const deleteCall = useCallback(\n    (canisterId: string) => {\n      dispatch(deleteNFT({ canisterId }));\n    },\n    [dispatch],\n  );\n\n  return useMemo(\n    () => ({ nfts: importedNFTs, importNFT: importCall, deleteNFT: deleteCall }),\n    [importedNFTs, importCall, deleteCall],\n  );\n}\n","import Modal from \"components/modal/index\";\nimport { Typography, Box, Grid, Button } from \"@mui/material\";\nimport { WRAPPED_ICP_TOKEN_INFO } from \"constants/index\";\nimport { CanisterCreateDetails } from \"types/index\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { parseTokenAmount } from \"@w2e/utils\";\n\nexport default ({\n  open,\n  onConfirm,\n  onClose,\n  details,\n  mintInfo,\n}: {\n  open: boolean;\n  onConfirm: () => Promise<void>;\n  onClose: () => void;\n  details: CanisterCreateDetails;\n  mintInfo: [bigint, bigint, string, string] | undefined | null;\n}) => {\n  return (\n    <>\n      <Modal open={open} title={t`Creation Details`} onClose={onClose}>\n        <Box>\n          <Typography color=\"text.tertiary\" align=\"center\">\n            <Trans>Pay</Trans>\n          </Typography>\n          <Typography\n            variant=\"h2\"\n            color=\"text.primary\"\n            align=\"center\"\n            sx={{\n              marginTop: \"12px\",\n            }}\n          >\n            {parseTokenAmount((mintInfo ?? [])[0], WRAPPED_ICP_TOKEN_INFO.decimals).toNumber()}{\" \"}\n            {WRAPPED_ICP_TOKEN_INFO.symbol}\n          </Typography>\n        </Box>\n\n        <Box>\n          <Grid container mt={2}>\n            <Grid container mt={3}>\n              <Grid item xs>\n                <Typography>\n                  <Trans>Collection Name</Trans>\n                </Typography>\n              </Grid>\n              <Grid item xs>\n                <Typography color=\"textPrimary\" align=\"right\">\n                  {details.name}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Grid container mt={3}>\n              <Grid item xs>\n                <Typography>\n                  <Trans>Creator</Trans>\n                </Typography>\n              </Grid>\n              <Grid item xs>\n                <Typography color=\"textPrimary\" align=\"right\">\n                  {details.minter}\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <Grid container mt={3}>\n              <Grid item xs>\n                <Typography>\n                  <Trans>Royalties</Trans>\n                </Typography>\n              </Grid>\n              <Grid item xs>\n                <Typography color=\"textPrimary\" align=\"right\">\n                  {details.royalties}%\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <Grid container mt={3}>\n              <Grid item xs>\n                <Typography>\n                  <Trans>Social Media Links</Trans>\n                </Typography>\n              </Grid>\n              {(details.socialMediaLinks ?? []).length > 0 ? (\n                <Grid item xs>\n                  {details.socialMediaLinks.map((socialMediaLink) => {\n                    if (socialMediaLink.value && socialMediaLink.label) {\n                      return (\n                        <Typography color=\"textPrimary\" align=\"right\" key={socialMediaLink.label}>\n                          {socialMediaLink.value}\n                        </Typography>\n                      );\n                    }\n                    return null;\n                  })}\n                </Grid>\n              ) : (\n                <Grid item xs>\n                  <Typography color=\"textPrimary\" align=\"right\">\n                    --\n                  </Typography>\n                </Grid>\n              )}\n            </Grid>\n\n            <Grid mt={3}>\n              <Typography>Collection Description</Typography>\n              <Typography\n                color=\"text.tertiary\"\n                sx={{\n                  marginTop: \"8px\",\n                }}\n              >\n                {details.introduction}\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <Grid mt={4} container spacing={3}>\n            <Grid item xs>\n              <Button size=\"large\" variant=\"outlined\" fullWidth onClick={onClose}>\n                Cancel\n              </Button>\n            </Grid>\n            <Grid item xs>\n              <Button variant=\"contained\" size=\"large\" fullWidth onClick={onConfirm}>\n                <Trans>Confirm</Trans>\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </Modal>\n    </>\n  );\n};\n","import { Slider, Tooltip, tooltipClasses } from \"@mui/material\";\nimport { styled, makeStyles } from \"@mui/styles\";\nimport { isDarkTheme } from \"utils\";\nimport { Theme } from \"@mui/material/styles\";\n\nconst useStyle = makeStyles((theme: Theme) => {\n  return {\n    root: {\n      color: theme.colors.secondaryMain,\n      \"& .MuiSlider-rail\": {\n        height: \"4px\",\n        backgroundColor: isDarkTheme(theme) ? theme.palette.background.level4 : \"#fff\",\n      },\n      \"& .MuiSlider-thumb\": {\n        width: \"16px\",\n        height: \"16px\",\n        border: \"2px solid #fff\",\n        marginLeft: \"5px\",\n      },\n      \"& .MuiSlider-mark\": {\n        width: \"12px\",\n        height: \"12px\",\n        borderRadius: \"50%\",\n        backgroundColor: theme.palette.background.level4,\n        top: \"50%\",\n        transform: \"translate(0, -50%)\",\n        opacity: 1,\n        \"&.MuiSlider-markActive\": {\n          backgroundColor: theme.colors.secondaryMain,\n        },\n      },\n    },\n    tooltip: {},\n  };\n});\n\nconst LightTooltip = styled(({ className, ...props }) => <Tooltip {...props} classes={{ popper: className }} />)(\n  ({ theme }: { theme: Theme }) => ({\n    [`& .${tooltipClasses.tooltip}`]: {\n      backgroundColor: theme.colors.secondaryMain,\n      color: \"#fff\",\n      fontWeight: 700,\n    },\n    \"& .MuiTooltip-arrow\": {\n      color: theme.colors.secondaryMain,\n    },\n  }),\n);\n\nconst ValueLabelComponent = (props: any) => {\n  const { children, value } = props;\n  const classes = useStyle();\n\n  return (\n    <LightTooltip placement=\"top\" arrow title={`${value}%`} className={classes.tooltip}>\n      {children}\n    </LightTooltip>\n  );\n};\n\nexport type SliderMark = {\n  value: number;\n};\n\nexport interface SliderProps {\n  marks?: SliderMark[];\n  [x: string]: any;\n}\n\nexport default function PercentageSlider({\n  marks = [{ value: 0 }, { value: 25 }, { value: 50 }, { value: 75 }, { value: 100 }],\n  ...props\n}: SliderProps) {\n  const classes = useStyle();\n\n  return (\n    <Slider\n      {...props}\n      className={classes.root}\n      marks={marks}\n      valueLabelDisplay=\"auto\"\n      components={{\n        ValueLabel: ValueLabelComponent,\n      }}\n    />\n  );\n}\n","import { useState, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Typography, Grid, Box, InputAdornment } from \"@mui/material\";\nimport { MainCard, Breadcrumbs } from \"components/index\";\nimport Upload, { UploadRef } from \"components/NFT/Upload\";\nimport { WRAPPED_ICP_TOKEN_INFO, SOCIAL_LINKS, NFTCanisterController, NFTTradeTokenCanisterId } from \"constants/index\";\nimport { createCanister, setCanisterLogo, useNFTMintInfo, setCanisterLogoInController } from \"hooks/nft/useNFTCalls\";\nimport { useErrorTip } from \"hooks/useTips\";\nimport CanisterCreateConfirm from \"components/NFT/CanisterCreateConfirm\";\nimport { useSelectedCanistersManager } from \"store/nft/hooks\";\nimport FilledTextField, { FilledTextFiledMenus, FilledTextFieldLabel } from \"components/Input/FilledTextField\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { Identity as TypeIdentity, CanisterCreateDetails } from \"types/index\";\nimport PercentageSlider from \"components/PercentageSlider/Marks\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport HighlightOffIcon from \"@mui/icons-material/HighlightOff\";\nimport { BigNumber, parseTokenAmount, isValidUrl, numberToString } from \"@w2e/utils\";\nimport { useApprove } from \"hooks/token/useApprove\";\nimport { useAccount } from \"store/global/hooks\";\nimport Identity, { CallbackProps, SubmitLoadingProps } from \"components/Identity\";\nimport { getLocaleMessage } from \"locales/services\";\nimport Button from \"components/authentication/ButtonConnector\";\nimport { CardContent1120 } from \"components/Layout/CardContent1120\";\n\nexport default function NFTCanisterCreate() {\n  const history = useHistory();\n  const account = useAccount();\n\n  const [values, setValues] = useState<CanisterCreateDetails>({} as CanisterCreateDetails);\n  const [openErrorTip] = useErrorTip();\n  const [canisterId, setCanisterId] = useState(\"\");\n  const [confirmModal, setConfirmModal] = useState(false);\n  const [, setSelectedCanisters] = useSelectedCanistersManager();\n  const uploadRef = useRef<UploadRef>(null);\n  const [file, setFile] = useState<File | null>(null);\n  const [fileError, setFileError] = useState<string>(\"\");\n\n  const { result: NFTMintInfo } = useNFTMintInfo();\n\n  const onFieldChange = (value: string, field: string) => {\n    setValues({\n      ...values,\n      [field]: value,\n    });\n  };\n\n  const onSocialMediaLinkChange = (value: string, index: number) => {\n    const socialMediaLinks = [...(values.socialMediaLinks ?? [])];\n\n    if (socialMediaLinks.find((media) => media.label === value)) return;\n\n    if (socialMediaLinks[index]) {\n      socialMediaLinks.splice(index, 1, { label: value, value: socialMediaLinks[index].value });\n    } else {\n      socialMediaLinks[index] = { label: value, value: \"\" };\n    }\n\n    setValues({\n      ...values,\n      socialMediaLinks,\n    });\n  };\n\n  const handleFileUploaded = ({ file_path }: { file_path: string }) => {\n    setValues({\n      ...values,\n      image: file_path,\n    });\n  };\n\n  const approve = useApprove();\n\n  const handleMint = async (identity: TypeIdentity, { loading, closeLoading }: SubmitLoadingProps) => {\n    if (loading) return;\n\n    const { status: approveStatus } = await approve({\n      canisterId: NFTTradeTokenCanisterId,\n      spender: NFTCanisterController,\n      account,\n      value: numberToString(parseTokenAmount((NFTMintInfo ?? [])[0] ?? 0, WRAPPED_ICP_TOKEN_INFO.decimals)),\n    });\n\n    if (approveStatus === \"err\") {\n      openErrorTip(t`Failed to approve, please try again.`);\n      return;\n    }\n\n    const { status, data, message } = await createCanister({\n      name: values.name,\n      ownerName: values.minter,\n      introduction: values.introduction,\n      royalties: BigInt(new BigNumber(values.royalties).multipliedBy(100).toString()),\n      image: \"\",\n      linkMap: (values.socialMediaLinks ?? []).reduce(\n        (previousValue, currentValue) => {\n          if (currentValue.label && currentValue.value) {\n            return [...previousValue, { k: currentValue.label, v: currentValue.value }];\n          }\n          return [...previousValue];\n        },\n        [] as { k: string; v: string }[],\n      ),\n    });\n\n    if (status === \"ok\") {\n      if (data) {\n        setSelectedCanisters([data]);\n\n        setCanisterId(data);\n\n        const { filePath } = (await uploadRef.current?.uploadCb()) ?? {};\n\n        if (filePath) await setCanisterLogo(data, filePath);\n        if (filePath) await setCanisterLogoInController(data, filePath);\n      }\n\n      history.push(\"/console/nft/canister/list\");\n    } else {\n      openErrorTip(getLocaleMessage(message) ?? t`Failed to create NFT collection`);\n    }\n\n    closeLoading();\n  };\n\n  const handleSocialMediaAdd = () => {\n    if ((values.socialMediaLinks ?? []).length >= 10) return;\n    setValues({\n      ...values,\n      socialMediaLinks: [...(values.socialMediaLinks ?? []), { label: \"\", value: \"\" }],\n    });\n  };\n\n  const handleMediaDelete = (index: number) => {\n    const socialMediaLinks = [...(values.socialMediaLinks ?? [])];\n\n    if (socialMediaLinks[index]) {\n      socialMediaLinks.splice(index, 1);\n    }\n\n    setValues({\n      ...values,\n      socialMediaLinks,\n    });\n  };\n\n  const handleMediaInput = (value: string, index: number) => {\n    const socialMediaLinks = [...(values.socialMediaLinks ?? [])];\n\n    if (socialMediaLinks[index]) {\n      socialMediaLinks.splice(index, 1, { label: socialMediaLinks[index].label, value });\n    }\n\n    setValues({\n      ...values,\n      socialMediaLinks,\n    });\n  };\n\n  const handleFileChange = (file: File) => {\n    setFile(file);\n  };\n\n  const handleFileError = (fileError: string) => {\n    setFileError(fileError);\n  };\n\n  const getErrorMsg = (values: CanisterCreateDetails) => {\n    if (!values.name) return t`Enter collection name`;\n    if (values.name && values.name.toLocaleLowerCase().includes(\"icpswap\")) return t`Invalid collection name`;\n    if (!values.minter) return t`Enter the creator`;\n    if (values.minter && values.minter.toLocaleLowerCase().includes(\"icpswap\")) return t`Invalid collection creator`;\n    if (!values.introduction) return t`Enter the description`;\n    if ((values.socialMediaLinks ?? []).length > 0) {\n      for (let i = 0; i < values.socialMediaLinks.length; i++) {\n        if (!isValidUrl(values.socialMediaLinks[i].value)) {\n          return t`Media link must start with http or https`;\n        }\n      }\n    }\n    if (fileError) return t`File error`;\n    if (!file) return t`Upload collection avatar`;\n    if (!values.royalties && String(values.royalties) !== \"0\") return t`Select the creator royalties`;\n    return undefined;\n  };\n\n  const errorMsg = getErrorMsg(values);\n\n  const isExistInSocialLinks = (value: FilledTextFiledMenus) => {\n    return (values.socialMediaLinks ?? []).findIndex((social) => social.label === value.value) !== -1;\n  };\n\n  return (\n    <CardContent1120>\n      <Breadcrumbs\n        prevLabel={<Trans>NFT Canister List</Trans>}\n        currentLabel={<Trans>Create an NFT Canister</Trans>}\n        prevLink=\"/console/nft/canister/list\"\n      />\n\n      <MainCard sx={{ margin: \"16px 0 0 0\" }}>\n        <Grid container justifyContent=\"center\">\n          <Box\n            sx={{\n              maxWidth: \"474px\",\n              width: \"100%\",\n            }}\n          >\n            <Typography sx={{ margin: \"28px 0 0 0\", fontSize: \"20px\", fontWeight: 700, color: \"text.primary\" }}>\n              <Trans>Create an NFT Canister</Trans>\n            </Typography>\n\n            <Box mt=\"32px\">\n              <FilledTextField\n                label={<Trans>Collection Name</Trans>}\n                labelSize=\"16px\"\n                required\n                fullWidth\n                border=\"none\"\n                placeholder={t`Enter the collection name`}\n                onChange={(value: string) => onFieldChange(value, \"name\")}\n                placeholderSize=\"16px\"\n                fontSize=\"16px\"\n                InputProps={{\n                  disableUnderline: true,\n                  inputProps: {\n                    maxLength: 50,\n                  },\n                }}\n              />\n            </Box>\n\n            <Box mt={3}>\n              <FilledTextField\n                label={<Trans>Collection Description</Trans>}\n                labelSize=\"16px\"\n                required\n                fullWidth\n                multiline\n                rows={4}\n                fontSize=\"16px\"\n                border=\"none\"\n                placeholderSize=\"16px\"\n                placeholder={t`Enter the canister description`}\n                onChange={(value: string) => onFieldChange(value, \"introduction\")}\n                InputProps={{\n                  disableUnderline: true,\n                  inputProps: {\n                    maxLength: 500,\n                  },\n                }}\n              />\n            </Box>\n\n            <Box mt={3}>\n              <FilledTextField\n                label={<Trans>Creator</Trans>}\n                labelSize=\"16px\"\n                required\n                fullWidth\n                border=\"none\"\n                fontSize=\"16px\"\n                placeholderSize=\"16px\"\n                placeholder={t`Enter the creator`}\n                onChange={(value: string) => onFieldChange(value, \"minter\")}\n                InputProps={{\n                  disableUnderline: true,\n                  inputProps: {\n                    maxLength: 50,\n                  },\n                }}\n              />\n            </Box>\n\n            <Box mt={3}>\n              <Grid container>\n                <Grid item xs>\n                  <Typography component=\"span\" fontSize=\"16px\">\n                    <Trans>Social Media Links</Trans>\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <Grid\n                    container\n                    alignItems=\"center\"\n                    justifyContent=\"center\"\n                    sx={{\n                      width: \"72px\",\n                      height: \"31px\",\n                      border: \"1px solid #4F5A84\",\n                      borderRadius: \"8px\",\n                      cursor: \"pointer\",\n                    }}\n                    onClick={handleSocialMediaAdd}\n                  >\n                    <AddIcon fontSize=\"small\" />\n                    <Typography color=\"text.primary\">\n                      <Trans>Add</Trans>\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Box mt={2}>\n                {(values.socialMediaLinks ?? []).map((socialMediaLink, index) => (\n                  <Grid\n                    container\n                    key={socialMediaLink.label ? socialMediaLink.label : index}\n                    sx={{\n                      marginBottom: \"10px\",\n                      \"&:last-child\": {\n                        marginBottom: \"0px\",\n                      },\n                    }}\n                  >\n                    <Box mr=\"10px\" sx={{ width: \"145px\" }}>\n                      <FilledTextField\n                        select\n                        border=\"none\"\n                        placeholder={t`Media`}\n                        value={socialMediaLink.label}\n                        onChange={(value) => onSocialMediaLinkChange(value, index)}\n                        menus={SOCIAL_LINKS}\n                        menuDisabled={(value: FilledTextFiledMenus) => isExistInSocialLinks(value)}\n                      />\n                    </Box>\n                    <Grid item xs>\n                      <FilledTextField\n                        border=\"none\"\n                        fullWidth\n                        placeholderSize=\"16px\"\n                        placeholder={t`Enter your link, e.g. https://yoursite.io`}\n                        onChange={(value: string) => handleMediaInput(value, index)}\n                        InputProps={{\n                          disableUnderline: true,\n                          inputProps: {\n                            maxLength: 100,\n                          },\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <HighlightOffIcon\n                                sx={{\n                                  color: \"#111936\",\n                                  fontSize: \"20px\",\n                                  cursor: \"pointer\",\n                                }}\n                                onClick={() => handleMediaDelete(index)}\n                              />\n                            </InputAdornment>\n                          ),\n                        }}\n                      />\n                    </Grid>\n                  </Grid>\n                ))}\n              </Box>\n            </Box>\n\n            <Box mt={3}>\n              <FilledTextFieldLabel label={<Trans>Upload Collection Avatar</Trans>} labelSize=\"16px\" required />\n\n              <Box mt={2}>\n                <Box\n                  sx={{\n                    height: \"160px\",\n                  }}\n                >\n                  <Upload\n                    ref={uploadRef}\n                    onUploaded={handleFileUploaded}\n                    maxSize={2 * 1024 * 1024}\n                    types={[\"image\"]}\n                    accept=\".jpeg, .png, .jpg, .gif, .apng\"\n                    placeholder={t`Upload collection avatar`}\n                    uploadImmediately={false}\n                    canisterId={canisterId}\n                    onFileSelected={handleFileChange}\n                    onFileError={handleFileError}\n                    imageProps={{\n                      style: {\n                        maxWidth: 108,\n                        maxHeight: 108,\n                      },\n                    }}\n                  />\n                </Box>\n                <Box mt={1}>\n                  <Typography>\n                    <Trans>Support : png / jpg / gif; Size: ≤2M</Trans>\n                  </Typography>\n                </Box>\n              </Box>\n            </Box>\n\n            <Box mt={3}>\n              <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                <FilledTextFieldLabel label={<Trans>Creator Royalty Fee</Trans>} labelSize=\"16px\" required />\n\n                {values.royalties || String(values.royalties) === \"0\" ? (\n                  <Typography component=\"span\" fontSize=\"16px\">\n                    : {values.royalties}%\n                  </Typography>\n                ) : null}\n              </Box>\n\n              <Box mt=\"30px\">\n                <PercentageSlider\n                  value={Number(values.royalties ?? 0)}\n                  onChange={(event: any, value: string) => onFieldChange(value, \"royalties\")}\n                  size=\"small\"\n                  min={0}\n                  max={20}\n                  step={0.1}\n                  marks={[{ value: 0 }, { value: 5 }, { value: 10 }, { value: 15 }, { value: 20 }]}\n                />\n              </Box>\n            </Box>\n\n            <Box mt={4}>\n              <Typography variant=\"h3\" align=\"center\" color=\"textPrimary\">\n                Pay: {parseTokenAmount((NFTMintInfo ?? [])[0] ?? 0, WRAPPED_ICP_TOKEN_INFO.decimals).toNumber()}{\" \"}\n                {WRAPPED_ICP_TOKEN_INFO.symbol}\n              </Typography>\n              <Button\n                fullWidth\n                variant=\"contained\"\n                sx={{\n                  marginTop: \"20px\",\n                }}\n                disabled={!!errorMsg}\n                onClick={() => setConfirmModal(true)}\n              >\n                {errorMsg || t`Create`}\n              </Button>\n            </Box>\n          </Box>\n        </Grid>\n      </MainCard>\n\n      {confirmModal ? (\n        <Identity onSubmit={handleMint} fullScreenLoading>\n          {({ submit }: CallbackProps) => (\n            <CanisterCreateConfirm\n              details={values}\n              open={confirmModal}\n              onClose={() => setConfirmModal(false)}\n              onConfirm={submit}\n              mintInfo={NFTMintInfo}\n            />\n          )}\n        </Identity>\n      ) : null}\n    </CardContent1120>\n  );\n}\n","export function isValidUrl(urlString: string): boolean {\n  const reg = new RegExp(/http(s)?:\\/\\/([\\w-]+\\.)+[\\w-]+(\\/[\\w- .\\/?%&=]*)?/);\n  return reg.test(urlString);\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14.59 8 12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'HighlightOff');\n\nexports.default = _default;"],"names":["CardContent1120","_ref","children","_jsx","Box","sx","display","width","justifyContent","maxWidth","uploadChunk","async","batch_id","chunk","canisterId","NFTCanister","create_chunk","content","Uint8Array","arrayBuffer","UploadCloudIcon","height","viewBox","fill","xmlns","fillRule","clipRule","d","useStyles","makeStyles","theme","fileName","padding","mixins","overflowEllipsis2","forwardRef","ref","_imageProps$style","onUploaded","maxSize","accept","types","placeholder","imageProps","beforeUpload","uploadImmediately","onFileSelected","onFileError","disabled","base64","uploadWithIdentity","minHeight","props","classes","useTheme","file","setFile","useState","fileType","setFileType","filePath","setFilePath","setFileName","fileError","setFileError","imagePreview","setImagePreview","values","uploadCallback","_ref2","uploading","setUploading","batchId","setBatchId","BigInt","fileUploadCallback","_result$data","_ref3","actor","result","resultFormat","create_batch","data","i18n","_","id","0","message","concat","promises","chunkSize","start","size","slice","push","chunkIds","Promise","all","catch","err","console","error","commit_batch","chunk_ids","map","_ref4","chunk_id","content_type","type","network","NETWORK","IC","fileCanisterId","LOCAL","host","useMemo","loading","useFileUpload","identityRef","useRef","uploadLoading","uploadError","_filePath","textFiledProps","defaultValue","undefined","uploadCb","useEffect","file_path","file_type","useImperativeHandle","_jsxs","Grid","container","flexDirection","alignItems","border","borderRadius","position","src","alt","style","objectFit","isMobile","maxHeight","Typography","className","CloudUploadIcon","TextField","zIndex","top","left","background","opacity","cursor","inputProps","title","onChange","_event$target$files","_targetFile$type","event","preventDefault","targetFile","target","files","match","isImage","isVideo","isAudio","isJSON","isPDF","isText","isJavascript","isExcel","isDoc","getFileType","_targetFile$name$spli","_targetFile$name","arr","name","split","length","includes","valid","reader","FileReader","readAsDataURL","onload","_identityRef$current","current","submit","marginTop","mt","color","colors","errorMain","textAlign","Loading","maskBorderRadius","Identity","onSubmit","identity","useMintNFTCallback","useCallback","params","count","mint_batch","mint","useNFTMetadata","tokenId","reload","useCallsData","icsMetadata","Number","useNFTTransaction","tokenIdentifier","offset","limit","isAvailablePageArgs","findTxRecord","useUserNFTTransactions","account","findTokenTxRecord","address","useNFTTransferCallback","transfer","useCanisterCycles","cycleBalance","useCanisterUserNFTCount","ownerNFTCount","useNFTCanisterList","NFTCanisterController","findCanister","useUserCanisterList","findUserCanister","createCanister","create","setCanisterLogo","logo","setLogo","setCanisterLogoInController","useCanisterMetadata","OLD_CANISTER_IDS","canisterInfo","useCanisterLogo","_resultFormat$data","_resultFormat$data2","image","getCanisterLogo","useCanisterNFTList","findTokenList","useNFTMintInfo","feeInfo","getSwapNFTStat","swapNFT","getNftStat","useSelectedCanistersManager","dispatch","useAppDispatch","useAppSelector","state","nft","userSelectedCanisters","selectedCanisters","updateUserSelectedCanisters","selectedCanister","deleteUserSelectedCanisters","useEXTManager","importedNFTs","importCall","val","importNFT","deleteCall","deleteNFT","nfts","_details$socialMediaL","open","onConfirm","onClose","details","mintInfo","_Fragment","Modal","align","Trans","variant","parseTokenAmount","WRAPPED_ICP_TOKEN_INFO","decimals","toNumber","symbol","item","xs","minter","royalties","socialMediaLinks","socialMediaLink","value","label","introduction","spacing","Button","fullWidth","onClick","useStyle","root","secondaryMain","backgroundColor","isDarkTheme","palette","level4","marginLeft","transform","tooltip","LightTooltip","styled","Tooltip","popper","tooltipClasses","fontWeight","ValueLabelComponent","placement","arrow","PercentageSlider","marks","Slider","valueLabelDisplay","components","ValueLabel","NFTCanisterCreate","_values$socialMediaLi9","_values$royalties","_2","history","useHistory","useAccount","setValues","openErrorTip","useErrorTip","setCanisterId","confirmModal","setConfirmModal","setSelectedCanisters","uploadRef","NFTMintInfo","onFieldChange","field","approve","useApprove","errorMsg","_values$socialMediaLi7","urlString","toLocaleLowerCase","i","RegExp","test","String","getErrorMsg","Breadcrumbs","prevLabel","currentLabel","prevLink","MainCard","margin","fontSize","FilledTextField","labelSize","required","placeholderSize","InputProps","disableUnderline","maxLength","multiline","rows","component","handleSocialMediaAdd","_values$socialMediaLi3","_values$socialMediaLi4","AddIcon","index","marginBottom","mr","select","onSocialMediaLinkChange","_values$socialMediaLi","find","media","splice","menus","SOCIAL_LINKS","menuDisabled","_values$socialMediaLi8","findIndex","social","isExistInSocialLinks","handleMediaInput","_values$socialMediaLi6","endAdornment","InputAdornment","HighlightOffIcon","_values$socialMediaLi5","handleMediaDelete","FilledTextFieldLabel","Upload","min","max","step","_values$socialMediaLi2","closeLoading","status","approveStatus","NFTTradeTokenCanisterId","spender","numberToString","ownerName","BigNumber","multipliedBy","toString","linkMap","reduce","previousValue","currentValue","k","v","_await$uploadRef$curr","_uploadRef$current","_getLocaleMessage","getLocaleMessage","fullScreenLoading","CanisterCreateConfirm","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx"],"sourceRoot":""}
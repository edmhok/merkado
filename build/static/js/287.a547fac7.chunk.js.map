{"version":3,"file":"static/js/287.a547fac7.chunk.js","mappings":"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","sources":["../node_modules/.pnpm/@mui+icons-material@5.5.0_@mui+material@5.15.20_@emotion+react@11.11.4_@types+react@17.0.2_re_y34dkmz43sjsezmk4faklzfb6e/node_modules/@mui/icons-material/esm/ArrowBack.js","components/swap/Header.tsx","components/swap/LiquidityInfo.tsx","components/swap/PositionRangeState.tsx","hooks/swap/usePosition.ts","hooks/swap/useIncreaseLiquidity.ts","components/swap/IncreaseLiquiditySteps.tsx","views/swap-liquidity-v3/liquidity/IncreaseLiquidity/index.tsx","../node_modules/.pnpm/@mui+icons-material@5.5.0_@mui+material@5.15.20_@emotion+react@11.11.4_@types+react@17.0.2_re_y34dkmz43sjsezmk4faklzfb6e/node_modules/@mui/icons-material/esm/SyncAlt.js","../packages/swap-sdk/src/utils/getPriceOrderingFromPositionForUI.ts","../packages/swap-sdk/src/utils/invert.ts"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');","import React, { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Grid, Typography } from \"@mui/material\";\nimport { ArrowBack as ArrowBackIcon } from \"@mui/icons-material\";\n// import SwapSettingIcon from \"components/swap/SettingIcon\";\n\nexport interface HeaderTabProps {\n  showArrow?: boolean;\n  showUserSetting?: boolean;\n  title: React.ReactChild;\n  slippageType?: string;\n  onBack?: () => void;\n}\n\nexport default function SwapHeader({ showArrow = false, title, onBack }: HeaderTabProps) {\n  const history = useHistory();\n\n  const handleBack = useCallback(() => {\n    if (onBack) {\n      onBack();\n    } else {\n      history.goBack();\n    }\n  }, [history, onBack]);\n\n  return (\n    <Grid container>\n      <Grid item xs={2} container justifyContent=\"flex-start\">\n        {showArrow && <ArrowBackIcon sx={{ cursor: \"pointer\" }} onClick={handleBack} />}\n      </Grid>\n      <Grid item xs container justifyContent=\"center\">\n        <Typography color=\"textPrimary\" variant=\"h3\">\n          {title}\n        </Typography>\n      </Grid>\n      <Grid\n        item\n        xs={2}\n        container\n        justifyContent=\"flex-start\"\n        sx={{\n          position: \"relative\",\n        }}\n      >\n        {/* {showUserSetting && <SwapSettingIcon type={slippageType} />} */}\n      </Grid>\n    </Grid>\n  );\n}\n","import { useState, useMemo } from \"react\";\nimport { Typography, Grid, Box } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { formatTickPrice } from \"utils/swap/formatTickPrice\";\nimport useIsTickAtLimit from \"hooks/swap/useIsTickAtLimit\";\nimport { Bound } from \"constants/swap\";\nimport { Position, getPriceOrderingFromPositionForUI, useInverter } from \"@w2e/swap-sdk\";\nimport { SyncAlt as SyncAltIcon } from \"@mui/icons-material\";\nimport { Trans } from \"@lingui/macro\";\nimport { Theme, createTheme } from \"@mui/material/styles\";\nimport { TokenImage } from \"components/Image/Token\";\nimport PositionRangeState from \"./PositionRangeState\";\n\nexport const customizeTheme = createTheme({\n  breakpoints: {\n    values: {\n      sm: 680,\n    },\n  },\n});\n\nconst useStyle = makeStyles((theme: Theme) => ({\n  NFTBox: {\n    marginRight: \"12px\",\n    borderRadius: \"12px\",\n    background: theme.palette.background.level2,\n    width: \"300px\",\n    height: \"332px\",\n\n    [customizeTheme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      height: \"332px\",\n      marginBottom: \"20px\",\n      marginRight: \"0px\",\n    },\n  },\n  NFTWrapper: {\n    width: \"300px\",\n    height: \"300px\",\n    position: \"relative\",\n  },\n  currentPrice: {\n    height: \"52px\",\n    borderRadius: \"12px\",\n    border: `1px solid ${theme.palette.background.level3}`,\n    background: theme.palette.background.level2,\n    padding: \"0 20px\",\n  },\n  rangeBox: {\n    height: \"112px\",\n    borderRadius: \"12px\",\n    border: `1px solid ${theme.palette.background.level3}`,\n    background: theme.palette.background.level2,\n  },\n}));\n\nexport interface LiquidityInfoProps {\n  position: Position | undefined;\n  positionId: string | number | bigint | undefined;\n  version?: \"v2\" | \"v3\";\n}\n\nfunction hasLiquidity(position: Position | undefined) {\n  return position?.liquidity?.toString() !== \"0\";\n}\n\nexport default function LiquidityInfo({ position }: LiquidityInfoProps) {\n  const classes = useStyle();\n\n  const { pool, tickLower, tickUpper } = position || {};\n  const { token0, token1, fee: feeAmount } = pool || {};\n\n  const pricesFromPosition = getPriceOrderingFromPositionForUI(position);\n  const [manuallyInverted, setManuallyInverted] = useState(false);\n\n  const { priceLower, priceUpper, base } = useInverter({\n    priceLower: pricesFromPosition.priceLower,\n    priceUpper: pricesFromPosition.priceUpper,\n    quote: pricesFromPosition.quote,\n    base: pricesFromPosition.base,\n    invert: manuallyInverted,\n  });\n\n  const inverted = token1 ? base?.equals(token1) : undefined;\n\n  const currencyQuote = inverted ? token0 : token1;\n  const currencyBase = inverted ? token1 : token0;\n\n  const _tickAtLimit = useIsTickAtLimit(feeAmount, tickLower, tickUpper);\n\n  const tickAtLimit = useMemo(() => {\n    if (!inverted) return _tickAtLimit;\n\n    return {\n      [Bound.LOWER]: _tickAtLimit[Bound.UPPER] ? true : undefined,\n      [Bound.UPPER]: _tickAtLimit[Bound.LOWER] ? true : undefined,\n    };\n  }, [_tickAtLimit, inverted]);\n\n  const pairName = useMemo(() => {\n    return !!currencyQuote && !!currencyBase ? `${currencyQuote?.symbol} per ${currencyBase?.symbol}` : \"--\";\n  }, [currencyQuote, currencyBase]);\n\n  const outOfRange =\n    pool && (tickUpper || tickUpper === 0) && (tickLower || tickLower === 0)\n      ? pool.tickCurrent < tickLower || pool.tickCurrent >= tickUpper\n      : false;\n\n  const closed = !hasLiquidity(position);\n\n  return (\n    <Grid container flexDirection=\"column\">\n      <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n        <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n          <TokenImage logo={token0?.logo} tokenId={token0?.address} />\n          <Box sx={{ width: \"32px\", height: \"32px\", position: \"relative\", left: \"-10px\" }}>\n            <TokenImage logo={token1?.logo} tokenId={token1?.address} />\n          </Box>\n\n          <Typography\n            sx={{\n              fontSize: \"28px\",\n              color: \"#fff\",\n              fontWeight: 500,\n              \"@media(max-width: 640px)\": {\n                fontSize: \"18px\",\n              },\n            }}\n          >\n            {token0?.symbol}\n          </Typography>\n          <Typography\n            sx={{\n              fontSize: \"24px\",\n              color: \"#fff\",\n              fontWeight: 500,\n              margin: \"0 10px\",\n              \"@media(max-width: 640px)\": {\n                fontSize: \"16px\",\n              },\n            }}\n          >\n            /\n          </Typography>\n          <Typography\n            sx={{\n              fontSize: \"28px\",\n              color: \"#fff\",\n              fontWeight: 500,\n              \"@media(max-width: 640px)\": {\n                fontSize: \"18px\",\n              },\n            }}\n          >\n            {token1?.symbol}\n          </Typography>\n        </Box>\n\n        <PositionRangeState outOfRange={outOfRange} closed={closed} />\n      </Grid>\n\n      <Grid item xs sx={{ margin: \"24px 0 0 0\" }}>\n        <Grid container alignItems=\"center\" className={classes.currentPrice}>\n          <Typography color=\"text.primary\">\n            <Trans>Current Price</Trans>\n          </Typography>\n          <Grid item xs>\n            <Grid container alignItems=\"center\" justifyContent=\"flex-end\">\n              <Typography\n                fontWeight=\"500\"\n                color=\"text.primary\"\n                sx={{ maxWidth: \"190px\", whiteSpace: \"nowrap\", textOverflow: \"ellipsis\", overflow: \"hidden\" }}\n              >\n                {!!token1 && !!token0\n                  ? inverted\n                    ? pool?.priceOf(token1)\n                      ? `${pool?.priceOf(token1).toSignificant(6)}`\n                      : \"--\"\n                    : pool?.priceOf(token0)\n                      ? `${pool?.priceOf(token0).toSignificant(6)}`\n                      : \"--\"\n                  : \"--\"}\n              </Typography>\n              <SyncAltIcon\n                sx={{ fontSize: \"1rem\", marginLeft: \"6px\", cursor: \"pointer\" }}\n                onClick={() => setManuallyInverted(!manuallyInverted)}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Box mt=\"20px\">\n          <Grid container alignItems=\"center\">\n            <Grid item xs>\n              <Typography color=\"text.primary\" fontWeight=\"700\">\n                Price Range\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <Box sx={{ display: \"flex\", gap: \"0 24px\" }}>\n            <Grid container justifyContent=\"center\" alignItems=\"center\" mt=\"10px\" className={classes.rangeBox}>\n              <Box>\n                <Grid container justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\n                  <Typography fontSize=\"12px\" fontWeight=\"500\">\n                    Min Price\n                  </Typography>\n                  <Typography fontSize=\"20px\" fontWeight=\"700\" color=\"text.primary\" sx={{ margin: \"6px 0\" }}>\n                    {formatTickPrice(priceLower, tickAtLimit, Bound.LOWER)}\n                  </Typography>\n                  <Typography fontSize=\"12px\" fontWeight=\"500\">\n                    {pairName}\n                  </Typography>\n                </Grid>\n              </Box>\n            </Grid>\n\n            <Grid container justifyContent=\"center\" alignItems=\"center\" mt=\"8px\" className={classes.rangeBox}>\n              <Box>\n                <Grid container justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\n                  <Typography fontSize=\"12px\" fontWeight=\"500\">\n                    Max Price\n                  </Typography>\n                  <Typography fontSize=\"20px\" fontWeight=\"700\" color=\"text.primary\" sx={{ margin: \"6px 0\" }}>\n                    {formatTickPrice(priceUpper, tickAtLimit, Bound.UPPER)}\n                  </Typography>\n                  <Typography fontSize=\"12px\" fontWeight=\"500\">\n                    {pairName}\n                  </Typography>\n                </Grid>\n              </Box>\n            </Grid>\n          </Box>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n","import { Box, Typography, SvgIcon } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Trans } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\n\nconst useStyle = makeStyles((theme: Theme) => {\n  return {\n    wrapper: {\n      display: \"flex\",\n      alignItems: \"center\",\n      height: \"24px\",\n      padding: \"0 9px\",\n      borderRadius: \"8px\",\n\n      \"& .MuiTypography-root\": {\n        fontSize: \"12px\",\n        fontWeight: 500,\n      },\n\n      \"&.inRange\": {\n        background: theme.colors.darkPrimary400,\n      },\n\n      \"&.closed\": {\n        background: theme.colors.darkPrimary400,\n      },\n\n      \"&.outOfRange\": {\n        background: \"#FFC107\",\n        \"& .MuiTypography-root\": {\n          color: theme.colors.darkLevel1,\n          marginLeft: \"3px\",\n        },\n      },\n    },\n  };\n});\n\nfunction Marker(props: any) {\n  return (\n    <SvgIcon width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" {...props}>\n      <path\n        d=\"M5.5 3.5H6.5V4.5H5.5V3.5ZM5.5 5.5H6.5V8.5H5.5V5.5ZM6 1C3.24 1 1 3.24 1 6C1 8.76 3.24 11 6 11C8.76 11 11 8.76 11 6C11 3.24 8.76 1 6 1ZM6 10C3.795 10 2 8.205 2 6C2 3.795 3.795 2 6 2C8.205 2 10 3.795 10 6C10 8.205 8.205 10 6 10Z\"\n        fill={props.color ? props.color : \"#111936\"}\n      />\n    </SvgIcon>\n  );\n}\n\nfunction Closed() {\n  const classes = useStyle();\n\n  return (\n    <Box component=\"span\" className={`${classes.wrapper} closed`}>\n      <Marker fontSize=\"12px\" color=\"#fff\" />\n\n      <Typography color=\"#ffffff\" sx={{ marginLeft: \"3px\" }}>\n        <Trans>Closed</Trans>\n      </Typography>\n    </Box>\n  );\n}\n\nfunction OutOfRange() {\n  const classes = useStyle();\n\n  return (\n    <Box className={`${classes.wrapper} outOfRange`}>\n      <Marker fontSize=\"12px\" />\n\n      <Typography>\n        <Trans>Out of range</Trans>\n      </Typography>\n    </Box>\n  );\n}\n\nfunction InRange() {\n  const classes = useStyle();\n\n  return (\n    <Box className={`${classes.wrapper} inRange`}>\n      <Box\n        component=\"span\"\n        sx={{ background: \"#54C081\", width: \"8px\", height: \"8px\", borderRadius: \"50%\", marginRight: \"8px\" }}\n      />\n      <Typography color=\"#ffffff\">\n        <Trans>In range</Trans>\n      </Typography>\n    </Box>\n  );\n}\n\nexport interface PositionRangeStateProps {\n  outOfRange?: boolean | undefined;\n  closed?: boolean | undefined;\n}\n\nexport default function PositionRangeState({ outOfRange, closed }: PositionRangeStateProps) {\n  return closed ? <Closed /> : outOfRange ? <OutOfRange /> : <InRange />;\n}\n","import { useMemo } from \"react\";\nimport { Position, Pool } from \"@w2e/swap-sdk\";\nimport { useSwapPoolMetadata } from \"@w2e/hooks\";\nimport { usePool, PoolState } from \"hooks/swap/usePools\";\nimport { useToken } from \"hooks/useCurrency\";\n\nexport interface usePositionProps {\n  poolId: string | undefined;\n  tickLower: bigint | undefined;\n  tickUpper: bigint | undefined;\n  liquidity: bigint | undefined;\n}\n\nexport function usePosition(userPosition: usePositionProps | undefined) {\n  const { result: poolMetadata } = useSwapPoolMetadata(userPosition?.poolId);\n\n  const [, currency0] = useToken(poolMetadata?.token0.address);\n  const [, currency1] = useToken(poolMetadata?.token1.address);\n\n  const [poolState, pool] = usePool(\n    currency0 ?? undefined,\n    currency1 ?? undefined,\n    poolMetadata?.fee ? Number(poolMetadata.fee) : undefined,\n  );\n\n  let position: Position | undefined;\n\n  if (\n    pool &&\n    poolMetadata &&\n    userPosition &&\n    userPosition.tickLower !== undefined &&\n    userPosition.tickUpper !== undefined &&\n    userPosition.liquidity !== undefined\n  ) {\n    position = new Position({\n      pool,\n      liquidity: userPosition.liquidity.toString(),\n      tickLower: Number(userPosition.tickLower),\n      tickUpper: Number(userPosition.tickUpper),\n    });\n  }\n\n  return {\n    loading: poolState === PoolState.LOADING,\n    checking: poolState === PoolState.NOT_CHECK,\n    position,\n    pool: pool ?? undefined,\n  };\n}\n\nexport interface usePositionWithPoolProps {\n  pool: Pool | null | undefined;\n  liquidity: number | string | undefined;\n  tickLower: number | string | undefined;\n  tickUpper: number | string | undefined;\n}\n\nexport function usePositionWithPool({ tickLower, tickUpper, liquidity, pool }: usePositionWithPoolProps) {\n  let position: Position | undefined;\n\n  if (pool && liquidity && (tickLower || tickLower === 0) && (tickUpper || tickUpper === 0)) {\n    position = new Position({\n      pool,\n      liquidity,\n      tickLower: Number(tickLower),\n      tickUpper: Number(tickUpper),\n    });\n  }\n\n  return useMemo(() => position, [position]);\n}\n","import { useCallback } from \"react\";\nimport { Position } from \"@w2e/swap-sdk\";\nimport { t } from \"@lingui/macro\";\nimport { getActorIdentity } from \"components/Identity\";\nimport { useAccountPrincipal } from \"store/auth/hooks\";\nimport { getLocaleMessage } from \"locales/services\";\nimport { useStepCalls, newStepKey } from \"hooks/useStepCall\";\nimport { getIncreaseLiquiditySteps } from \"components/swap/IncreaseLiquiditySteps\";\nimport { useStepContentManager } from \"store/steps/hooks\";\nimport { useSwapApprove, useSwapDeposit, useSwapTransfer } from \"hooks/swap/index\";\nimport { isUseTransfer, actualAmountToPool } from \"utils/token/index\";\nimport { useSuccessTip } from \"hooks/useTips\";\nimport { increaseLiquidity } from \"hooks/swap/v3Calls\";\nimport { ExternalTipArgs, OpenExternalTip } from \"types/index\";\nimport { useReclaimCallback } from \"hooks/swap\";\n\nexport interface IncreaseLiquidityArgs {\n  positionId: bigint;\n  position: Position;\n  poolId: string;\n  openExternalTip: OpenExternalTip;\n  stepKey: string;\n}\n\nexport function useIncreaseLiquidityCalls() {\n  const principal = useAccountPrincipal();\n\n  const [openSuccessTip] = useSuccessTip();\n\n  const approve = useSwapApprove();\n  const deposit = useSwapDeposit();\n  const transfer = useSwapTransfer();\n\n  return useCallback(\n    ({ position, poolId, positionId, openExternalTip, stepKey }: IncreaseLiquidityArgs) => {\n      const approveToken0 = async () => {\n        if (!position) return false;\n        const amount0Desired = position.mintAmounts.amount0.toString();\n        if (amount0Desired !== \"0\") return await approve(position.pool.token0, amount0Desired, poolId);\n        return true;\n      };\n\n      const approveToken1 = async () => {\n        if (!position) return false;\n        const amount1Desired = position.mintAmounts.amount1.toString();\n        if (amount1Desired !== \"0\") return await approve(position.pool.token1, amount1Desired, poolId);\n        return true;\n      };\n\n      const transferToken0 = async () => {\n        if (!position) return false;\n        const amount0Desired = position.mintAmounts.amount0.toString();\n        if (amount0Desired !== \"0\") return await transfer(position.pool.token0, amount0Desired, poolId);\n        return true;\n      };\n\n      const transferToken1 = async () => {\n        if (!position) return false;\n        const amount1Desired = position.mintAmounts.amount1.toString();\n        if (amount1Desired !== \"0\") return await transfer(position.pool.token1, amount1Desired, poolId);\n        return true;\n      };\n\n      const depositToken0 = async () => {\n        if (!position) return false;\n        const amount0Desired = position.mintAmounts.amount0.toString();\n        if (amount0Desired !== \"0\") {\n          return await deposit(position.pool.token0, amount0Desired, poolId, ({ message }: ExternalTipArgs) => {\n            openExternalTip({ message, tipKey: stepKey });\n          });\n        }\n        return true;\n      };\n\n      const depositToken1 = async () => {\n        if (!position) return false;\n        const amount1Desired = position.mintAmounts.amount1.toString();\n        if (amount1Desired !== \"0\") {\n          return await deposit(position.pool.token1, amount1Desired, poolId, ({ message }: ExternalTipArgs) => {\n            openExternalTip({ message, tipKey: stepKey });\n          });\n        }\n        return true;\n      };\n\n      const _increaseLiquidity = async () => {\n        if (!position || !principal) return false;\n\n        const identity = await getActorIdentity();\n\n        const { token0 } = position.pool;\n        const { token1 } = position.pool;\n\n        const amount0Desired = actualAmountToPool(token0, position.mintAmounts.amount0.toString());\n        const amount1Desired = actualAmountToPool(token1, position.mintAmounts.amount1.toString());\n\n        const { status, message } = await increaseLiquidity(identity, poolId, {\n          positionId,\n          amount0Desired,\n          amount1Desired,\n        });\n\n        if (status === \"ok\") {\n          openSuccessTip(t`Add Liquidity Successfully`);\n        } else {\n          openExternalTip({ message: getLocaleMessage(message), tipKey: stepKey });\n          return false;\n        }\n\n        return true;\n      };\n\n      return [\n        isUseTransfer(position?.pool.token0) ? transferToken0 : approveToken0,\n        depositToken0,\n        isUseTransfer(position?.pool.token1) ? transferToken1 : approveToken1,\n        depositToken1,\n        _increaseLiquidity,\n      ];\n    },\n    [principal],\n  );\n}\n\nexport interface InitialAddLiquidityStepsArgs {\n  position: Position;\n}\n\nfunction useInitialAddLiquiditySteps() {\n  const stepContentManage = useStepContentManager();\n\n  const handleReclaim = useReclaimCallback();\n\n  return useCallback((key: string, { position }: InitialAddLiquidityStepsArgs) => {\n    const content = getIncreaseLiquiditySteps({\n      position,\n      handleReclaim,\n    });\n\n    stepContentManage(String(key), {\n      content,\n      title: t`Add Liquidity Details`,\n    });\n  }, []);\n}\n\nexport interface IncreaseLiquidityCallProps {\n  position: Position;\n  positionId: bigint;\n  poolId: string;\n  openExternalTip: OpenExternalTip;\n}\n\nexport function useIncreaseLiquidityCall() {\n  const getCalls = useIncreaseLiquidityCalls();\n  const formatCall = useStepCalls();\n  const initialSteps = useInitialAddLiquiditySteps();\n\n  return useCallback(\n    ({ position, positionId, poolId, openExternalTip }: IncreaseLiquidityCallProps) => {\n      const key = newStepKey();\n      const calls = getCalls({ position, positionId, poolId, stepKey: key, openExternalTip });\n      const { call, reset, retry } = formatCall(calls, key);\n\n      initialSteps(key, { position });\n\n      return { call, reset, retry, key };\n    },\n    [getCalls, formatCall, initialSteps],\n  );\n}\n","import { Box, Avatar } from \"@mui/material\";\nimport { Position } from \"@w2e/swap-sdk\";\nimport { parseTokenAmount, toSignificant } from \"@w2e/utils\";\nimport { t, Trans } from \"@lingui/macro\";\nimport { isUseTransfer, actualAmountToPool } from \"utils/token/index\";\nimport { StepDetails } from \"components/Steps/types\";\nimport { TextButton } from \"components/index\";\n\nexport interface IncreaseLiquidityStepsProps {\n  position: Position;\n  handleReclaim: () => void;\n  retry?: () => Promise<boolean>;\n}\n\nexport function getIncreaseLiquiditySteps({ position, handleReclaim }: IncreaseLiquidityStepsProps) {\n  const { token0 } = position.pool;\n  const { token1 } = position.pool;\n\n  const amount0 = toSignificant(\n    parseTokenAmount(\n      actualAmountToPool(token0, position.mintAmounts.amount0.toString()),\n      position.pool.token0.decimals,\n    ).toString(),\n    8,\n    { groupSeparator: \",\" },\n  );\n\n  const amount1 = toSignificant(\n    parseTokenAmount(\n      actualAmountToPool(token1, position.mintAmounts.amount1.toString()),\n      position.pool.token1.decimals,\n    ).toString(),\n    8,\n    { groupSeparator: \",\" },\n  );\n\n  const symbol0 = token0.symbol;\n  const symbol1 = token1.symbol;\n\n  const isToken0UseTransfer = isUseTransfer(token0);\n  const isToken1UseTransfer = isUseTransfer(token1);\n\n  const amount0Value = (\n    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n      <Avatar sx={{ width: \"16px\", height: \"16px\", margin: \"0 4px 0 0\" }} src={position.pool.token0.logo}>\n        &nbsp;\n      </Avatar>\n      {amount0}\n    </Box>\n  );\n\n  const amount1Value = (\n    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n      <Avatar sx={{ width: \"16px\", height: \"16px\", margin: \"0 4px 0 0\" }} src={position.pool.token1.logo}>\n        &nbsp;\n      </Avatar>\n      {amount1}\n    </Box>\n  );\n\n  return [\n    {\n      title: isToken0UseTransfer ? `Transfer ${symbol0}` : `Approve ${symbol0}`,\n      step: 0,\n      children: [\n        { label: t`Amount`, value: amount0Value },\n        { label: t`Canister Id`, value: position.pool.token0.address },\n      ],\n    },\n    {\n      title: t`Deposit ${symbol0}`,\n      step: 1,\n      children: [\n        {\n          label: t`Amount`,\n          value: amount0Value,\n        },\n        { label: t`Canister Id`, value: position.pool.token0.address },\n      ],\n      errorActions: [\n        <>\n          <TextButton onClick={handleReclaim}>\n            <Trans>Reclaim</Trans>\n          </TextButton>\n        </>,\n      ],\n      errorMessage: t`Please click Reclaim your tokens if they've transferred to the swap pool.`,\n    },\n    {\n      title: isToken1UseTransfer ? t`Transfer ${symbol1}` : t`Approve ${symbol1}`,\n      step: 2,\n      children: [\n        { label: t`Amount`, value: amount1Value },\n        { label: t`Canister Id`, value: position.pool.token1.address },\n      ],\n    },\n    {\n      title: t`Deposit ${symbol1}`,\n      step: 3,\n      children: [\n        {\n          label: t`Amount`,\n          value: amount1Value,\n        },\n        { label: t`Canister Id`, value: position.pool.token1.address },\n      ],\n      errorActions: [\n        <>\n          <TextButton onClick={handleReclaim}>\n            <Trans>Reclaim</Trans>\n          </TextButton>\n        </>,\n      ],\n      errorMessage: t`Please click Reclaim your tokens if they've transferred to the swap pool.`,\n    },\n    {\n      title: t`Increase liquidity ${position.pool.token0.symbol} and ${position.pool.token1.symbol}`,\n      step: 4,\n      children: [\n        { label: symbol0, value: amount0Value },\n        { label: symbol1, value: amount1Value },\n      ],\n      errorActions: [\n        <>\n          <TextButton onClick={handleReclaim}>\n            <Trans>Reclaim</Trans>\n          </TextButton>\n        </>,\n      ],\n      errorMessage: t`Please click Reclaim your tokens if they've transferred to the swap pool.`,\n    },\n  ] as StepDetails[];\n}\n","import { ReactChild, useMemo, useCallback, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Grid, Typography, Box } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { MainCard } from \"components/index\";\nimport HeaderTab from \"components/swap/Header\";\nimport DepositAmount from \"components/swap/SwapDepositAmount\";\nimport { FIELD } from \"constants/swap\";\nimport { useMintState, useMintHandlers, useMintInfo, useResetMintState } from \"store/swap/liquidity/hooks\";\nimport { usePosition } from \"hooks/swap/usePosition\";\nimport ConfirmAddLiquidity from \"components/swap/AddLiquidityConfirmModal\";\nimport { useLoadingTip, useErrorTip } from \"hooks/useTips\";\nimport { NONE_TOKEN_SYMBOL } from \"constants/index\";\nimport Loading from \"components/Loading/Static\";\nimport { parseTokenAmount } from \"@w2e/utils\";\nimport BigNumber from \"bignumber.js\";\nimport { Token } from \"@w2e/swap-sdk\";\nimport { isDarkTheme, toSignificantFormatted } from \"utils/index\";\nimport { Trans, t } from \"@lingui/macro\";\nimport Identity, { CallbackProps } from \"components/Identity\";\nimport { useAccountPrincipal } from \"store/auth/hooks\";\nimport { Theme } from \"@mui/material/styles\";\nimport LiquidityInfo from \"components/swap/LiquidityInfo\";\nimport Button from \"components/authentication/ButtonConnector\";\nimport { usePositionDetailsFromId } from \"hooks/swap/v3Calls\";\nimport { actualAmountToPool } from \"utils/token/index\";\nimport { useIncreaseLiquidityCall } from \"hooks/swap/useIncreaseLiquidity\";\nimport StepViewButton from \"components/Steps/View\";\nimport { ExternalTipArgs } from \"types/index\";\nimport { ReclaimTips } from \"components/ReclaimTips\";\nimport { maxAmountFormat } from \"utils/swap\";\n\nconst useStyle = makeStyles((theme: Theme) => {\n  return {\n    container: {\n      width: \"100%\",\n      maxWidth: \"720px\",\n    },\n    currentPrice: {\n      padding: \"16px 20px\",\n      border: theme.palette.border.gray200,\n      backgroundColor: isDarkTheme(theme) ? theme.palette.background.level1 : \"#fff\",\n      borderRadius: \"12px\",\n      marginTop: \"20px\",\n    },\n    range: {\n      width: \"48%\",\n      padding: \"16px 0\",\n      borderRadius: \"12px\",\n      backgroundColor: isDarkTheme(theme) ? theme.palette.background.level2 : \"#fff\",\n    },\n    inputBox: {\n      backgroundColor: theme.palette.background.level3,\n      borderRadius: \"12px\",\n      padding: \"16px 24px 16px 12px\",\n    },\n    input: {\n      \"& input\": {\n        fontSize: \"20px\",\n        fontWeight: 700,\n        textAlign: \"right\",\n        height: \"28px\",\n        padding: \"0 0\",\n      },\n      \"& input::placeholder\": {\n        fontSize: \"20px\",\n        fontWeight: 700,\n      },\n    },\n  };\n});\n\nexport function PriceRange({\n  label,\n  value,\n  currencyA,\n  currencyB,\n}: {\n  label: ReactChild;\n  value: ReactChild;\n  currencyA: Token | undefined;\n  currencyB: Token | undefined;\n}) {\n  const classes = useStyle();\n\n  return (\n    <Grid item container className={classes.range} alignItems=\"center\" flexDirection=\"column\">\n      <Typography fontSize=\"12px\">{label}</Typography>\n      <Box mt=\"12px\">\n        <Typography variant=\"h3\" color=\"textPrimary\">\n          {value}\n        </Typography>\n      </Box>\n      <Box mt=\"12px\">\n        <Typography fontSize=\"12px\">\n          {!!currencyB?.symbol && !!currencyA?.symbol\n            ? `${currencyB?.symbol} per ${currencyA?.symbol}`\n            : NONE_TOKEN_SYMBOL}\n        </Typography>\n      </Box>\n    </Grid>\n  );\n}\n\nexport default function IncreaseLiquidity() {\n  const classes = useStyle();\n  const history = useHistory();\n  const { positionId: _positionId, pool: poolId } = useParams<{ positionId: string; pool: string }>();\n  const positionId = BigInt(_positionId);\n  const { result: _position, loading: positionRequestLoading } = usePositionDetailsFromId(poolId, _positionId);\n  const { position: existingPosition, loading: usePositionLoading } = usePosition({\n    poolId,\n    tickLower: _position?.tickLower,\n    tickUpper: _position?.tickUpper,\n    liquidity: _position?.liquidity,\n  });\n\n  const principal = useAccountPrincipal();\n  const positionLoading = usePositionLoading || positionRequestLoading;\n\n  const currency0 = existingPosition?.pool.token0;\n  const currency1 = existingPosition?.pool.token1;\n\n  const baseCurrency = useMemo(() => currency0, [currency0]);\n  const isSorted = currency0 ? baseCurrency?.equals(currency0) : false;\n  const quoteCurrency = isSorted ? currency1 : currency0;\n\n  const { independentField, typedValue } = useMintState();\n  const {\n    dependentField,\n    parsedAmounts,\n    currencyBalances,\n    position,\n    errorMessage,\n    invalidRange,\n    depositADisabled,\n    depositBDisabled,\n    atMaxAmounts,\n    maxAmounts,\n  } = useMintInfo(\n    baseCurrency ?? undefined,\n    quoteCurrency ?? undefined,\n    existingPosition?.pool.fee,\n    baseCurrency ?? undefined,\n    existingPosition,\n  );\n\n  const { onFieldAInput, onFieldBInput } = useMintHandlers();\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: parsedAmounts[dependentField]?.toSignificant(6) ?? \"\",\n  };\n\n  const isValid = !errorMessage && !invalidRange;\n\n  const [confirmModalShow, setConfirmModalShow] = useState(false);\n\n  const handleIncreaseLiquidity = useCallback(() => {\n    setConfirmModalShow(true);\n  }, [setConfirmModalShow]);\n\n  const handleCancel = useCallback(() => {\n    setConfirmModalShow(false);\n  }, [setConfirmModalShow]);\n\n  const [openLoadingTip, closeLoadingTip] = useLoadingTip();\n  const [openErrorTip] = useErrorTip();\n\n  const resetMintState = useResetMintState();\n\n  const loadLiquidityPage = useCallback(() => {\n    resetMintState();\n    history.push(\"/swap/liquidity\");\n  }, [history, resetMintState]);\n\n  const increaseLiquidityCall = useIncreaseLiquidityCall();\n\n  const handleConfirm = useCallback(async () => {\n    if (!principal) return;\n\n    if (position) {\n      const { call, key } = increaseLiquidityCall({\n        poolId,\n        position,\n        positionId,\n        openExternalTip: ({ message, tipKey }: ExternalTipArgs) => {\n          openErrorTip(<ReclaimTips message={message} tipKey={tipKey} />);\n        },\n      });\n\n      setConfirmModalShow(false);\n\n      const { token0 } = position.pool;\n      const { token1 } = position.pool;\n\n      const amount0Desired = actualAmountToPool(token0, position.mintAmounts.amount0.toString());\n      const amount1Desired = actualAmountToPool(token1, position.mintAmounts.amount1.toString());\n\n      const loadingTipKey = openLoadingTip(\n        t`Add ${toSignificantFormatted(\n          parseTokenAmount(amount0Desired, position.pool.token0.decimals).toString(),\n          8,\n        )} ${position.pool.token0.symbol} and ${toSignificantFormatted(\n          parseTokenAmount(amount1Desired, position.pool.token1.decimals).toString(),\n          8,\n        )} ${position.pool.token1.symbol}`,\n        {\n          extraContent: <StepViewButton step={key} />,\n        },\n      );\n\n      const result = await call();\n\n      if (result) {\n        loadLiquidityPage();\n      }\n\n      closeLoadingTip(loadingTipKey);\n    }\n  }, [position, poolId, positionId]);\n\n  const handleCurrencyAMax = () => {\n    const currencyAAmount = maxAmounts[FIELD.CURRENCY_A];\n    if (!currencyAAmount) return;\n    onFieldAInput(maxAmountFormat(currencyAAmount.toExact(), currencyAAmount.currency.decimals));\n  };\n\n  const handleCurrencyBMax = () => {\n    const currencyAmount = maxAmounts[FIELD.CURRENCY_B];\n    if (!currencyAmount) return;\n    onFieldBInput(maxAmountFormat(currencyAmount.toExact(), currencyAmount.currency.decimals));\n  };\n\n  return (\n    <Identity onSubmit={handleConfirm}>\n      {({ submit, loading }: CallbackProps) => (\n        <Box sx={{ position: \"relative\" }}>\n          <Grid container justifyContent=\"center\">\n            <Box sx={{ width: \"100%\", maxWidth: \"612px\", position: \"relative\" }}>\n              <MainCard level={1} className={`${classes.container} lightGray200`}>\n                <HeaderTab\n                  title=\"Add Liquidity\"\n                  showArrow\n                  showUserSetting\n                  slippageType=\"mint\"\n                  onBack={loadLiquidityPage}\n                />\n\n                <Box mt=\"20px\">\n                  <LiquidityInfo position={existingPosition} positionId={positionId} />\n                </Box>\n\n                <Box mt={3}>\n                  <Typography variant=\"h5\" color=\"textPrimary\">\n                    <Trans>Add more liquidity</Trans>\n                  </Typography>\n                  <Box mt=\"12px\">\n                    <DepositAmount\n                      currency={baseCurrency ?? undefined}\n                      onUserInput={onFieldAInput}\n                      value={formattedAmounts[FIELD.CURRENCY_A]}\n                      locked={depositADisabled}\n                      type=\"addLiquidity\"\n                      currencyBalance={currencyBalances?.[FIELD.CURRENCY_A]}\n                      showMaxButton={\n                        !atMaxAmounts[FIELD.CURRENCY_A] &&\n                        new BigNumber(maxAmounts[FIELD.CURRENCY_A]?.toExact() ?? 0).isGreaterThan(0)\n                      }\n                      onMax={handleCurrencyAMax}\n                    />\n                    <Box mt=\"16px\">\n                      <DepositAmount\n                        currency={quoteCurrency ?? undefined}\n                        onUserInput={onFieldBInput}\n                        value={formattedAmounts[FIELD.CURRENCY_B]}\n                        locked={depositBDisabled}\n                        type=\"addLiquidity\"\n                        currencyBalance={currencyBalances?.[FIELD.CURRENCY_B]}\n                        showMaxButton={\n                          !atMaxAmounts[FIELD.CURRENCY_B] &&\n                          new BigNumber(maxAmounts[FIELD.CURRENCY_B]?.toExact() ?? 0).isGreaterThan(0)\n                        }\n                        onMax={handleCurrencyBMax}\n                      />\n                    </Box>\n                  </Box>\n                </Box>\n                <Box mt={5}>\n                  <Button\n                    fullWidth\n                    variant=\"contained\"\n                    disabled={!isValid || loading}\n                    size=\"large\"\n                    onClick={handleIncreaseLiquidity}\n                  >\n                    {isValid ? t`Add` : errorMessage}\n                  </Button>\n                </Box>\n              </MainCard>\n              {positionLoading && (\n                <Box sx={{ position: \"absolute\", top: 0, left: 0, width: \"100%\", height: \"100%\" }}>\n                  <Loading loading={positionLoading} mask />\n                </Box>\n              )}\n            </Box>\n          </Grid>\n\n          {confirmModalShow && !!position && (\n            <ConfirmAddLiquidity\n              onConfirm={submit}\n              onCancel={handleCancel}\n              open={confirmModalShow}\n              position={position}\n            />\n          )}\n        </Box>\n      )}\n    </Identity>\n  );\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m18 12 4-4-4-4v3H3v2h15zM6 12l-4 4 4 4v-3h15v-2H6z\"\n}), 'SyncAlt');","import { Position } from \"../entities/position\";\n\nexport function getPriceOrderingFromPositionForUI(position: Position | undefined) {\n  if (!position) return {};\n\n  const token0 = position.amount0.currency;\n  const token1 = position.amount1.currency;\n\n  // if both prices are below 1, invert\n  if (position.token0PriceUpper.lessThan(1)) {\n    return {\n      priceLower: position.token0PriceUpper.invert(),\n      priceUpper: position.token0PriceLower.invert(),\n      quote: token0,\n      base: token1,\n    };\n  }\n\n  // otherwise, just return the default\n  return {\n    priceLower: position.token0PriceLower,\n    priceUpper: position.token0PriceUpper,\n    quote: token1,\n    base: token0,\n  };\n}\n","import { Token } from \"../core/entities/token\";\nimport { Price } from \"../core/entities/fractions/price\";\n\ninterface useInverterProps {\n  priceLower: Price<Token, Token> | undefined;\n  priceUpper: Price<Token, Token> | undefined;\n  quote: Token | undefined;\n  base: Token | undefined;\n  invert: boolean;\n}\n\nexport function useInverter({ priceLower, priceUpper, quote, base, invert }: useInverterProps) {\n  return {\n    priceUpper: invert ? priceLower?.invert() : priceUpper,\n    priceLower: invert ? priceUpper?.invert() : priceLower,\n    quote: invert ? base : quote,\n    base: invert ? quote : base,\n  };\n}\n"],"names":["createSvgIcon","_jsx","d","SwapHeader","_ref","showArrow","title","onBack","history","useHistory","handleBack","useCallback","goBack","_jsxs","Grid","container","children","item","xs","justifyContent","ArrowBackIcon","sx","cursor","onClick","Typography","color","variant","position","customizeTheme","createTheme","breakpoints","values","sm","useStyle","makeStyles","theme","NFTBox","marginRight","borderRadius","background","palette","level2","width","height","down","marginBottom","NFTWrapper","currentPrice","border","concat","level3","padding","rangeBox","LiquidityInfo","classes","pool","tickLower","tickUpper","token0","token1","fee","feeAmount","pricesFromPosition","getPriceOrderingFromPositionForUI","manuallyInverted","setManuallyInverted","useState","priceLower","priceUpper","base","useInverter","quote","invert","inverted","equals","undefined","currencyQuote","currencyBase","_tickAtLimit","useIsTickAtLimit","tickAtLimit","useMemo","Bound","LOWER","UPPER","pairName","symbol","outOfRange","tickCurrent","closed","_position$liquidity","liquidity","toString","hasLiquidity","flexDirection","alignItems","Box","display","TokenImage","logo","tokenId","address","left","fontSize","fontWeight","margin","PositionRangeState","className","Trans","id","maxWidth","whiteSpace","textOverflow","overflow","priceOf","toSignificant","SyncAltIcon","marginLeft","mt","gap","formatTickPrice","wrapper","colors","darkPrimary400","darkLevel1","Marker","props","SvgIcon","viewBox","fill","Closed","component","OutOfRange","InRange","usePosition","userPosition","result","poolMetadata","useSwapPoolMetadata","poolId","currency0","useToken","currency1","poolState","usePool","Number","Position","loading","PoolState","LOADING","checking","NOT_CHECK","useInitialAddLiquiditySteps","stepContentManage","useStepContentManager","handleReclaim","useReclaimCallback","key","_ref4","content","amount0","parseTokenAmount","actualAmountToPool","mintAmounts","decimals","groupSeparator","amount1","symbol0","symbol1","isToken0UseTransfer","isUseTransfer","isToken1UseTransfer","amount0Value","Avatar","src","amount1Value","step","label","i18n","_","value","errorActions","_Fragment","TextButton","errorMessage","0","1","getIncreaseLiquiditySteps","String","useIncreaseLiquidityCall","getCalls","principal","useAccountPrincipal","openSuccessTip","useSuccessTip","approve","useSwapApprove","deposit","useSwapDeposit","transfer","useSwapTransfer","positionId","openExternalTip","stepKey","async","amount0Desired","_ref2","message","tipKey","amount1Desired","_ref3","identity","getActorIdentity","status","increaseLiquidity","getLocaleMessage","useIncreaseLiquidityCalls","formatCall","useStepCalls","initialSteps","_ref5","newStepKey","calls","call","reset","retry","gray200","backgroundColor","isDarkTheme","level1","marginTop","range","inputBox","input","textAlign","PriceRange","currencyA","currencyB","NONE_TOKEN_SYMBOL","IncreaseLiquidity","_parsedAmounts$depend","_parsedAmounts$depend2","_positionId","useParams","BigInt","_position","positionRequestLoading","usePositionDetailsFromId","existingPosition","usePositionLoading","positionLoading","baseCurrency","quoteCurrency","independentField","typedValue","useMintState","dependentField","parsedAmounts","currencyBalances","invalidRange","depositADisabled","depositBDisabled","atMaxAmounts","maxAmounts","useMintInfo","onFieldAInput","onFieldBInput","useMintHandlers","formattedAmounts","isValid","confirmModalShow","setConfirmModalShow","handleIncreaseLiquidity","handleCancel","openLoadingTip","closeLoadingTip","useLoadingTip","openErrorTip","useErrorTip","resetMintState","useResetMintState","loadLiquidityPage","push","increaseLiquidityCall","handleConfirm","ReclaimTips","loadingTipKey","toSignificantFormatted","2","3","extraContent","StepViewButton","handleCurrencyAMax","currencyAAmount","FIELD","CURRENCY_A","maxAmountFormat","toExact","currency","handleCurrencyBMax","currencyAmount","CURRENCY_B","Identity","onSubmit","_maxAmounts$FIELD$CUR","_maxAmounts$FIELD$CUR2","_maxAmounts$FIELD$CUR3","_maxAmounts$FIELD$CUR4","submit","MainCard","level","HeaderTab","showUserSetting","slippageType","DepositAmount","onUserInput","locked","type","currencyBalance","showMaxButton","BigNumber","isGreaterThan","onMax","Button","fullWidth","disabled","size","top","Loading","mask","ConfirmAddLiquidity","onConfirm","onCancel","open","token0PriceUpper","lessThan","token0PriceLower"],"sourceRoot":""}
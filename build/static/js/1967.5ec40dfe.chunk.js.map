{"version":3,"file":"static/js/1967.5ec40dfe.chunk.js","mappings":"6IAEe,SAASA,EAASC,GAC/B,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,QAAQ,eAAgBH,EAAKI,UACpCH,EAAAA,EAAAA,KAAA,QAAMI,EAAE,sFAGd,C,6JCGA,MAAMC,EAAYC,IAChBC,EAAAA,EAAAA,IAAYC,IACH,CACLC,aAAc,CACZC,SAAU,WACVC,QAAS,gBACTC,OAAQ,OACRC,MAAO,UACPC,OAAQ,UACRC,iBAAiBC,EAAAA,EAAAA,IAAYR,GACzBA,EAAMS,QAAQC,WAAWC,OACzBb,EACEE,EAAMY,OAAOC,aACb,UACNC,aAAa,GAADC,OAAKf,EAAMgB,OAAM,OAE/BC,mBAAoB,CAClBd,QAAS,SACTC,OAAQ,OACRc,WAAY,OACZR,WAAYV,EAAMmB,YAAYC,gBAC9Bf,MAAO,UACPC,OAAQ,UACRQ,aAAa,GAADC,OAAKf,EAAMgB,OAAM,OAE/BK,MAAO,CACLhB,OAAOG,EAAAA,EAAAA,IAAYR,GAAS,UAAY,UACxC,WAAY,CACVK,MAAO,aAcF,SAASiB,EAAsBC,GAMb,IANc,SAC7CC,EAAQ,QACRC,EAAO,OACP3B,GAAS,EAAK,QACd4B,EAAO,SACPC,GAC4BJ,EAC5B,MAAMK,EAAU/B,EAASC,EAATD,GAEVgC,GAAoBC,EAAAA,EAAAA,cAAY,KAChCJ,GACAD,GAASA,GAAS,GACrB,CAACC,EAASD,IAEb,OAAOD,GACLO,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACC,UAAWN,EAAQ3B,aAAckC,WAAW,SAASV,QAASI,EAAkBlC,SAAA,EAC9FH,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,EAAGC,IAAE,EAAA3C,UAClBoC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACE,WAAW,SAASI,IAAI,QAAO5C,SAAA,EAC7CH,EAAAA,EAAAA,KAACgD,EAAAA,GAAU,CAACC,KAAMjB,EAASiB,KAAMC,KAAK,OAAOC,QAASnB,EAASoB,WAC/DpD,EAAAA,EAAAA,KAACqD,EAAAA,EAAU,CAACC,UAAU,OAAMnD,SAAE6B,EAASuB,eAGzCpB,IACAnC,EAAAA,EAAAA,KAACwD,EAAAA,EAAiB,CAChBd,UAAWN,EAAQP,MACnB4B,GAAI,CACFC,SAAU,UAIfxB,IAAWlC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAO,CAACzB,QAASA,EAAS0B,aAAc,SAGvD5D,EAAAA,EAAAA,KAAC6D,EAAAA,EAAG,CAACnB,UAAWN,EAAQX,mBAAoBQ,QAASI,EAAkBlC,UACrEoC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACE,WAAW,SAAQxC,SAAA,EACjCH,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACC,WAAS,EAACE,WAAW,SAASC,MAAI,EAACE,IAAE,EAAA3C,UACzCH,EAAAA,EAAAA,KAAA8D,EAAAA,GAAA,CAAAC,GAAA,cAEF/D,EAAAA,EAAAA,KAACwD,EAAAA,EAAiB,CAChBd,UAAS,GAAAnB,OAAKa,EAAQP,MAAK,WAC3B4B,GAAI,CACFC,SAAU,cAMtB,C,6FClFe,SAASM,EAAgBjC,GASb,IATc,WACvCkC,EAAU,SACVC,EAAQ,iBACRC,EAAgB,iBAChBC,EAAgB,OAChB9D,GAAS,EAAK,QACd4B,EAAO,SACPC,GAAW,EAAK,QAChBkC,GACsBtC,EACtB,MAAOuC,EAAcC,IAAmBC,EAAAA,EAAAA,WAAS,IAO1C,CAAEC,IAASC,EAAAA,EAAAA,IAAST,GAErBU,GAAsBC,EAAAA,EAAAA,UAAQ,IAC9BT,GAAoBA,EAAiBU,OAChCV,EAAiBW,KAAK9C,GAAqB,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUoB,UAE/C,IACN,CAACe,IAEEY,GAAoBH,EAAAA,EAAAA,UAAQ,IAC5BR,GAAoBA,EAAiBS,OAChCT,EAAiBU,KAAK9C,GAAqB,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUoB,UAE/C,IACN,CAACgB,IAEJ,OACE7B,EAAAA,EAAAA,MAAAyC,EAAAA,SAAA,CAAA7E,SAAA,EACEH,EAAAA,EAAAA,KAACiF,EAAAA,EAAoB,CACnBjD,SAAUyC,EACVxC,QAASA,KACHE,GACJoC,GAAgB,EAAK,EAEvBjE,OAAQA,EACR4B,QAASA,EACTC,UAAQ,IAETmC,IACCtE,EAAAA,EAAAA,KAACkF,EAAAA,GAAQ,CACPC,KAAMb,EACNc,QAASA,IAAMb,GAAgB,GAC/BL,SArCeO,IACjBP,GAAUA,EAASO,GACvBF,GAAgB,EAAM,EAoChBI,oBAAqBA,EACrBI,kBAAmBA,EACnBV,QAASA,MAKnB,C,wECnEe,SAASgB,EAAmBtF,GACzC,MAAM,MAAEuF,GAAUvF,EAElB,OACEC,EAAAA,EAAAA,KAACuF,EAAAA,EAAM,CACLC,QAAQ,YACRC,WAAS,EACThC,GAAI,CACFnC,aAAc,UAEZvB,EAAKI,SAEH,OAALmF,QAAK,IAALA,EAAAA,EAAKI,EAAAA,GAAAC,EAAI,CAAA5B,GAAA,YAGhB,C,+JCLe,SAAS6B,EAAwB7D,GAMb,IAAD8D,EAAAC,EAAA,IANe,KAC/CX,EAAI,SACJY,EAAQ,UACRC,EAAS,SACTtF,EAAQ,oBACRuF,GAC8BlE,EAC9B,MAAMmE,EAAoB,OAARxF,QAAQ,IAARA,GAAc,QAANmF,EAARnF,EAAUyF,YAAI,IAAAN,OAAN,EAARA,EAAgBO,OAC5BC,EAAoB,OAAR3F,QAAQ,IAARA,GAAc,QAANoF,EAARpF,EAAUyF,YAAI,IAAAL,OAAN,EAARA,EAAgBQ,QAE3BC,EAAkBC,IAAuBhC,EAAAA,EAAAA,WAAS,GAEnDiC,GAAe7B,EAAAA,EAAAA,UAAQ,KAC3B,MAAM8B,EAAOT,EACTA,IAAwBC,EACtBA,EACAD,IAAwBI,EACtBA,EACAH,EACJA,EAEJ,OAAIK,EACEG,IAASR,EAAkBG,EACxBH,EAGFQ,CAAI,GACV,CAACT,EAAqBI,EAAWH,EAAWK,IAEzCI,EAASF,IAAiBP,EAC1BU,EAAgBD,EAASN,EAAYH,EAErCW,EC7CD,SAA8B9E,GAAsE,IAArE,SAAErB,EAAQ,SAAEoG,GAAsD/E,EACtG,MAAM,UAAEgF,EAAS,UAAEC,GAActG,GAAY,CAAC,EAExCuG,EAAoB,OAARvG,QAAQ,IAARA,OAAQ,EAARA,EAAUyF,KAAKe,IAE3BC,GAAeC,EAAAA,EAAAA,GAAiBH,EAAWF,EAAWC,GAW5D,OAToBpC,EAAAA,EAAAA,UAAQ,IACrBkC,EAEE,CACL,CAACO,EAAAA,GAAMC,SAAQH,EAAaE,EAAAA,GAAME,aAAgBC,EAClD,CAACH,EAAAA,GAAME,SAAQJ,EAAaE,EAAAA,GAAMC,aAAgBE,GAJ9BL,GAMrB,CAACA,EAAcL,GAGpB,CD4BuBW,CAAsB,CACzC/G,WACAoG,SAAUP,KAGN,MAAEmB,EAAK,WAAEC,EAAU,WAAEC,IAAehD,EAAAA,EAAAA,UAAQ,KAMzC,CACL8C,MANYf,EAASjG,EAASyF,KAAK0B,QAAQnH,EAASyF,KAAKC,QAAU1F,EAASyF,KAAK0B,QAAQnH,EAASyF,KAAKG,QAOvGqB,WALiBhB,EAASjG,EAASoH,iBAAmBpH,EAASqH,iBAAiBC,SAMhFJ,WALiBjB,EAASjG,EAASqH,iBAAmBrH,EAASoH,iBAAiBE,YAOjF,CAACrB,EAAQjG,IAENuH,EAAiBA,KACrBzB,GAAqBD,EAAiB,EAGxC,OACEvG,EAAAA,EAAAA,KAACkI,EAAAA,EAAS,CAAC/C,KAAMA,EAAMC,QAASW,EAAUoC,MAAM,gBAAehI,UAC7DoC,EAAAA,EAAAA,MAAAyC,EAAAA,SAAA,CAAA7E,SAAA,EACEoC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAAC2F,cAAc,SAASC,QAAS,EAAElI,SAAA,EAChDoC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACI,MAAI,EAACH,WAAS,EAAAtC,SAAA,EAClBH,EAAAA,EAAAA,KAACqD,EAAAA,EAAU,CAAAlD,UACTH,EAAAA,EAAAA,KAAA8D,EAAAA,GAAA,CAAAC,GAAA,cAEFxB,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACI,MAAI,EAACE,IAAE,EAACL,WAAS,EAAC2F,cAAc,SAASE,eAAe,WAAUnI,SAAA,EACtEH,EAAAA,EAAAA,KAACqD,EAAAA,EAAU,CAACxC,MAAM,cAAc0H,MAAM,QAAOpI,SAAA,GAAAoB,OACvCb,EAAS8H,QAAQC,cAAc,EAAG,CAAEC,eAAgB,MAAM,KAAAnH,OAAI2E,EAAU3C,WAE9EvD,EAAAA,EAAAA,KAACqD,EAAAA,EAAU,CACTxC,MAAM,cACN0H,MAAM,QACN9E,GAAI,CACFkF,UAAW,OACXxI,SAAA,GAAAoB,OAEEb,EAASkI,QAAQH,cAAc,EAAG,CAAEC,eAAgB,MAAM,KAAAnH,OAAI8E,EAAU9C,iBAIlFhB,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACI,MAAI,EAACH,WAAS,EAAAtC,SAAA,EAClBH,EAAAA,EAAAA,KAACqD,EAAAA,EAAU,CAAAlD,UACTH,EAAAA,EAAAA,KAAA8D,EAAAA,GAAA,CAAAC,GAAA,cAEFxB,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACI,MAAI,EAACE,IAAE,EAACL,WAAS,EAAC6F,eAAe,WAAUnI,SAAA,EAC/CH,EAAAA,EAAAA,KAACqD,EAAAA,EAAU,CAACxC,MAAM,cAAc0H,MAAM,QAAOpI,SAAA,GAAAoB,OACvCmG,EAAMe,cAAc,EAAG,CAAEC,eAAgB,MAAM,KAAAnH,OAAIqF,EAAcrD,OAAM,SAAAhC,OAAQkF,EAAalD,WAGlGvD,EAAAA,EAAAA,KAAC6I,EAAAA,EAAW,CAACpF,GAAI,CAAEC,SAAU,OAAQoF,WAAY,MAAOhI,OAAQ,WAAamB,QAASgG,WAG1F1F,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACI,MAAI,EAACH,WAAS,EAAAtC,SAAA,EAClBH,EAAAA,EAAAA,KAACqD,EAAAA,EAAU,CAAAlD,UACTH,EAAAA,EAAAA,KAAA8D,EAAAA,GAAA,CAAAC,GAAA,cAEFxB,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACI,MAAI,EAACE,IAAE,EAACL,WAAS,EAAC6F,eAAe,WAAUnI,SAAA,EAC/CoC,EAAAA,EAAAA,MAACc,EAAAA,EAAU,CAACxC,MAAM,cAAc0H,MAAM,QAAOpI,SAAA,IAAAoB,QACvCwH,EAAAA,EAAAA,GAAgBpB,EAAYd,EAAcQ,EAAAA,GAAMC,QAAS,KAAG,IAAG,GAAA/F,QAC/DwH,EAAAA,EAAAA,GAAgBnB,EAAYf,EAAcQ,EAAAA,GAAME,QAAU,IAAG,GAAAhG,OAChD,OAAbqF,QAAa,IAAbA,OAAa,EAAbA,EAAerD,OAAM,SAAAhC,OAAoB,OAAZkF,QAAY,IAAZA,OAAY,EAAZA,EAAclD,YAEjDvD,EAAAA,EAAAA,KAAC6I,EAAAA,EAAW,CAACpF,GAAI,CAAEC,SAAU,OAAQoF,WAAY,MAAOhI,OAAQ,WAAamB,QAASgG,cAI5FjI,EAAAA,EAAAA,KAACuF,EAAAA,EAAM,CAACC,QAAQ,YAAYtC,KAAK,QAAQuC,WAAS,EAAChC,GAAI,CAAEkF,UAAW,QAAU1G,QAAS+D,EAAU7F,UAC/FH,EAAAA,EAAAA,KAAA8D,EAAAA,GAAA,CAAAC,GAAA,iBAKV,C,wIE7HA,QAAgBhE,IAEZC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,QAAQ,eAAgBH,EAAKI,UACpCH,EAAAA,EAAAA,KAAA,QACEgJ,SAAS,UACTC,SAAS,UACT7I,EAAE,8oBACF8I,KAAK,c,8CCEb,MAAM7I,GAAWE,EAAAA,EAAAA,IAAYC,IACpB,CACL2I,IAAK,CACHzI,SAAU,WACVY,aAAa,GAADC,OAAKf,EAAMgB,OAAM,MAC7BT,gBAAiBP,EAAMS,QAAQC,WAAWkI,OAC1CC,OAAQ7I,EAAMS,QAAQoI,OAAOC,SAE/BC,MAAO,CACL,UAAW,CACTC,UAAW,QACX9F,SAAU,OACV+F,WAAY,IAEZ,CAACjJ,EAAMkJ,YAAYC,KAAK,OAAQ,CAC9BjG,SAAU,SAGd,uBAAwB,CACtBA,SAAU,OACV+F,WAAY,IACZ,CAACjJ,EAAMkJ,YAAYC,KAAK,OAAQ,CAC9BjG,SAAU,UAIhBkG,KAAM,CACJjJ,QAAS,SACTC,OAAQ,OACRG,iBAAiBC,EAAAA,EAAAA,IAAYR,GAASA,EAAMS,QAAQC,WAAWC,OAASX,EAAMY,OAAOC,aACrFC,aAAa,GAADC,OAAKf,EAAMgB,OAAM,MAC7B,mBAAoB,CAClBqI,YAAa,SAGjBC,UAAW,CACTnJ,QAAS,UACTG,OAAQ,UACRQ,aAAc,MACdP,gBAAiBP,EAAMY,OAAO2I,cAC9BlJ,MAAO,eAKPmJ,EAAWjI,IAA6C,IAA5C,KAAEkI,GAAoClI,EACtD,MAAMvB,GAAQ0J,EAAAA,EAAAA,KAEd,OACE3H,EAAAA,EAAAA,MAACsB,EAAAA,EAAG,CACFJ,GAAI,CACF/C,SAAU,WACVyJ,MAAO,OACPvJ,OAAQ,OACRwJ,IAAK,EACLC,KAAM,GACNlK,SAAA,EAEFH,EAAAA,EAAAA,KAAC6D,EAAAA,EAAG,CACFJ,GAAI,CACF/C,SAAU,WACVyJ,MAAO,OACPvJ,OAAQ,OACRwJ,IAAK,EACLC,KAAM,EACNnJ,WAAqB,iBAAT+I,EAA0BzJ,EAAMS,QAAQC,WAAWC,OAASX,EAAMS,QAAQC,WAAWoJ,OACjGC,QAAS,GACTjJ,aAAc,WAGlBiB,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CACHC,WAAS,EACTgB,GAAI,CACF/C,SAAU,WACVyJ,MAAO,OACPvJ,OAAQ,OACRwJ,IAAK,EACLC,KAAM,EACNG,OAAQ,GAEVlC,eAAe,SACf3F,WAAW,SAAQxC,SAAA,EAEnBH,EAAAA,EAAAA,KAACyK,EAAQ,KACTzK,EAAAA,EAAAA,KAACqD,EAAAA,EAAU,CAACkF,MAAM,SAAS1H,MAAM,cAAaV,UAC5CH,EAAAA,EAAAA,KAAA8D,EAAAA,GAAA,CAAAC,GAAA,kBAGA,EAeK,SAAS2G,EAAiBC,GASb,IAADC,EAAA,IATe,SACxC5I,EAAQ,MACR6I,EAAK,OACLC,GAAS,EAAK,YACdC,EAAW,KACXd,EAAI,gBACJe,EAAe,cACfC,EAAa,MACbC,GACuBP,EACvB,MAAMvI,EAAU/B,IAEV8K,EAA6B,QAArBP,EAAW,OAAR5I,QAAQ,IAARA,OAAQ,EAARA,EAAUmJ,gBAAQ,IAAAP,EAAAA,EAAIQ,EAAAA,GAEvC,OACE7I,EAAAA,EAAAA,MAACsB,EAAAA,EAAG,CAACJ,GAAI,CAAE4H,EAAG,GAAK3I,UAAWN,EAAQ+G,IAAIhJ,SAAA,EACxCoC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACE,WAAW,SAAQxC,SAAA,EACjCH,EAAAA,EAAAA,KAACsL,EAAAA,EAAI,CACH5I,UAAWN,EAAQwH,KACnB2B,MAAe,OAARvJ,QAAQ,IAARA,OAAQ,EAARA,EAAUuB,OACjBiI,QAAQxL,EAAAA,EAAAA,KAACgD,EAAAA,GAAU,CAACC,KAAc,OAARjB,QAAQ,IAARA,OAAQ,EAARA,EAAUiB,KAAME,QAAiB,OAARnB,QAAQ,IAARA,OAAQ,EAARA,EAAUyJ,QAAQrI,aAEvEpD,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACI,MAAI,EAACE,IAAE,EAAA3C,UACXH,EAAAA,EAAAA,KAAC0L,EAAAA,GAAe,CACdb,MAAOA,EACPpF,WAAS,EACT/C,UAAWN,EAAQmH,MACnBoC,YAAY,MACZnG,QAAQ,WACRoG,aAAc,CACZC,mBAAmB,EACnBC,aAAcX,EAAWC,EAAAA,GAAuBA,EAAAA,GAAuBD,EACvEY,eAAe,EACfC,UAAWC,EAAAA,IAEb/H,SAAWgI,IACTnB,EAAYmB,EAAEC,OAAOtB,MAAM,UAKnCtI,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAAC2J,GAAI,EAAEjM,SAAA,EACpBH,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,EAAE1C,UACfoC,EAAAA,EAAAA,MAACc,EAAAA,EAAU,CAAAlD,SAAA,EACTH,EAAAA,EAAAA,KAAA8D,EAAAA,GAAA,CAAAC,GAAA,WAAuB,IAAE/B,GAAWqK,EAAAA,EAAAA,GAAqBrB,EAAiBhJ,EAASmJ,UAAY,UAGlGF,IACCjL,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAAArC,UACHH,EAAAA,EAAAA,KAACqD,EAAAA,EAAU,CAACK,SAAU,GAAIhB,UAAWN,EAAQ0H,UAAW7H,QAASiJ,EAAM/K,UACrEH,EAAAA,EAAAA,KAAA8D,EAAAA,GAAA,CAAAC,GAAA,kBAKP+G,IAAU9K,EAAAA,EAAAA,KAACgK,EAAQ,CAACC,KAAMA,MAGjC,C,0KClKO,MAAMqC,EAAkB,CAC7B,CAACC,EAAAA,GAAUC,KAAG9G,EAAAA,GAAAC,EAAG,CAAA5B,GAAA,WACjB,CAACwI,EAAAA,GAAUE,QAAM/G,EAAAA,GAAAC,EAAG,CAAA5B,GAAA,WACpB,CAACwI,EAAAA,GAAUG,MAAIhH,EAAAA,GAAAC,EAAG,CAAA5B,GAAA,YAGd4I,EAAe,eAOfC,EAA0B,CAC9B,CACEC,QAASN,EAAAA,GAAUC,IACnBM,YAAaR,EAAgBC,EAAAA,GAAUC,MAEzC,CACEK,QAASN,EAAAA,GAAUE,OACnBK,YAAaR,EAAgBC,EAAAA,GAAUE,SAEzC,CACEI,QAASN,EAAAA,GAAUG,KACnBI,YAAaR,EAAgBC,EAAAA,GAAUG,QAI9BK,EAAaC,GAClB,GAANzL,OAAU,IAAI0L,EAAAA,EAAUD,GAAUE,IAAI,KAAOC,WAAU,KAGnD9M,GAAWE,EAAAA,EAAAA,IAAYC,IAC3B,MAAM6I,EAAS,oBAEf,MAAO,CACL+D,QAAS,CACPzM,QAAS,YACT0I,QAAQrI,EAAAA,EAAAA,IAAYR,GAAS6I,EAAM,aAAA9H,OAAgBf,EAAMY,OAAOiM,yBAChE/L,aAAc,OACdR,OAAQ,UACRC,iBAAiBC,EAAAA,EAAAA,IAAYR,GAAS,cAAgB,OACtD,WAAY,CACV6I,OAAO,sBAGXiE,OAAQ,CACNnD,MAAO,OACPxJ,QAAS,UACTI,iBAAiBC,EAAAA,EAAAA,IAAYR,GAASA,EAAMS,QAAQC,WAAWqM,OAAS/M,EAAMY,OAAOC,aACrFC,aAAc,MACdR,OAAQ,UACR0M,QAAS,OACTnE,OAAQ,OACRxI,MAAOL,EAAMmB,YAAY8L,YACzB,CAACjN,EAAMkJ,YAAYC,KAAK,OAAQ,CAC9BjG,SAAU,SAGdgK,UAAW,CACT,CAAClN,EAAMkJ,YAAYC,KAAK,OAAQ,CAC9BgE,QAAS,OACThL,WAAY,SACZ6G,UAAW,WAGfoE,UAAW,CACTvE,QAAQrI,EAAAA,EAAAA,IAAYR,GAAS6I,EAAM,aAAA9H,OAAgBf,EAAMY,OAAOiM,yBAChE/L,aAAc,OACdP,iBAAiBC,EAAAA,EAAAA,IAAYR,GAAS,cAAgB,QAEzD,IA6DY,SAASqN,EAAelD,GAIb,IAJc,UACtCmD,EAAS,UACTC,EAAS,iBACTC,EAAmBzB,EAAAA,GAAUE,QACR9B,EACrB,MAAMvI,EAAU/B,KAETuN,IAAapJ,EAAAA,EAAAA,UAAoBwJ,GAGlCC,GAAgBrJ,EAAAA,EAAAA,UAAQ,IACrBgI,EAAW9H,KAAKoC,IACrB,GAAc,OAAT4G,QAAS,IAATA,GAAAA,EAAW1K,SAAqB,OAAT2K,QAAS,IAATA,GAAAA,EAAW3K,QAEvC,MAAO,CACL8D,IAAKA,EAAI2F,QACTzG,OAAQ0H,EAAU1K,QAClBkD,OAAQyH,EAAU3K,QACnB,KAEF,CAACwJ,EAAYkB,EAAWC,KAEnBG,OAAQC,IAAQC,EAAAA,EAAAA,IAA4BH,GAE9CI,GAAOzJ,EAAAA,EAAAA,UAAQ,IACZgI,EAAW9H,KAAI,CAACoC,EAAKoH,IACtBH,GAAOA,EAAIG,GACN,IACFH,EAAIG,MACJpH,GAIA,IACFA,MAGN,CAACiH,EAAKvB,IAMH2B,GAJUvB,EAIeY,EAHtBS,EAAKG,QAAQtH,GAAQA,EAAI2F,UAAYG,IAAU,IADxCA,MAehB,MAAMyB,EAAmBJ,EAAKK,QAC5B,CAACC,EAAaC,KAAkB,IAADC,EAAAC,EAC7B,MAAO,CACL,IAAI7B,EAAAA,EAAU0B,EAAY,IAAII,KAA0B,QAAtBF,EAACD,EAAaI,gBAAQ,IAAAH,EAAAA,EAAI,GAC5D,IAAI5B,EAAAA,EAAU0B,EAAY,IAAII,KAA0B,QAAtBD,EAACF,EAAaK,gBAAQ,IAAAH,EAAAA,EAAI,GAC7D,GAEH,CAAC,IAAI7B,EAAAA,EAAU,GAAI,IAAIA,EAAAA,EAAU,KAiB7BiC,GAdgB5M,EAAAA,EAAAA,cACnB4E,IAAkB,IAADiI,EAAAC,EAAAC,EAChB,OAAKZ,EACD,IAAIxB,EAAAA,EAAsB,QAAbkC,EAACjI,EAAI8H,gBAAQ,IAAAG,EAAAA,EAAI,GAAGG,UAAU,GAAW,eAEpD,GAAN/N,OAAU,IAAI0L,EAAAA,EAAsB,QAAbmC,EAAClI,EAAI8H,gBAAQ,IAAAI,EAAAA,EAAI,GACrCL,KAAiB,QAAbM,EAACnI,EAAI+H,gBAAQ,IAAAI,EAAAA,EAAI,GACrBnC,IAAI,IAAID,EAAAA,EAAUwB,EAAiB,IAAIM,KAAKN,EAAiB,KAC7Dc,aAAa,KACbC,QAAQ,EAAG,GAAE,KAPc,cAOd,GAElB,CAACf,GAGgCgB,CAAclB,GAEjD,OACEvO,EAAAA,EAAAA,KAAAgF,EAAAA,SAAA,CAAA7E,UACEH,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACC,WAAS,EAACgB,GAAI,CAAE4H,EAAG,GAAK3I,UAAWN,EAAQwL,UAAUzN,UACzDoC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACI,MAAI,EAACE,GAAI,EAAE3C,SAAA,EACfH,EAAAA,EAAAA,KAACqD,EAAAA,EAAU,CAACmC,QAAQ,KAAK3E,MAAM,cAAaV,UAC1CH,EAAAA,EAAAA,KAAA8D,EAAAA,GAAA,CAAAC,GAAA,SAAA2L,OAAA,CAAAC,EAAQ5C,EAAUwB,EAAgB1B,eAEpC7M,EAAAA,EAAAA,KAAC6D,EAAAA,EAAG,CAACuI,GAAI,EAAEjM,UACTH,EAAAA,EAAAA,KAACqD,EAAAA,EAAU,CAACX,UAAWN,EAAQkL,OAAQhK,UAAU,OAAOzC,MAAM,cAAc6C,SAAS,OAAMvD,SACxF+O,IAA+BvC,EAAYjH,EAAAA,GAAAC,EAAG,CAAA5B,GAAA,WAAc2B,EAAAA,GAAAC,EAAG,CAAA5B,GAAA,SAAA2L,OAAA,CAAAR,2BAAIA,eAgClF,C,0HCjQA,SAASU,IACP,OACE5P,EAAAA,EAAAA,KAAA,OAAKmK,MAAM,IAAIvJ,OAAO,IAAIV,QAAQ,UAAUgJ,KAAK,OAAO2G,MAAM,6BAA4B1P,UACxFH,EAAAA,EAAAA,KAAA,QACEgJ,SAAS,UACTC,SAAS,UACT7I,EAAE,oGACF8I,KAAK,aAIb,CASA,SAAS4G,EAAW/N,GAA2E,IAA1E,SAAE5B,EAAQ,QAAE4P,GAA2DhO,EAC1F,OACEQ,EAAAA,EAAAA,MAACyN,EAAAA,GAAO,CAAA7P,SAAA,EACNH,EAAAA,EAAAA,KAACiQ,EAAAA,GAAQ,CAACC,KAAMH,KAChB/P,EAAAA,EAAAA,KAAC6D,EAAAA,EAAG,CAACuI,GAAI,EAAEjM,SAAEA,MAGnB,CAEO,SAASgQ,EAAaxF,GAA+C,IAA9C,SAAExK,GAAyCwK,EACvE,MAAMoF,EAAU,CACd,CAAEhM,GAAI,EAAG8G,MAAKnF,EAAAA,GAAAC,EAAE,CAAA5B,GAAA,WAASqM,KAAM,gBAAiBC,IAAK,SACrD,CACEtM,GAAI,EACJsM,IAAK,qBACLxF,MAAKnF,EAAAA,GAAAC,EAAE,CAAA5B,GAAA,WACPqM,KAAM,sBAER,CACErM,GAAI,EACJsM,IAAK,UACLxF,OACEtI,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAAAtC,SAAA,EACbH,EAAAA,EAAAA,KAACqD,EAAAA,EAAU,CACTI,GAAI,CACFgG,WAAY,IACZ,4BAA6B,CAC3B/F,SAAU,SAEZvD,SACH,cAGDH,EAAAA,EAAAA,KAAC6D,EAAAA,EAAG,CAACJ,GAAI,CAAE6M,OAAQ,YAAa5P,SAAU,WAAY0J,IAAK,QAASjK,UAClEH,EAAAA,EAAAA,KAAC4P,EAAQ,SAIfQ,KAAM,UAIV,OAAOpQ,EAAAA,EAAAA,KAAC8P,EAAW,CAACC,QAASA,EAAQ5P,SAAEA,GACzC,CAEe,SAASoQ,EAAYC,GAA+C,IAA9C,SAAErQ,GAAyCqQ,EAC9E,MAAMT,EAAU,CACd,CAAEhM,GAAI,EAAG8G,MAAKnF,EAAAA,GAAAC,EAAE,CAAA5B,GAAA,WAAYqM,KAAM,QAASC,IAAK,SAChD,CACEtM,GAAI,EACJsM,IAAK,kBACLxF,MAAKnF,EAAAA,GAAAC,EAAE,CAAA5B,GAAA,WACPqM,KAAM,oBAiBV,OAAOpQ,EAAAA,EAAAA,KAAC8P,EAAW,CAACC,QAASA,EAAQ5P,SAAEA,GACzC,C,oNC9FA,QAAgBJ,IAEZwC,EAAAA,EAAAA,MAACtC,EAAAA,EAAO,CAACC,QAAQ,eAAgBH,EAAKI,SAAA,EACpCH,EAAAA,EAAAA,KAAA,QACEI,EAAE,gMACF8I,KAAK,aAEPlJ,EAAAA,EAAAA,KAAA,QACEI,EAAE,8rBACF8I,KAAK,aAEPlJ,EAAAA,EAAAA,KAAA,QACEI,EAAE,4eACF8I,KAAK,e,oCCTb,MAAM7I,GAAWE,EAAAA,EAAAA,IAAYC,IAAY,CACvCiC,UAAW,CACTvB,YAAYF,EAAAA,EAAAA,IAAYR,GAASA,EAAMS,QAAQC,WAAWkI,OAAS,OACnEC,OAAQ7I,EAAMS,QAAQoI,OAAOC,QAC7BhI,aAAc,MACdX,QAAS,OAEXiC,KAAM,CACJtB,aAAc,MACd,WAAY,CACVJ,YAAYF,EAAAA,EAAAA,IAAYR,GAASA,EAAMS,QAAQC,WAAWoJ,OAAS,YAGvEmG,WAAY,CACV/O,WAAY,OACZf,QAAS,kBAIE,SAAS+P,EAAW3O,GAQ/B,IARgC,UAClC+L,EAAS,UACTC,EAAS,aACT4C,GAKD5O,EACC,MAAMK,EAAU/B,IAEVuQ,EAAW9C,GAAaC,GAAaD,EAAU+C,YAAY9C,GAEjE,OAAOD,GAAaC,GAClBxL,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACC,UAAWN,EAAQK,UAAWR,QAAS0O,EAAaxQ,SAAA,EAClEH,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACE,UAAS,GAAAnB,OAAKa,EAAQQ,MAAIrB,OAAGqP,EAAW,UAAY,IAAKzQ,UAC7DH,EAAAA,EAAAA,KAAC8Q,EAAAA,EAAU,CAACpO,UAAWN,EAAQqO,WAAWtQ,SAAEyQ,EAAW9C,EAAUvK,OAASwK,EAAUxK,YAEtFvD,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACE,UAAS,GAAAnB,OAAKa,EAAQQ,MAAIrB,OAAIqP,EAAuB,GAAZ,WAAiBzQ,UAC9DH,EAAAA,EAAAA,KAAC8Q,EAAAA,EAAU,CAACpO,UAAWN,EAAQqO,WAAWtQ,SAAEyQ,EAAW7C,EAAUxK,OAASuK,EAAUvK,cAGtF,IACN,C,+IC7CA,MAAMwN,EAAqB,EAgBZ,SAASC,EACtB5K,EACAE,EACA2K,EACAC,EACAC,EACAC,GAEA,IAAIC,EAAuC,IACtCJ,GAIDK,EAAkC,GAEtC,IAAK,IAAIC,EAAIJ,GAASC,EAAY,GAAK,GAAIA,EAAYG,EAAIL,EAAerM,OAAS0M,GAAK,EAAGH,EAAYG,IAAMA,IAAK,CAChH,MAAMC,EAAUC,OAAOP,EAAeK,GAAGC,SACnCE,EAAuB,CAC3BC,gBAAiBN,EAAsBM,gBACvCH,UACAI,aAAcC,IAAAA,OAAYX,EAAeK,GAAGK,cAC5CE,QAAQC,EAAAA,EAAAA,GAAY3L,EAAQE,EAAQkL,GAAShC,QAAQuB,IAOnDK,EACFM,EAAqBC,gBAAkBE,IAAAA,IACrCR,EAAsBM,gBACtBE,IAAAA,OAAYX,EAAeK,GAAGK,gBAEtBR,GAAaS,IAAAA,SAAcR,EAAsBO,aAAcC,IAAAA,OAAY,MAErFH,EAAqBC,gBAAkBE,IAAAA,SACrCR,EAAsBM,gBACtBN,EAAsBO,eAI1BN,EAAeU,KAAKN,GACpBL,EAAwBK,CAC1B,CAMA,OAJKN,IACHE,EAAiBA,EAAeW,WAG3BX,CACT,C,qCC5DA,MAAMP,EAAqB,EAErBmB,EAAgBA,CAACC,EAAiClL,KACrDkL,GAA+B,IAAhBA,IAAsBlL,EAClCmL,KAAKC,MAAMF,EAAcG,EAAAA,GAAcrL,IAAcqL,EAAAA,GAAcrL,QACnEO,EA6CC,SAAS+K,EACdzE,EACAC,EACA9G,GAEA,MAAM2J,EAAW9C,GAAaC,EAAYD,EAAUrC,QAAQoF,YAAY9C,EAAUtC,cAAWjE,EACvFpB,EAASwK,EAAoB,OAAT9C,QAAS,IAATA,OAAS,EAATA,EAAWrC,QAAmB,OAATsC,QAAS,IAATA,OAAS,EAATA,EAAWtC,QACpDnF,EAASsK,EAAoB,OAAT7C,QAAS,IAATA,OAAS,EAATA,EAAWtC,QAAmB,OAATqC,QAAS,IAATA,OAAS,EAATA,EAAWrC,SACnD+G,EAAWrM,IAAQsM,EAAAA,EAAAA,IAAQ3E,EAAWC,EAAW9G,GAElDkL,EAAkB,OAAJhM,QAAI,IAAJA,OAAI,EAAJA,EAAMgM,YAGpBO,GAAa9N,EAAAA,EAAAA,UAAQ,IAAMsN,EAAcC,EAAalL,IAAY,CAACkL,EAAalL,KAE9E/E,QAASyQ,EAAWzE,OAAQ0E,GAhD/B,SAAqBxM,EAA2BE,EAA2BW,GAChF,MAAM4L,GAASC,EAAAA,EAAAA,IAAwB,OAAN1M,QAAM,IAANA,OAAM,EAANA,EAAQhD,QAAe,OAANkD,QAAM,IAANA,OAAM,EAANA,EAAQlD,QAAS6D,IAE3DiH,OAAQ6E,EAAQ,QAAE7Q,IAAY8Q,EAAAA,EAAAA,IAAgBH,GA2BtD,MAAO,CAAE3Q,UAASgM,QAzBJtJ,EAAAA,EAAAA,UAAQ,KACpB,MAAMgO,EAAgB,GAEtB,GAAIG,EACF,IAAK,IAAIxB,EAAI,EAAGA,EAAIwB,EAASlO,OAAQ0M,IAAK,CACxC,MAAM0B,EAAOF,EAASxB,GAChB2B,EAAaC,EAAAA,EAASC,mBAAmB3B,OAAOwB,EAAKlP,KAErDsP,EAAW,CACfC,eAAgBL,EAAKK,eACrB1B,aAAcqB,EAAKrB,aACnBE,OAAQyB,OAAOL,EAAW/F,YAC1BqG,OAAQD,OAAO1B,EAAAA,GAAK4B,OAAO5B,EAAAA,GAAK0B,OAAO,GAAIL,GAAY/F,YACvDuG,UAAWH,OAAON,EAAKlP,IACvB4P,cAAe,EACfC,cAAe,GAGjBhB,EAAMZ,KAAKqB,EACb,CAGF,OAAOT,CAAK,GACX,CAACG,IAGN,CAiBgDc,CAAYzN,EAAQE,EAAQW,GAEpE6M,GAAclP,EAAAA,EAAAA,UAAQ,IACrBgO,EAEEA,EACJ9N,KAAKlC,IACJ,MAAMkP,EAAS,IAAI7E,EAAAA,EAAU8G,OAAOnR,EAAKkP,SACtC5E,IAAI6G,OAAOnR,EAAK+Q,gBAChBK,SAAS,CAAEtL,eAAgB,KACxB8K,EAAS,IAAIvG,EAAAA,EAAU8G,OAAOnR,EAAK4Q,SACtCtG,IAAI6G,OAAOnR,EAAKgR,gBAChBI,SAAS,CAAEtL,eAAgB,KAE9B,MAAO,IACF9F,EACHkP,SACA0B,SACAhC,QAASC,OAAO7O,EAAK8Q,WACrBO,QAASrR,EAAKkP,OACdoC,QAAStR,EAAK4Q,OACd5B,aAAchP,EAAKgP,aAAazE,WACjC,IAEFgH,MAAK,CAACC,EAAGC,IACJD,EAAE5C,QAAU6C,EAAE7C,SAAiB,EAC/B4C,EAAE5C,QAAU6C,EAAE7C,QAAgB,EAC3B,IAxBQ,IA0BlB,CAACoB,EAAOD,IAEX,OAAO/N,EAAAA,EAAAA,UAAQ,KAAO,IAAD0P,EACnB,MAAMC,EAAkB/B,IAAcgC,EAAAA,EAAUC,WAEhD,IACG3G,IACAC,IACA3H,IACAE,QACckB,IAAfkL,GACAF,IAAcgC,EAAAA,EAAUE,SACvBZ,GACsB,IAAvBA,EAAYjP,QACZ8N,EAEA,MAAO,CACLA,UAAWA,GAAaH,IAAcgC,EAAAA,EAAUG,QAChDJ,kBACA7B,aACAkC,UAAMpN,GAOV,MAAM2J,EAAQ2C,EAAYe,WAAU9S,IAAA,IAAC,QAAEyP,GAASzP,EAAA,OAAKyP,EAAUkB,CAAU,IAAI,EAE7E,GAAIvB,EAAQ,EAGV,OADA2D,QAAQxP,MAAM,4BACP,CACLqN,YACA4B,kBACA7B,aACAkC,UAAMpN,GAIV,MAAMyJ,EAAsB,CAC1BU,gBAAiBE,EAAAA,GAAK0B,OAAsB,QAAhBe,EAAK,OAAJnO,QAAI,IAAJA,OAAI,EAAJA,EAAM4O,iBAAS,IAAAT,EAAAA,EAAI,GAChD9C,QAASkB,EACTd,aACEH,OAAOqC,EAAY3C,GAAOK,WAAakB,EACnCb,EAAAA,GAAK0B,OAAOO,EAAY3C,GAAOS,cAC/BC,EAAAA,GAAK0B,OAAO,GAClBzB,QAAQC,EAAAA,EAAAA,GAAY3L,EAAQE,EAAQoM,GAAYlD,QAAQuB,IAGpDiE,EAAclB,EAAYhP,KAAKmO,IAAI,CACvCzB,QAASyB,EAAKzB,QACdI,aAAcqB,EAAKrB,aACnB0B,eAAgBL,EAAKK,mBAGjB2B,EAAkBjE,EAAwB5K,EAAQE,EAAQ2K,EAAqB+D,EAAa7D,GAAO,GAInG+D,EAFgBlE,EAAwB5K,EAAQE,EAAQ2K,EAAqB+D,EAAa7D,GAAO,GAElE5P,OAAO0P,GAAqB1P,OAAO0T,GAExE,MAAO,CACLtC,YACA4B,kBACA7B,aACAkC,KAAMM,EACNC,aAAmB3N,IAAVoL,EACV,GACA,CAAC9E,EAAWC,EAAW2E,EAAYvM,EAAM2N,EAAanB,EAAWH,EAAWI,GACjF,C,yDCrKA,MAAMwC,EAAe,UAEfC,EAAOC,EAAAA,GAAOlF,KAAImF,WAAA,CAAAC,YAAA,aAAAC,YAAA,eAAXH,CAAW,sCAEZvT,IAAA,IAAC,KAAEmH,GAAMnH,EAAA,OAAS,OAAJmH,QAAI,IAAJA,EAAAA,EAAQkM,CAAY,IACpCzK,IAAA,IAAC,KAAEzB,GAAMyB,EAAA,OAAS,OAAJzB,QAAI,IAAJA,EAAAA,EAAQkM,CAAY,IAY/BM,EAAOlF,IAAA,IAAC,OAAEmF,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,KAAE7M,GAAiBsH,EAAA,OAC9E5L,EAAAA,EAAAA,UACE,SAAAoR,EAAA,OACEhW,EAAAA,EAAAA,KAACqV,EAAI,CACHnM,KAAMA,EACN9I,EAOG,QAPF4V,GACCC,EAAAA,EAAAA,OACGC,MAAMC,EAAAA,KACNC,GAAGhW,GAAewV,EAAOE,EAAO1V,MAChCiW,IAAIjW,GAAeyV,EAAOE,EAAO3V,MACjCkW,GAAGT,EAAO,GAJbI,CAKEN,EAAOnH,QAAQpO,GAAMmW,IAAQX,EAAOE,EAAO1V,IAAK,EAAGoW,sBACpD,IAAAR,EAAAA,OAAIxO,GAEP,GAEJ,CAAC0B,EAAMyM,EAAQC,EAAQE,EAAQD,EAAQE,GACxC,ECrCGU,GAAcnB,EAAAA,GAAOoB,EAACnB,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAARH,CAAQ,mEAKfvT,IAAA,IAAC,MAAEvB,GAAOuB,EAAA,OAAKvB,EAAMmW,KAAK,IAKjCC,GAAOjM,IAAgE,IAA/D,cAAEkM,GAAuDlM,EASrE,OAAO3K,EAAAA,EAAAA,KAAA,KAAG8W,IAROC,IACXA,IACFC,EAAAA,EAAAA,KAAOD,GACJE,KAAKJ,GACLI,MAAMP,GAAMA,EAAEM,OAAO,WAAWE,UACrC,GAGwB,EAGfC,GAAa3G,IAAA,IAAC,OACzBoF,EAAM,YACNwB,EAAW,OACXC,EAAS,GAKV7G,EAAA,OACC5L,EAAAA,EAAAA,UACE,KACE5E,EAAAA,EAAAA,KAACyW,GAAW,CAACa,UAAS,gBAAA/V,OAAkB6V,EAAcC,EAAM,KAAIlX,UAC9DH,EAAAA,EAAAA,KAAC4W,GAAI,CAACC,eAAeU,EAAAA,EAAAA,KAAW3B,GAAQhD,MAAM,QAGlD,CAACwE,EAAaC,EAAQzB,GACvB,EC5BI,MAAM4B,GAAmB5W,GAC9B,CACE,QACS,KAAAW,OACJX,GACL,QAAS,MACF,QAIP,OACA,aACA,OACA,aACA,QAAS,KAET6W,KAAK,KAEIC,GAAwBA,IACnC,CACE,QACA,OACA,QACA,QACA,OACA,KACAD,KAAK,KAEIE,GAAkB5V,IAAA,IAAC,MAC9BlB,EAAK,KACLqC,EAAO,GAAE,OACToN,EAAS,IAKVvO,EAAA,OACC/B,EAAAA,EAAAA,KAAA,WACE4X,OAAM,QAAArW,OAAU2B,EAAI,KAAA3B,OAAI2B,EAAI,QAAA3B,OAAO2B,GACnCoU,UAAS,cAAA/V,OAAgB2B,EAAOoN,EAAM,MAAA/O,OAAK+O,EAAM,iBACjDpH,KAAMrI,EACNgX,OAAQhX,EACRiX,YAAY,IACZC,eAAe,SACf,ECnDEC,GAAS1C,EAAAA,GAAOlF,KAAImF,WAAA,CAAAC,YAAA,gBAAAC,YAAA,gBAAXH,CAAW,8EAIdvT,IAAA,IAAC,MAAElB,GAAOkB,EAAA,OAAKlB,CAAK,IACtB8J,IAAA,IAAC,MAAE9J,GAAO8J,EAAA,OAAK9J,CAAK,IAGxBoX,GAAe3C,EAAAA,GAAOlF,KAAImF,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAXH,CAAW,yFAQ1B4C,GAAa5C,EAAAA,GAAOoB,EAACnB,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAARH,CAAQ,2CACd9E,IAAA,IAAC,QAAE2H,GAAS3H,EAAA,OAAM2H,EAAU,IAAM,GAAG,IAI5CC,GAAoB9C,EAAAA,GAAO+C,KAAI9C,WAAA,CAAAC,YAAA,2BAAAC,YAAA,gBAAXH,CAAW,eAC3BgD,IAAA,IAAC,MAAE9X,GAAO8X,EAAA,OAAK9X,EAAMS,QAAQC,WAAWkI,MAAM,IAGlDmP,GAAUjD,EAAAA,GAAOkD,KAAIjD,WAAA,CAAAC,YAAA,iBAAAC,YAAA,gBAAXH,CAAW,iDAGjBmD,IAAA,IAAC,MAAEjY,GAAOiY,EAAA,OAAKjY,EAAMmB,YAAY8L,WAAW,IAShDiL,GAAUA,CAACC,EAAsBC,EAAsBhD,IAC3DA,EAAO+C,EAAG,MAAQ/C,EAAOgD,EAAG,KAAOhD,EAAO+C,EAAG,MAAQ/C,EAAOgD,EAAG,IAepDC,GAAQC,IAWF,IAXG,GACpB/U,EAAE,OACF6R,EAAM,YACNmD,EAAW,gBACXC,EAAe,YACfC,EAAW,eACXC,EAAc,WACd1C,EAAU,YACVY,EAAW,gBACX+B,EAAe,gBACfC,GACWN,EACX,MAAMO,GAAWC,EAAAA,EAAAA,QAA2B,MACtCC,GAAgBD,EAAAA,EAAAA,QAA0C,MAC1D9Y,GAAQ0J,EAAAA,EAAAA,MAGPsP,EAAkBC,IAAuBjV,EAAAA,EAAAA,UAAkCyU,IAC3ES,EAAYC,IAAiBnV,EAAAA,EAAAA,WAAS,IACtCoV,EAAUC,IAAerV,EAAAA,EAAAA,WAAS,GAEnCsV,EC/EF,SAAyBjP,GAG7B,MAAMiM,GAAMwC,EAAAA,EAAAA,UAQZ,OALAS,EAAAA,EAAAA,YAAU,KACRjD,EAAIkD,QAAUnP,CAAK,GAClB,CAACA,IAGGiM,EAAIkD,OACb,CDmE8BC,CAAYhB,GAElCiB,GAAU5X,EAAAA,EAAAA,cACb6X,IACC,MAAM,KAAElQ,EAAI,UAAEmQ,EAAS,KAAEC,GAASF,EAElC,IAAKC,EAEH,YADAX,EAAoB,MAItB,MAAMa,EAASF,EAAUtV,IAAI8Q,EAAO5N,QAGvB,QAATiC,GAAkByO,GAAQO,EAAaqB,EAAQ1E,IACjDsD,EAAeoB,EAAQD,GAGzBZ,EAAoBa,EAAO,GAE7B,CAAC1E,EAAQqD,EAAaC,KAKxBa,EAAAA,EAAAA,YAAU,KACRN,EAAoBR,EAAY,GAC/B,CAACA,KAGJc,EAAAA,EAAAA,YAAU,KACHV,EAASW,UAEdT,EAAcS,SAAUO,EAAAA,EAAAA,OACrBC,OAAO,CACN,CAACpI,KAAKqI,IAAI,EAA4B7E,EAAO,IAAK,GAClD,CAACY,EA3EsB,EA2EeY,KAEvCsD,WAAW,IACXlM,QAAO,IAAMuK,IACb4B,GAAG,aAAcR,IAChBD,EAAQC,EAAM,IAGlBZ,EAAcS,SAAQhD,EAAAA,EAAAA,KAAOqC,EAASW,UAElCF,GAAuBpB,GAAQO,EAAaa,EAAqBlE,KACnEoB,EAAAA,EAAAA,KAAOqC,EAASW,SACbY,aACA3D,KAAKsC,EAAcS,QAAQa,KAAa5B,EAAYnU,IAAI8Q,KAI7DoB,EAAAA,EAAAA,KAAOqC,EAASW,SACbc,UAAU,cACVC,KAAK,SAAU,QACfA,KAAK,eAAgB,OACrBA,KAAK,OAAO,QAADxZ,OAAUwC,EAAE,yBAAuB,GAChD,CAACkV,EAAaiB,EAASnW,EAAIqT,EAAaZ,EAAYuC,EAAae,EAAqBlE,KAGzFmE,EAAAA,EAAAA,YAAU,KACHV,EAASW,SAAYT,EAAcS,SAExCT,EAAcS,QAAQa,MAAK7D,EAAAA,EAAAA,KAAOqC,EAASW,SAAiBf,EAAYnU,IAAI8Q,GAAe,GAC1F,CAACqD,EAAarD,KAGjBmE,EAAAA,EAAAA,YAAU,KACRJ,GAAc,GACd,MAAMqB,EAAUC,YAAW,IAAMtB,GAAc,IAAQ,MACvD,MAAO,IAAMuB,aAAaF,EAAQ,GACjC,CAACxB,IAGJ,MAAM2B,EAAiB3B,GAAoB5D,EAAO4D,EAAiB,IArHpC,GAsHzB4B,EAAiB5B,GAAoB5D,EAAO4D,EAAiB,IAAMhD,EAtH1C,GAwHzB6E,EAAgB7B,IAAqB5D,EAAO4D,EAAiB,IAAM,GAAK5D,EAAO4D,EAAiB,IAAM,GACtG8B,EACJ9B,IAAqB5D,EAAO4D,EAAiB,IAAMhD,GAAcZ,EAAO4D,EAAiB,IAAMhD,GAE3F+E,EACJ/B,GAAoB5D,EAAO4D,EAAiB,KAAO,GAAK5D,EAAO4D,EAAiB,KAAOhD,EACnFgF,EACJhC,GAAoB5D,EAAO4D,EAAiB,KAAO,GAAK5D,EAAO4D,EAAiB,KAAOhD,EAEzF,OAAO5R,EAAAA,EAAAA,UACL,KACErC,EAAAA,EAAAA,MAAAyC,EAAAA,SAAA,CAAA7E,SAAA,EACEoC,EAAAA,EAAAA,MAAA,QAAApC,SAAA,EACEoC,EAAAA,EAAAA,MAAA,kBAAgBwB,GAAE,GAAAxC,OAAKwC,EAAE,uBAAuB0X,GAAG,KAAKpF,GAAG,OAAOqF,GAAG,OAAOC,GAAG,OAAMxb,SAAA,EACnFH,EAAAA,EAAAA,KAAA,QAAM4b,UAAWzC,KACjBnZ,EAAAA,EAAAA,KAAA,QAAM4b,UAAWxC,EAAiB/B,OAAO,UAI3CrX,EAAAA,EAAAA,KAAA,YAAU+D,GAAE,GAAAxC,OAAKwC,EAAE,eAAc5D,UAC/BH,EAAAA,EAAAA,KAAA,QAAMoW,EAAE,IAAIyF,EAAE,IAAI1R,MAAOqM,EAAY5V,OAAQwW,UAKjDpX,EAAAA,EAAAA,KAAA,KACE8W,IAAKuC,EACLyC,SAAQ,QAAAva,OAAUwC,EAAE,gBACpBgY,aAAcA,IAAMlC,GAAY,GAChCmC,aAAcA,IAAMnC,GAAY,KAIjCL,IACCjX,EAAAA,EAAAA,MAAAyC,EAAAA,SAAA,CAAA7E,SAAA,CAEGob,GACChZ,EAAAA,EAAAA,MAAA,KACE+U,UAAS,aAAA/V,OAAe6Q,KAAKqI,IAAI,EAAG7E,EAAO4D,EAAiB,KAAI,gBAAAjY,OAAe4Z,EAAiB,KAAO,IAAG,QACjGhb,SAAA,EAEToC,EAAAA,EAAAA,MAAA,KAAApC,SAAA,EACEH,EAAAA,EAAAA,KAACgY,GAAM,CAACnX,MAAOsY,EAAiB/Y,EAAGoX,GAAgBJ,MACnDpX,EAAAA,EAAAA,KAACiY,GAAY,CAAC7X,EAAGsX,KAAyBlX,MAAOA,QAGnD+B,EAAAA,EAAAA,MAAC2V,GAAU,CACTZ,UAAS,0BAAA/V,OAA4B4Z,EAAiB,IAAM,KAAI,QAChEhD,QAASuB,GAAcE,EAASzZ,SAAA,EAEhCH,EAAAA,EAAAA,KAACoY,GAAiB,CAACyD,EAAE,IAAIzF,EAAE,MAAMxV,OAAO,KAAKuJ,MAAM,KAAK8R,GAAG,IAAIzb,MAAOA,KACtER,EAAAA,EAAAA,KAACuY,GAAO,CAACjB,UAAU,eAAeuE,EAAE,KAAKK,iBAAiB,SAAS1b,MAAOA,EAAML,SAC7E6Y,EAAgB,IAAKQ,EAAiB,YAI3C,KAGHgC,GACCjZ,EAAAA,EAAAA,MAAA,KAAG+U,UAAS,aAAA/V,OAAeqU,EAAO4D,EAAiB,IAAG,gBAAAjY,OAAe6Z,EAAiB,KAAO,IAAG,QAAOjb,SAAA,EACrGoC,EAAAA,EAAAA,MAAA,KAAApC,SAAA,EACEH,EAAAA,EAAAA,KAACgY,GAAM,CAACnX,MAAOuY,EAAiBhZ,EAAGoX,GAAgBJ,MACnDpX,EAAAA,EAAAA,KAACiY,GAAY,CAAC7X,EAAGsX,KAAyBlX,MAAOA,QAGnD+B,EAAAA,EAAAA,MAAC2V,GAAU,CACTZ,UAAS,0BAAA/V,OAA4B6Z,EAAiB,KAAO,IAAG,QAChEjD,QAASuB,GAAcE,EAASzZ,SAAA,EAEhCH,EAAAA,EAAAA,KAACoY,GAAiB,CAACyD,EAAE,IAAIzF,EAAE,MAAMxV,OAAO,KAAKuJ,MAAM,KAAK8R,GAAG,IAAIzb,MAAOA,KACtER,EAAAA,EAAAA,KAACuY,GAAO,CAACsD,EAAE,KAAKK,iBAAiB,SAAS1b,MAAOA,EAAML,SACpD6Y,EAAgB,IAAKQ,EAAiB,YAI3C,KAEH6B,IAAiBrb,EAAAA,EAAAA,KAAC2X,GAAe,CAAC9W,MAAOsY,IAEzCmC,IACCtb,EAAAA,EAAAA,KAAA,KAAGsX,UAAS,aAAA/V,OAAeiV,EAAU,qBAAoBrW,UACvDH,EAAAA,EAAAA,KAAC2X,GAAe,CAAC9W,MAAOuY,aAOpC,CACEJ,EACAI,EACAoC,EACAJ,EACAD,EACAvB,EACA7V,EACAqT,EACAZ,EACAgD,EACA8B,EACA5B,EACA2B,EACAlC,EACAoC,EACA3F,GAEH,EE/PUuG,GAAOpa,IAAgD,IAA/C,MAAE8I,EAAK,OAAE+K,EAAM,YAAEwB,GAAwBrV,EAC5D,MAAMvB,GAAQ0J,EAAAA,EAAAA,KAEd,OAAOtF,EAAAA,EAAAA,UACL,KACE5E,EAAAA,EAAAA,KAAC6D,EAAAA,EAAG,CACFJ,GAAI,CACF8G,QAAS,GACTuN,YAAa,EACbD,OAAQrX,EAAMY,OAAOgb,YACrBlT,KAAM,QAER5F,UAAU,OACVmY,GAAI7F,EAAO/K,GACXwL,GAAG,IACHqF,GAAI9F,EAAO/K,GACX8Q,GAAIvE,KAGR,CAACvM,EAAO+K,EAAQwB,GACjB,E,gBC9BH,SAAerV,IAA0C,IAAzC,UAAEsa,EAAY,aAActc,GAAOgC,EACjD,OACEQ,EAAAA,EAAAA,MAACtC,EAAAA,EAAO,CAACC,QAAQ,eAAgBH,EAAKI,SAAA,EACpCH,EAAAA,EAAAA,KAAA,QACEgJ,SAAS,UACTC,SAAS,UACT7I,EAAE,+ZACF8I,KAAMmT,KAERrc,EAAAA,EAAAA,KAAA,QACEgJ,SAAS,UACTC,SAAS,UACT7I,EAAE,kHACF8I,KAAMmT,KAERrc,EAAAA,EAAAA,KAAA,QACEoW,EAAE,SACFyF,EAAE,UACF1R,MAAM,UACNvJ,OAAO,SACP0W,UAAU,6BACVpO,KAAMmT,MAIb,ECzBD,GAAeta,IAA0C,IAAzC,UAAEsa,EAAY,aAActc,GAAOgC,EACjD,OACEQ,EAAAA,EAAAA,MAACtC,EAAAA,EAAO,CAACC,QAAQ,eAAgBH,EAAKI,SAAA,EACpCH,EAAAA,EAAAA,KAAA,QACEgJ,SAAS,UACTC,SAAS,UACT7I,EAAE,+ZACF8I,KAAMmT,KAERrc,EAAAA,EAAAA,KAAA,QAAMI,EAAE,iDAAiD8I,KAAMmT,KAC/Drc,EAAAA,EAAAA,KAAA,QACEoW,EAAE,SACFyF,EAAE,UACF1R,MAAM,UACNvJ,OAAO,SACP0W,UAAU,6BACVpO,KAAMmT,MAIb,ECVYC,GAAchH,EAAAA,GAAO+C,KAAI9C,WAAA,CAAAC,YAAA,oBAAAC,YAAA,eAAXH,CAAW,6DAShCjV,IAAWE,EAAAA,EAAAA,IAAYC,IACpB,CACL+b,UAAW,CACTpS,MAAO,OACPvJ,OAAQ,OACRG,gBAAiBP,EAAMS,QAAQC,WAAWkI,OAC1C9H,aAAc,MACdR,OAAQ,UACR0b,YAAa,OACb,eAAgB,CACdA,YAAa,GAEf,qBAAsB,CACpB9Y,SAAU,SACV8Y,YAAa,IACb1T,WAAY,IACZjI,OAAOG,EAAAA,EAAAA,IAAYR,GAAS,UAAYA,EAAMY,OAAOqb,YAEvD,mBAAoB,CAClB9O,QAAS,aAiBF,SAAS+O,GAAI3a,GAiBxB,IAjByB,IAC3B4a,EAAG,OACH/G,EAAM,QACNgH,EAAO,MACPzS,EAAK,OACLvJ,EAAM,WACNic,EAAU,WACVC,GAUD/a,EACC,MAAMK,EAAU/B,KACV0c,GAAezD,EAAAA,EAAAA,UACf9Y,GAAQ0J,EAAAA,EAAAA,MAEP8S,EAAQC,EAASC,EAAaC,IAAavY,EAAAA,EAAAA,UAChD,IAAM,CACJ,IACE+X,GACAI,EAAa/C,UACbhD,EAAAA,EAAAA,KAAO2F,GACJ/B,aACA3D,KAAK8F,EAAa/C,QAAQoD,QAAS,GACxC,IACET,GACAI,EAAa/C,UACbhD,EAAAA,EAAAA,KAAO2F,GACJ/B,aACA3D,KAAK8F,EAAa/C,QAAQoD,QAAS,IACxC,IACET,GACAI,EAAa/C,UACbhD,EAAAA,EAAAA,KAAO2F,GACJ/B,aACA3D,KAAK8F,EAAa/C,QAAQqD,QAAS,IACxC,IACEV,GACAI,EAAa/C,UACbhD,EAAAA,EAAAA,KAAO2F,GACJ1F,KAAK8F,EAAa/C,QAAQ1C,UAAWgG,EAAAA,IAAaC,UAAU,EAAG,GAAGC,MAAM,IACxE5C,aACA3D,KAAK8F,EAAa/C,QAAQqD,QAAS,MAE1C,CAACV,IAsBH,OAnBA5C,EAAAA,EAAAA,YAAU,KACH4C,IAELI,EAAa/C,SAAUyD,EAAAA,EAAAA,OACpBC,YAAY,CAACZ,EAAWa,IAAKb,EAAWrC,MACxCD,OAAO,CACN,CAAC,EAAG,GACJ,CAACrQ,EAAOvJ,KAET+Z,GAAG,QAAQhQ,IAAA,IAAC,UAAE2M,GAAW3M,EAAA,OAAKiS,EAAQtF,EAAU,KAEnDN,EAAAA,EAAAA,KAAO2F,GAAgB1F,KAAK8F,EAAa/C,SAAQ,GAChD,CAACpZ,EAAQuJ,EAAOyS,EAASD,EAAK/G,EAAQmH,EAAcD,EAAYA,EAAWrC,IAAKqC,EAAWa,OAE9F5D,EAAAA,EAAAA,YAAU,KAERmD,GAAa,GACZ,CAACA,EAAaJ,KAGf9c,EAAAA,EAAAA,KAAC6D,EAAAA,EAAG,CACFJ,GAAI,CACF/C,SAAU,WACV0J,IAAK,IACLwT,MAAO,KACPzd,UAEFoC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAAAtC,SAAA,EACbH,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACI,MAAI,EAACE,IAAE,EAACD,GAAG,MAAK1C,UACpBH,EAAAA,EAAAA,KAACsL,EAAAA,EAAI,CACH5I,UAAWN,EAAQma,UACnBsB,MAAM7d,EAAAA,EAAAA,KAAC8d,GAAAA,EAAU,IACjB7b,QAASA,KACP4a,IACAM,GAAW,OAIjBnd,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACI,MAAI,EAACE,IAAE,EAACD,GAAG,MAAK1C,UACpBH,EAAAA,EAAAA,KAACsL,EAAAA,EAAI,CACH5I,UAAWN,EAAQma,UACnBsB,MAAM7d,EAAAA,EAAAA,KAAC+d,GAAU,CAAC1B,WAAWrb,EAAAA,EAAAA,IAAYR,QAASgH,EAAYhH,EAAMY,OAAOqb,aAC3Exa,QAAS+a,OAGbhd,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACI,MAAI,EAACE,IAAE,EAAA3C,UACXH,EAAAA,EAAAA,KAACsL,EAAAA,EAAI,CACH5I,UAAWN,EAAQma,UACnBsB,MAAM7d,EAAAA,EAAAA,KAACge,GAAW,CAAC3B,WAAWrb,EAAAA,EAAAA,IAAYR,QAASgH,EAAYhH,EAAMY,OAAOqb,aAC5Exa,QAASgb,UAMrB,CCzJO,MAAMgB,GAAa7d,GAAkBA,EAAE0R,OACjCoM,GAAa9d,GAAkBA,EAAE+d,gBAEvC,SAASC,GAAKrc,GAYc,IAZb,GACpBgC,EAAK,2BACL6Q,MAAM,OAAEe,EAAM,QAAEqE,GAAS,aACzBnT,EAAY,OACZwX,EACAC,YAAY,MAAEnU,EAAK,OAAEvJ,GAAQ,QAC7B2d,EAAO,YACPxF,GAAc,EAAI,YAClByF,EAAW,YACXC,EAAW,oBACXC,EAAmB,WACnB5B,GAC8B/a,EAC9B,MAAM4c,GAAUrF,EAAAA,EAAAA,QAA8B,OAEvCmE,EAAMb,IAAWpY,EAAAA,EAAAA,UAA+B,OAEhD4S,EAAaZ,IAAc5R,EAAAA,EAAAA,UAChC,IAAM,CAAChE,EAAS2d,EAAQnU,IAAMmU,EAAQK,OAAQzU,EAAQoU,EAAQlU,KAAOkU,EAAQX,QAC7E,CAACzT,EAAOvJ,EAAQ2d,KAGZ,OAAE3I,EAAM,OAAEC,IAAWjR,EAAAA,EAAAA,UAAQ,KACjC,MAAMia,EAAS,CACbjJ,QAAQkJ,EAAAA,EAAAA,OACLC,OAAO,CAAC/E,EAAU8C,EAAWkC,WAAYhF,EAAU8C,EAAWmC,aAC9DC,MAAM,CAAC,EAAG1I,IACbX,QAAQiJ,EAAAA,EAAAA,OACLC,OAAO,CAAC,GAAGtE,EAAAA,EAAAA,KAAI9E,EAAQuI,MACvBgB,MAAM,CAAC9H,EAAa,KAGzB,GAAIqG,EAAM,CACR,MAAM0B,EAAY1B,EAAK2B,SAASP,EAAOjJ,QACvCiJ,EAAOjJ,OAAOmJ,OAAOI,EAAUJ,SACjC,CAEA,OAAOF,CAAM,GACZ,CAAC7E,EAAS8C,EAAWkC,WAAYlC,EAAWmC,WAAYzI,EAAYb,EAAQyB,EAAaqG,IAa5F,OAXA1D,EAAAA,EAAAA,YAAU,KAER6C,EAAQ,KAAK,GACZ,CAACE,KAEJ/C,EAAAA,EAAAA,YAAU,KACHyE,GACHE,EAAoB9I,EAAOmJ,cAA8BvX,EAC3D,GACC,CAACgX,EAAaE,EAAqB9I,KAGpCrT,EAAAA,EAAAA,MAAAyC,EAAAA,SAAA,CAAA7E,SAAA,EACEH,EAAAA,EAAAA,KAAC0c,GAAI,CACHC,IAAKgC,EAAQ3E,QACbpE,OAAQA,EACRgH,QAASA,EACTzS,MAAOqM,EACP5V,OAEEA,EAEFic,WAAYA,KACV6B,EACE,CAAC1E,EAAU8C,EAAWkC,WAAYhF,EAAU8C,EAAWmC,YACvD,QACD,EAEHI,gBAAiBC,QAAQzY,EAAaQ,EAAAA,GAAMC,QAAUT,EAAaQ,EAAAA,GAAME,QACzEuV,WAAYA,KAEdva,EAAAA,EAAAA,MAAA,OAAK4H,MAAM,OAAOvJ,OAAO,OAAOV,QAAO,OAAAqB,OAAS4I,EAAK,KAAA5I,OAAIX,GAAU2e,MAAO,CAAEC,SAAU,WAAYrf,SAAA,EAChGoC,EAAAA,EAAAA,MAAA,QAAApC,SAAA,EACEH,EAAAA,EAAAA,KAAA,YAAU+D,GAAE,GAAAxC,OAAKwC,EAAE,eAAc5D,UAC/BH,EAAAA,EAAAA,KAAA,QAAMoW,EAAE,IAAIyF,EAAE,IAAI1R,MAAOqM,EAAY5V,OAAQA,MAG9C4d,IAECxe,EAAAA,EAAAA,KAAA,QAAM+D,GAAE,GAAAxC,OAAKwC,EAAE,oBAAmB5D,UAChCH,EAAAA,EAAAA,KAAA,QACEkJ,KAAK,QACLkN,EAAGR,EAAO4I,EAAY,IACtB3C,EAAE,IACF1R,MAAOyL,EAAO4I,EAAY,IAAM5I,EAAO4I,EAAY,IACnD5d,OAAQwW,UAMhB7U,EAAAA,EAAAA,MAAA,KAAG+U,UAAS,aAAA/V,OAAegd,EAAQlU,KAAI,KAAA9I,OAAIgd,EAAQnU,IAAG,KAAIjK,SAAA,EACxDoC,EAAAA,EAAAA,MAAA,KAAGuZ,SAAQ,QAAAva,OAAUwC,EAAE,gBAAe5D,SAAA,EACpCH,EAAAA,EAAAA,KAAC0V,EAAI,CAACC,OAAQA,EAAQC,OAAQA,EAAQC,OAAQA,EAAQC,OAAQmI,GAAWlI,OAAQmI,KAEhFM,IAECxe,EAAAA,EAAAA,KAAA,KAAGyf,KAAI,QAAAle,OAAUwC,EAAE,qBAAoB5D,UACrCH,EAAAA,EAAAA,KAAC0V,EAAI,CACHC,OAAQA,EACRC,OAAQA,EACRC,OAAQA,EACRC,OAAQmI,GACRlI,OAAQmI,GACRhV,KAAMmV,EAAOpI,KAAKmE,eAKxBpa,EAAAA,EAAAA,KAACmc,GAAI,CAACtR,MAAOmP,EAASpE,OAAQA,EAAQwB,YAAaA,KAEnDpX,EAAAA,EAAAA,KAACmX,GAAU,CAACvB,OAAQA,EAAQwB,YAAaA,QAG3CpX,EAAAA,EAAAA,KAACsc,GAAW,CAACnS,MAAOqM,EAAY5V,OAAQA,EAAQkW,IAAK6H,KAErD3e,EAAAA,EAAAA,KAAC6Y,GAAK,CACJ9U,GAAIA,EACJ6R,OAAQA,EACRmD,YAAaA,EACbC,gBAAiByF,EACjBxF,YAAwB,OAAXuF,QAAW,IAAXA,EAAAA,EAAgB5I,EAAOmJ,SACpCvI,WAAYA,EACZY,YAAaA,EACb8B,eAAgBwF,EAChBvF,gBAAiBkF,EAAOqB,MAAMC,OAAOC,KACrCxG,gBAAiBiF,EAAOqB,MAAMC,OAAOE,eAMjD,CCrIA,MAAMC,GAA6C,CACjD,CAACvT,EAAAA,GAAUC,KAAM,CACfwS,WAAY,KACZC,WAAY,MACZtB,IAAK,KACLlD,IAAK,KAEP,CAAClO,EAAAA,GAAUE,QAAS,CAClBuS,WAAY,GACZC,WAAY,EACZtB,IAAK,KACLlD,IAAK,IAEP,CAAClO,EAAAA,GAAUG,MAAO,CAChBsS,WAAY,GACZC,WAAY,EACZtB,IAAK,KACLlD,IAAK,KAIT,SAASsF,GAAOhe,GAA+D,IAA9D,QAAEie,EAAO,KAAEnC,GAAgD9b,EAC1E,OACEQ,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CACHC,WAAS,EACT6F,eAAe,SACf3F,WAAW,SACXc,GAAI,CAAE7C,OAAQ,OAAQqf,UAAW,SACjC7X,cAAc,SAAQjI,SAAA,CAErB0d,EACAmC,IACChgB,EAAAA,EAAAA,KAACqD,EAAAA,EAAU,CAACmC,QAAQ,KAAK3E,MAAM,cAAc0H,MAAM,SAAS9E,GAAI,CAAEkF,UAAW,QAASxI,SACnF6f,MAKX,CAee,SAASE,GAAwBvV,GAWb,IAADwV,EAAA,IAXe,UAC/CrS,EAAS,UACTC,EAAS,UACT9G,EAAS,aACTJ,EAAY,MACZa,EAAK,WACLC,EAAU,WACVC,EAAU,iBACVwY,EAAgB,kBAChBC,EAAiB,YACjBtH,GAC8BpO,EAC9B,MAAMnK,GAAQ0J,EAAAA,EAAAA,KAIRoW,EAAa,UAEb1P,EAAW9C,GAAaC,IAAsB,OAATD,QAAS,IAATA,OAAS,EAATA,EAAWrC,QAAQoF,YAAqB,OAAT9C,QAAS,IAATA,OAAS,EAATA,EAAWtC,WAE/E,UAAEkH,EAAS,gBAAE4B,EAAe,QAAEY,EAAO,cAAEoL,GC5ExC,SAA4Bxe,GAAgE,IAA/D,UAAE+L,EAAS,UAAEC,EAAS,UAAE9G,GAAoClF,EAC9F,MAAM,UAAE4Q,EAAS,gBAAE4B,EAAe,QAAEY,EAAO,KAAEP,GAASrC,EAAuBzE,EAAWC,EAAW9G,GAE7FuZ,GAAa5b,EAAAA,EAAAA,UAAQ,KACzB,GAAS,OAAJgQ,QAAI,IAAJA,IAAAA,EAAM/P,OAAQ,OAEnB,MAAM+L,EAAW9C,GAAaC,EAAYD,EAAUrC,QAAQoF,YAAY9C,EAAUtC,cAAWjE,EAEvFiZ,EAAyD,GAE/D,IAAK,IAAIlP,EAAI,EAAGA,EAAIqD,EAAK/P,OAAQ0M,IAAK,CACpC,MAAMmP,EAAI9L,EAAKrD,GAEToP,EAAa,CACjBxC,gBAAiByC,WAAWF,EAAE/O,gBAAgBxE,YAE9C2E,OAAQlB,EAAWgQ,WAAWF,EAAE5O,QAAU8O,WAAW,IAAI3T,EAAAA,EAAU,GAAGC,IAAIwT,EAAE5O,QAAQ3E,aAGlFwT,EAAWxC,gBAAkB,IAE3BvN,EACF6P,EAAQzO,KAAK2O,GAEbF,EAAQI,QAAQF,GAGtB,CAEA,OAAOF,CAAO,GACb,CAAC7L,EAAM9G,EAAWC,IAErB,OAAOnJ,EAAAA,EAAAA,UAAQ,KACN,CACL+N,UAAWA,IAAciC,EACzBL,kBACAY,UACAoL,cAAgB5N,GAAc4B,OAA+B/M,EAAbgZ,KAEjD,CAAC7N,EAAW4B,EAAiBY,EAASqL,GAC3C,CDoCiEM,CAAoB,CACjFhT,YACAC,YACA9G,UAAoB,OAATA,QAAS,IAATA,EAAAA,EAAasF,EAAAA,GAAUE,SAG9BsU,GAA2Bze,EAAAA,EAAAA,cAC/B,CAACyc,EAAQ1E,KACP,IAAI2G,EAAiBvP,OAAOsN,EAAO,IACnC,MAAMkC,EAAkBxP,OAAOsN,EAAO,IAClCiC,GAAkB,IACpBA,EAAiB,EAAI,IAAM,IAE7BE,EAAAA,EAAAA,KAAM,OAGAra,EAAa+J,EAAWvJ,EAAAA,GAAMC,MAAQD,EAAAA,GAAME,QAAmB,WAAT8S,GAA8B,UAATA,IAC7E2G,EAAiB,GAEjBZ,EAAiBY,EAAexR,QAAQ,MAEpC3I,EAAa+J,EAAWvJ,EAAAA,GAAME,MAAQF,EAAAA,GAAMC,QAAmB,UAAT+S,IAAqB4G,EAAkB,GAG7FA,EAAkB,MACpBZ,EAAkBY,EAAgBzR,QAAQ,GAE9C,GACA,GAEJ,CAACoB,EAAUwP,EAAkBC,EAAmBxZ,IAG5Csa,EAAepI,GAAeuG,QAAqB,OAAbiB,QAAa,IAAbA,OAAa,EAAbA,EAAe1b,QAErD2Z,GAA4C5Z,EAAAA,EAAAA,UAAQ,KACxD,MAAMwc,EAAYxQ,EAAWjJ,EAAuB,OAAVC,QAAU,IAAVA,OAAU,EAAVA,EAAYI,SAChDqZ,EAAazQ,EAAWhJ,EAAuB,OAAVD,QAAU,IAAVA,OAAU,EAAVA,EAAYK,SAEvD,OAAOoZ,GAAaC,EAChB,CAACT,WAAoB,OAATQ,QAAS,IAATA,OAAS,EAATA,EAAW3Y,cAAc,IAAKmY,WAAqB,OAAVS,QAAU,IAAVA,OAAU,EAAVA,EAAY5Y,cAAc,UAC/EjB,CAAS,GACZ,CAACoJ,EAAUjJ,EAAYC,IAEpBoR,GAAkB1W,EAAAA,EAAAA,cACtB,CAAClC,EAAcgW,KACb,IAAK1O,EAAO,MAAO,GAEnB,GAAU,MAANtH,GAAayG,EAAa+J,EAAWvJ,EAAAA,GAAMC,MAAQD,EAAAA,GAAME,OAAQ,MAAO,IAC5E,GAAU,MAANnH,GAAayG,EAAa+J,EAAWvJ,EAAAA,GAAME,MAAQF,EAAAA,GAAMC,OAAQ,MAAO,SAE5E,MAAMga,GACHlL,EAAI3E,OAAO/J,IAAU,EAAI,KACxB0K,KAAKqI,IAAIrE,EAAG3E,OAAO/J,IAAU0K,KAAKuL,IAAIvH,EAAG3E,OAAO/J,KAAW+J,OAAO/J,IACpE,IAEF,OAAOA,EAAK,GAAAnG,QAAMggB,EAAAA,EAAAA,KAAOnP,KAAKoP,IAAIF,GAAW,EAAI,OAAS,OAAxCC,CAAgDD,GAAQ,KAAM,EAAE,GAEpF,CAAC1Q,EAAUlJ,EAAOb,IAGpB,OACE7G,EAAAA,EAAAA,KAAC6D,EAAAA,EAAG,CAAC0b,MAAO,CAAEU,UAAW,SAAU9f,SAChCoU,GACCvU,EAAAA,EAAAA,KAAC+f,GAAO,CACNC,QAAOta,EAAAA,GAAAC,EAAE,CAAA5B,GAAA,WACT8Z,MAAM7d,EAAAA,EAAAA,KAACyhB,EAAAA,EAAK,CAACve,KAAM,GAAI2U,OAAQrX,EAAMS,QAAQC,WAAWkI,WAExDuJ,GACF3S,EAAAA,EAAAA,KAAC+f,GAAO,CAAClC,MAAM7d,EAAAA,EAAAA,KAAC0hB,EAAAA,EAAM,CAACxe,KAAK,OAAO2U,OAAQrX,EAAMS,QAAQC,WAAWkI,WAClE+L,GACFnV,EAAAA,EAAAA,KAAC+f,GAAO,CACNC,QAAOta,EAAAA,GAAAC,EAAE,CAAA5B,GAAA,WACT8Z,MAAM7d,EAAAA,EAAAA,KAAC2hB,EAAAA,EAAQ,CAACze,KAAM,GAAI2U,OAAQrX,EAAMS,QAAQC,WAAWkI,WAE1DmX,GAA0C,IAAzBA,EAAc1b,QAAiB6C,GAMnD1H,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACC,WAAS,EAACE,WAAW,SAAS2F,eAAe,SAAQnI,UACzDH,EAAAA,EAAAA,KAACoe,GAAK,CACJxJ,KAAM,CAAEe,OAAQ4K,EAAevG,QAASvI,OAAO/J,IAC/C4W,WAAY,CAAEnU,MAAO,IAAKvJ,OAAQ,KAClC2d,QAAS,CAAEnU,IAAK,GAAIwT,MAAO,EAAGgB,OAAQ,GAAIvU,KAAM,GAChDgU,OAAQ,CACNpI,KAAM,CACJmE,UAAWkG,GAEbZ,MAAO,CACLC,OAAQ,CACNC,MAAMgC,EAAAA,EAAAA,IAAS,GAlGX,WAmGJ/B,KAAgC,QAA5BM,GAAEyB,EAAAA,EAAAA,IAAS,GAlGX,kBAkG4B,IAAAzB,EAAAA,EAAIG,KAI1CvH,YAAaoI,EACb1C,YAAazF,EACbwF,YAAaA,EACbE,oBAAqBqC,EACrBjE,WAAYgD,GAAqB,OAAT7Y,QAAS,IAATA,EAAAA,EAAasF,EAAAA,GAAUE,QAC/C5F,aAAcA,OA1BlB7G,EAAAA,EAAAA,KAAC+f,GAAO,CACNC,QAAOta,EAAAA,GAAAC,EAAE,CAAA5B,GAAA,WACT8Z,MAAM7d,EAAAA,EAAAA,KAAC6hB,EAAAA,EAAS,CAAC3e,KAAM,GAAI2U,OAAQrX,EAAMS,QAAQC,WAAWkI,YA8BtE,CEpLA,MAAM0Y,IAA0BvhB,EAAAA,EAAAA,IAAYC,IACnC,CACLuhB,eAAgB,CACd1Y,OAAQ7I,EAAMS,QAAQoI,OAAOC,QAC7BhI,aAAc,QAEhBiI,MAAO,CACL,UAAW,CACT7F,SAAU,OACV+F,WAAY,IACZD,UAAW,SACX5I,OAAQ,OACRD,QAAS,MACT,CAACH,EAAMkJ,YAAYC,KAAK,OAAQ,CAC9BjG,SAAU,SAGd,uBAAwB,CACtBA,SAAU,OACV+F,WAAY,IACZ,CAACjJ,EAAMkJ,YAAYC,KAAK,OAAQ,CAC9BjG,SAAU,UAIhBkG,KAAM,CACJO,MAAO,OACPvJ,OAAQ,OACRU,aAAc,MACd,qBAAsB,CACpBwH,WAAY,OACZjI,OAAOG,EAAAA,EAAAA,IAAYR,GAAS,UAAYA,EAAMY,OAAO4gB,iBAmBtD,SAASC,GAAkBlgB,GAWL,IAXM,MACjCwJ,EAAK7F,EAAAA,GAAAC,EAAG,CAAA5B,GAAA,WAAY,MACpB8G,EAAK,UACLqX,EAAS,UACTC,EAAS,aACTC,EAAY,iBACZC,EAAgB,kBAChBC,EAAiB,kBACjBC,EAAiB,aACjB9b,EAAY,cACZG,GACwB7E,EACxB,MAAMK,EAAU0f,MAETU,EAAYC,IAAiBje,EAAAA,EAAAA,UAAS,KACtCke,EAAeC,IAAoBne,EAAAA,EAAAA,WAAS,GAE7Coe,GAAgBtgB,EAAAA,EAAAA,cAAY,KAChCqgB,GAAiB,EAAK,GACrB,IAEGE,GAAevgB,EAAAA,EAAAA,cAAY,KAC/BqgB,GAAiB,GACjBP,EAAaI,EAAW,GACvB,CAACA,EAAYJ,KAEhBrI,EAAAA,EAAAA,YAAU,KACJyI,IAAe3X,GAAU6X,GAC3BzH,YAAW,KACTwH,EAAc5X,EAAM,GACnB,EACL,GACC,CAAC2X,EAAYE,EAAe7X,IAE/B,MAAMiY,GAAsBxgB,EAAAA,EAAAA,cAAY,KACtCqgB,GAAiB,GACjBP,EAAaF,IAAY,GACxB,CAACA,EAAWE,IAETW,GAAsBzgB,EAAAA,EAAAA,cAAY,KACtCqgB,GAAiB,GACjBP,EAAaD,IAAY,GACxB,CAACA,EAAWC,IAEf,OACE7f,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACE,UAAWN,EAAQ2f,eAAgBtf,WAAS,EAACE,WAAW,SAAS2F,eAAe,SAAS7E,GAAI,CAAE4H,EAAG,GAAIlL,SAAA,EAC1GH,EAAAA,EAAAA,KAACqD,EAAAA,EAAU,CAACkF,MAAM,SAAS7E,SAAU,GAAGvD,SACrCoL,KAEHhJ,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAAC2J,GAAG,OAAO4W,GAAG,OAAM7iB,SAAA,EACjCH,EAAAA,EAAAA,KAACsL,EAAAA,EAAI,CACH5I,UAAWN,EAAQwH,KACnBiU,MAAM7d,EAAAA,EAAAA,KAACijB,EAAAA,EAAU,IACjBhhB,QAAS8gB,EACT5gB,SAAUogB,KAEZviB,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACI,MAAI,EAACE,IAAE,EAACogB,GAAG,MAAMrgB,GAAG,MAAK1C,SAC5BkiB,GACCriB,EAAAA,EAAAA,KAACmjB,EAAAA,EAAS,CACR1d,WAAS,EACToF,MAAO2X,EACP9f,UAAWN,EAAQmH,MACnBoC,YAAY,MACZnG,QAAQ,WACR4d,WAAY,CACVC,kBAAkB,GAEpBnf,SAAWgI,GAAMuW,EAAcvW,EAAEC,OAAOtB,OACxCyY,OAAQT,EACRU,QAASX,KAGX5iB,EAAAA,EAAAA,KAAC0L,EAAAA,GAAe,CACdjG,WAAS,EACToF,MAAO2X,EACP9f,UAAWN,EAAQmH,MACnBoC,YAAY,MACZnG,QAAQ,WACRoG,aAAc,CACZC,mBAAmB,EACnBC,aAAc,EACdC,eAAe,EACfC,UAAWC,EAAAA,IAEb/H,SAAWgI,GAAMuW,EAAcvW,EAAEC,OAAOtB,OACxCyY,OAAQT,EACRU,QAASX,OAIf5iB,EAAAA,EAAAA,KAACsL,EAAAA,EAAI,CAAC5I,UAAWN,EAAQwH,KAAMiU,MAAM7d,EAAAA,EAAAA,KAACwjB,EAAAA,EAAO,IAAKvhB,QAAS6gB,EAAqB3gB,SAAUmgB,QAE5FtiB,EAAAA,EAAAA,KAACqD,EAAAA,EAAU,CAACkF,MAAM,SAAQpI,SACvBsG,GAAgBG,EAAa,GAAArF,OAAmB,OAAbqF,QAAa,IAAbA,OAAa,EAAbA,EAAerD,OAAM,SAAAhC,OAAoB,OAAZkF,QAAY,IAAZA,OAAY,EAAZA,EAAclD,QAAW,OAIlG,CAEA,MAAMkgB,IAAmBljB,EAAAA,EAAAA,IAAYC,IAC5B,CACLkjB,sBAAuB,CACrB/iB,QAAS,OACTW,aAAc,OACd+H,OAAO,aAAD9H,OAAef,EAAMY,OAAOuiB,aAClC5iB,gBAAiBP,EAAMS,QAAQC,WAAWkI,OAC1C,gBAAiB,CACfvI,MAAOL,EAAMY,OAAOuiB,YACpBjgB,SAAU,SAGdkgB,WAAY,CACVva,QAAQrI,EAAAA,EAAAA,IAAYR,GAAS,oBAAmB,aAAAe,OAAgBf,EAAMY,OAAOiM,yBAC7EnM,YAAYF,EAAAA,EAAAA,IAAYR,GAAS,cAAgB,OACjDc,aAAc,OACdV,OAAQ,OACRD,QAAS,UAEXkjB,gBAAiB,CACfnjB,SAAU,YAEZojB,cAAe,CACbpjB,SAAU,WACV0J,IAAK,IACLC,KAAM,IACNF,MAAO,OACPvJ,OAAQ,OACRM,WAAY,0BACZmI,OAAO,aAAD9H,OAAef,EAAMY,OAAOuiB,aAClCriB,aAAc,QAEhByiB,gBAAiB,CACfziB,aAAc,OACdP,iBAAiBC,EAAAA,EAAAA,IAAYR,GAASA,EAAMY,OAAO4gB,WAAa,UAChE3Y,OAAQ7I,EAAMS,QAAQoI,OAAOC,QAC7BzI,OAAOG,EAAAA,EAAAA,IAAYR,GAASA,EAAMS,QAAQ+iB,KAAK,KAAOxjB,EAAMY,OAAO6iB,iBACnEC,cAAe,OACf,UAAW,CACTnjB,gBAAwC,SAAvBP,EAAMS,QAAQoZ,KAAkB7Z,EAAMS,QAAQkjB,KAAKC,MAAQ,GAAK5jB,EAAMS,QAAQojB,QAAQD,MACvGE,YAAoC,SAAvB9jB,EAAMS,QAAQoZ,KAAkB,UAAY7Z,EAAMS,QAAQ+iB,KAAK,OAGhFO,YAAa,CACX5b,UAAW,OACX9H,MAAOL,EAAMY,OAAOuiB,aAEtBa,aAAc,CACZ3jB,MAAOL,EAAMY,OAAOuiB,YACpBla,WAAY,IACZ/F,SAAU,QAEZ+gB,YAAa,CACX9jB,QAAS,QACTI,gBAAiBP,EAAMY,OAAOuiB,YAC9B9iB,MAAOL,EAAMY,OAAO4gB,WACpB1gB,aAAc,MACdV,OAAQ,OACR+H,UAAW,YA8RjB,IAhQmB+b,EAAAA,EAAAA,OACjB/Z,IAoBwB,IAAD6F,EAAA8H,EAAAqM,EAAAC,EAAA,IApBtB,kBACCC,EAAiB,iBACjBzE,EAAgB,kBAChBC,EAAiB,WACjBuD,EAAU,YACVkB,EAAW,WACXnd,EAAU,WACVC,EAAU,aACVnB,EAAY,cACZG,EAAa,UACbK,EAAS,aACTJ,EAAY,MACZa,EAAK,kBACLqd,EAAiB,kBACjBC,EAAiB,kBACjBC,EAAiB,kBACjBC,EAAiB,gBACjBC,EAAe,kBACfC,EAAiB,YACjBC,GACgB1a,EAChB,MAAO2a,EAAaC,IAAgB/gB,EAAAA,EAAAA,WAAS,GACvCpC,EAAUqhB,KACVjjB,GAAQ0J,EAAAA,EAAAA,KAERsb,EAAmC,QAA7BhV,EAAgB,OAAZ/J,QAAY,IAAZA,EAAAA,OAAgBe,SAAS,IAAAgJ,OAAA,EAA1BA,EAA6B/E,QACtCga,EAAoC,QAA9BnN,EAAiB,OAAb1R,QAAa,IAAbA,EAAAA,OAAiBY,SAAS,IAAA8Q,OAAA,EAA3BA,EAA8B7M,QACvCmF,EAAW4U,GAAUC,GAAUD,EAAO3U,YAAY4U,GAElDrE,EAAYxQ,EAAWjJ,EAAuB,OAAVC,QAAU,IAAVA,OAAU,EAAVA,EAAYI,SAChDqZ,EAAazQ,EAAWhJ,EAAuB,OAAVD,QAAU,IAAVA,OAAU,EAAVA,EAAYK,SAEjD0d,GAAuB9gB,EAAAA,EAAAA,UAC3B,IAAOkgB,IAAgBlB,GAAeyB,GACtC,CAACP,EAAalB,EAAYyB,IAY5B,OACE9iB,EAAAA,EAAAA,MAAAyC,EAAAA,SAAA,CAAA7E,SAAA,CACG2kB,IACCviB,EAAAA,EAAAA,MAAAyC,EAAAA,SAAA,CAAA7E,SAAA,EACEH,EAAAA,EAAAA,KAACqD,EAAAA,EAAU,CAACmC,QAAQ,KAAK3E,MAAM,cAAaV,UAC1CH,EAAAA,EAAAA,KAAA8D,EAAAA,GAAA,CAAAC,GAAA,cAEFxB,EAAAA,EAAAA,MAACsB,EAAAA,EAAG,CAACuI,GAAI,EAAEjM,SAAA,EACTH,EAAAA,EAAAA,KAAC6D,EAAAA,EAAG,CAACnB,UAAWN,EAAQshB,sBAAsBvjB,UAC5CH,EAAAA,EAAAA,KAACqD,EAAAA,EAAU,CAACxC,MAAOL,EAAMY,OAAOuiB,YAAajgB,SAAU,GAAGvD,UACxDH,EAAAA,EAAAA,KAAA8D,EAAAA,GAAA,CAAAC,GAAA,gBASJ/D,EAAAA,EAAAA,KAAC6D,EAAAA,EAAG,CAACuI,GAAI,EAAEjM,UACTH,EAAAA,EAAAA,KAAC0L,EAAAA,GAAe,CACdb,MAAO+Y,EACPne,WAAS,EACTkG,YAAY,MACZnG,QAAQ,WACRoG,aAAc,CACZG,eAAe,EACfF,mBAAmB,EACnBC,aAAc,EACdE,UAAWC,EAAAA,IAEb/H,SAAWgI,GAAM2Y,EAAkB3Y,EAAEC,OAAOtB,YAGhDtI,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAAC2J,GAAI,EAAG4W,GAAI,EAAGtgB,UAAWN,EAAQwhB,WAAYjhB,WAAW,SAAQxC,SAAA,EAC9EH,EAAAA,EAAAA,KAACqD,EAAAA,EAAU,CAACI,GAAI,CAAE+Y,YAAa,OAAQrc,UACrCH,EAAAA,EAAAA,KAAA8D,EAAAA,GAAA,CAAAC,GAAA,SAAA2L,OAAA,CAAAC,EAA4B,OAAZlJ,QAAY,IAAZA,OAAY,EAAZA,EAAclD,aAEhCvD,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACI,MAAI,EAACE,IAAE,EAAA3C,UACXoC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACE,WAAW,SAAQxC,SAAA,EACjCH,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CACHI,MAAI,EACJE,IAAE,EACFW,GAAI,CACF+b,SAAU,SACVrV,MAAO,OACPhK,UAEFH,EAAAA,EAAAA,KAACqD,EAAAA,EAAU,CACToG,WAAY,IACZ5I,MAAM,cACN0H,MAAM,QACN9E,GAAI,CACF+b,SAAU,SACVmG,aAAc,WACdC,WAAY,UACZzlB,SAEDyjB,EAAU,GAAAriB,OAAMqiB,GAAe,UAGpC5jB,EAAAA,EAAAA,KAACqD,EAAAA,EAAU,CACToG,WAAY,IACZ5I,MAAM,cACN4C,GAAI,CACFqF,WAAY,OACZ3I,SAEY,OAAbyG,QAAa,IAAbA,OAAa,EAAbA,EAAerD,wBAQ9BhB,EAAAA,EAAAA,MAACsB,EAAAA,EAAG,CAAA1D,SAAA,EACFoC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACE,WAAW,SAAQxC,SAAA,EACjCH,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACI,MAAI,EAACE,IAAE,EAAA3C,UACXH,EAAAA,EAAAA,KAACqD,EAAAA,EAAU,CAACmC,QAAQ,KAAK3E,MAAM,cAAaV,UAC1CH,EAAAA,EAAAA,KAAA8D,EAAAA,GAAA,CAAAC,GAAA,eAGH0C,GAAgBG,IACf5G,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACI,MAAI,EAAAzC,UACRH,EAAAA,EAAAA,KAAC0Q,EAAW,CAAC5C,UAAWrH,EAAcsH,UAAWnH,EAAe+J,aAAcyU,UAKpF7iB,EAAAA,EAAAA,MAACsB,EAAAA,EAAG,CACFJ,GACEiiB,EACI,CACAnb,QAAS,MACTsb,cAAe,QAEf,CAAC,EACN1lB,SAAA,EAGC2kB,IACAviB,EAAAA,EAAAA,MAACsB,EAAAA,EAAG,CAACuI,GAAI,EAAG3I,GAAI,CAAE/C,SAAU,YAAaP,SAAA,EACvCH,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACiB,GAAI,CAAE7C,OAAQ,QAAU6B,WAAS,EAACE,WAAW,SAAQxC,UACzDoC,EAAAA,EAAAA,MAACc,EAAAA,EAAU,CAACxC,MAAM,cAAc6C,SAAS,OAAMvD,SAAA,EAC7CH,EAAAA,EAAAA,KAAA8D,EAAAA,GAAA,CAAAC,GAAA,WAA8B,IAAE2D,GAAQoe,EAAAA,EAAAA,IAAuBpe,GAAS,MACxEnF,EAAAA,EAAAA,MAACc,EAAAA,EAAU,CAACC,UAAU,OAAOG,GAAI,CAAEqF,WAAY,OAASpF,SAAS,OAAMvD,SAAA,CACvD,OAAbyG,QAAa,IAAbA,OAAa,EAAbA,EAAerD,OAAO,QAAkB,OAAZkD,QAAY,IAAZA,OAAY,EAAZA,EAAclD,gBAIjDvD,EAAAA,EAAAA,KAAC6D,EAAAA,EAAG,CAACuI,GAAI,EAAEjM,UAETH,EAAAA,EAAAA,KAAC+lB,GAAe,CACdpe,WAAYA,EACZC,WAAYA,EACZf,aAAcA,EACduZ,iBAAkBA,EAClBC,kBAAmBA,EACnBvS,UAAWrH,EACXsH,UAAWnH,EACXK,UAAWA,EACXS,MAAOA,UAKfnF,EAAAA,EAAAA,MAACsB,EAAAA,EAAG,CAACuI,GAAI,EAAG1J,UAAWN,EAAQyhB,gBAAgB1jB,SAAA,EAC7CoC,EAAAA,EAAAA,MAACsB,EAAAA,EAAG,CACFJ,GAAI,CACF8G,QAAS+a,EAAc,IAAO,GAC9BnlB,SAAA,EAEFoC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAAC6F,eAAe,gBAAenI,SAAA,EAC5CH,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,CAAE0G,MAAO,OAAQhK,UAC9BH,EAAAA,EAAAA,KAACiiB,GAAkB,CACjB1W,MAAK7F,EAAAA,GAAAC,EAAE,CAAA5B,GAAA,WACP8G,MACEhE,EAAa+J,EAAWvJ,EAAAA,GAAMC,MAAQD,EAAAA,GAAME,OAAS,IAAiC,QAA9Bod,EAAY,OAATvD,QAAS,IAATA,OAAS,EAATA,EAAW3Y,cAAc,UAAE,IAAAkc,EAAAA,EAAI,GAE5FvC,aAAchC,EACd+B,UAAWvR,EAAWmU,EAAoBG,EAC1ChD,UAAWtR,EAAWoU,EAAoBC,EAC1C1C,kBAAmB1b,EAAa+J,EAAWvJ,EAAAA,GAAMC,MAAQD,EAAAA,GAAME,OAC/D+a,kBAAmBzb,EAAa+J,EAAWvJ,EAAAA,GAAMC,MAAQD,EAAAA,GAAME,OAC/Dd,aAAcA,EACdG,cAAeA,OAGnB5G,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,CAAE0G,MAAO,OAAQhK,UAC9BH,EAAAA,EAAAA,KAACiiB,GAAkB,CACjB1W,MAAK7F,EAAAA,GAAAC,EAAE,CAAA5B,GAAA,WACP8G,MACEhE,EAAa+J,EAAWvJ,EAAAA,GAAME,MAAQF,EAAAA,GAAMC,OAAS,SAAkC,QAA/Bsd,EAAa,OAAVvD,QAAU,IAAVA,OAAU,EAAVA,EAAY5Y,cAAc,UAAE,IAAAmc,EAAAA,EAAI,GAE7FxC,aAAevX,GAAUwV,EAAkBxV,GAC3CsX,UAAWvR,EAAWqU,EAAoBD,EAC1C9C,UAAWtR,EAAWsU,EAAoBH,EAC1C1C,iBAAkBxb,EAAa+J,EAAWvJ,EAAAA,GAAME,MAAQF,EAAAA,GAAMC,OAC9Dgb,kBAAmBzb,EAAa+J,EAAWvJ,EAAAA,GAAME,MAAQF,EAAAA,GAAMC,OAC/Dib,kBAAmB1b,EAAa+J,EAAWvJ,EAAAA,GAAME,MAAQF,EAAAA,GAAMC,OAC/Db,aAAcA,EACdG,cAAeA,UAInBke,IACA9kB,EAAAA,EAAAA,KAAC6D,EAAAA,EAAG,CAACuI,GAAI,EAAEjM,UACTH,EAAAA,EAAAA,KAACuF,EAAAA,EAAM,CACLC,QAAQ,WACRtC,KAAK,QACLuC,WAAS,EACT5E,MAAM,YACN6B,UAAWN,EAAQ2hB,gBACnB9hB,QAvLW+jB,KAC3BT,GAAa,EAAK,EAsL4BplB,UAE9BH,EAAAA,EAAAA,KAAA8D,EAAAA,GAAA,CAAAC,GAAA,kBAKPuhB,IACC/iB,EAAAA,EAAAA,MAACsB,EAAAA,EAAG,CAACnB,UAAWN,EAAQ0hB,cAAergB,GAAI,CAAE4H,EAAG,GAAIlL,SAAA,EAClDoC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACE,WAAW,SAAQxC,SAAA,EACjCH,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACI,MAAI,EAACE,GAAG,OAAOD,GAAG,OAAM1C,UAC5BH,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACC,WAAS,EAAAtC,UACbH,EAAAA,EAAAA,KAACimB,EAAW,SAGhBjmB,EAAAA,EAAAA,KAACqD,EAAAA,EAAU,CAACX,UAAWN,EAAQoiB,aAAarkB,UAC1CH,EAAAA,EAAAA,KAAA8D,EAAAA,GAAA,CAAAC,GAAA,iBAGJ/D,EAAAA,EAAAA,KAACqD,EAAAA,EAAU,CAACX,UAAWN,EAAQmiB,YAAYpkB,UACzCH,EAAAA,EAAAA,KAAA8D,EAAAA,GAAA,CAAAC,GAAA,cAEF/D,EAAAA,EAAAA,KAAC8Q,EAAAA,EAAU,CAACpO,UAAWN,EAAQqiB,YAAaxiB,QAzMhCikB,KACxBX,GAAa,GACbJ,GAAiB,EAuMkEhlB,UACrEH,EAAAA,EAAAA,KAAA8D,EAAAA,GAAA,CAAAC,GAAA,2BAOX,G","sources":["assets/images/swap/back.tsx","components/CurrencySelector/button.tsx","components/CurrencySelector/index.tsx","components/swap/AddLiquidityButton.tsx","components/swap/AddLiquidityConfirmModal.tsx","hooks/swap/usePriceInvert.ts","assets/images/swap/Lock.tsx","components/swap/SwapDepositAmount.tsx","components/swap/SwapFeeSelector.tsx","components/swap/SwapUIWrapper.tsx","assets/images/swap/warning.tsx","components/TokenToggle/index.tsx","utils/computeSurroundingTicks.ts","hooks/swap/usePoolTickData.ts","views/swap-liquidity-v3/liquidity/AddLiquidity/PriceRangeChart/Area.tsx","views/swap-liquidity-v3/liquidity/AddLiquidity/PriceRangeChart/AxisBottom.tsx","views/swap-liquidity-v3/liquidity/AddLiquidity/PriceRangeChart/svg.tsx","views/swap-liquidity-v3/liquidity/AddLiquidity/PriceRangeChart/Brush.tsx","../packages/hooks/src/usePrevious.ts","views/swap-liquidity-v3/liquidity/AddLiquidity/PriceRangeChart/Line.tsx","assets/images/swap/zoomIn.tsx","assets/images/swap/zoomOut.tsx","views/swap-liquidity-v3/liquidity/AddLiquidity/PriceRangeChart/Zoom.tsx","views/swap-liquidity-v3/liquidity/AddLiquidity/PriceRangeChart/Chart.tsx","views/swap-liquidity-v3/liquidity/AddLiquidity/PriceRangeChart/index.tsx","hooks/swap/useDensityChartData.ts","views/swap-liquidity-v3/liquidity/AddLiquidity/SetPriceRange.tsx"],"sourcesContent":["import { SvgIcon, SvgIconProps } from \"@mui/material\";\n\nexport default function BackIcon(props: SvgIconProps) {\n  return (\n    <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M14.2002 6L8.2002 12L14.2002 18L15.6102 16.59L11.0302 12L15.6102 7.41L14.2002 6Z\" />\n    </SvgIcon>\n  );\n}\n","import { useCallback } from \"react\";\nimport { Grid, Typography, Box } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { KeyboardArrowDown } from \"@mui/icons-material\";\nimport { isDarkTheme } from \"utils\";\nimport Loading from \"components/Loading\";\nimport { Trans } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Token } from \"@w2e/swap-sdk\";\nimport { TokenImage } from \"components/index\";\n\nconst useStyle = (bgGray: boolean) =>\n  makeStyles((theme: Theme) => {\n    return {\n      selectButton: {\n        position: \"relative\",\n        padding: \"0 16px 0 12px\",\n        height: \"44px\",\n        color: \"#ffffff\",\n        cursor: \"pointer\",\n        backgroundColor: isDarkTheme(theme)\n          ? theme.palette.background.level2\n          : bgGray\n            ? theme.colors.lightGray200\n            : \"#ffffff\",\n        borderRadius: `${theme.radius}px`,\n      },\n      selectButtonActive: {\n        padding: \"0 16px\",\n        height: \"44px\",\n        lineHeight: \"44px\",\n        background: theme.themeOption.defaultGradient,\n        color: \"#ffffff\",\n        cursor: \"pointer\",\n        borderRadius: `${theme.radius}px`,\n      },\n      arrow: {\n        color: isDarkTheme(theme) ? \"inherit\" : \"#757575\",\n        \"&.active\": {\n          color: \"#fff\",\n        },\n      },\n    };\n  });\n\nexport interface CurrencySelectorButtonProps {\n  currency: undefined | null | Token;\n  onClick?: () => void;\n  bgGray?: boolean;\n  loading?: boolean;\n  disabled?: boolean;\n}\n\nexport default function CurrencySelectorButton({\n  currency,\n  onClick,\n  bgGray = false,\n  loading,\n  disabled,\n}: CurrencySelectorButtonProps) {\n  const classes = useStyle(bgGray)();\n\n  const handleButtonClick = useCallback(() => {\n    if (loading) return;\n    if (onClick) onClick();\n  }, [loading, onClick]);\n\n  return currency ? (\n    <Grid container className={classes.selectButton} alignItems=\"center\" onClick={handleButtonClick}>\n      <Grid item mr={1} xs>\n        <Grid container alignItems=\"center\" gap=\"0 8px\">\n          <TokenImage logo={currency.logo} size=\"28px\" tokenId={currency.address} />\n          <Typography component=\"span\">{currency.symbol}</Typography>\n        </Grid>\n      </Grid>\n      {!disabled && (\n        <KeyboardArrowDown\n          className={classes.arrow}\n          sx={{\n            fontSize: \"1rem\",\n          }}\n        />\n      )}\n      {loading && <Loading loading={loading} circularSize={20} />}\n    </Grid>\n  ) : (\n    <Box className={classes.selectButtonActive} onClick={handleButtonClick}>\n      <Grid container alignItems=\"center\">\n        <Grid container alignItems=\"center\" item xs>\n          <Trans>Select a token</Trans>\n        </Grid>\n        <KeyboardArrowDown\n          className={`${classes.arrow} active`}\n          sx={{\n            fontSize: \"1rem\",\n          }}\n        />\n      </Grid>\n    </Box>\n  );\n}\n","import { useState, useMemo } from \"react\";\nimport { TokenInfo } from \"types/token\";\nimport { Token } from \"@w2e/swap-sdk\";\nimport { useToken } from \"hooks/useCurrency\";\nimport Selector from \"./selector\";\nimport CurrencySelectButton from \"./button\";\n\nexport interface CurrencySelectorProps {\n  currencyId: string | undefined;\n  onChange: (token: TokenInfo) => void;\n  disabledCurrency?: Token[];\n  bgGray?: boolean;\n  loading?: boolean;\n  disabled?: boolean;\n  activeCurrencies?: Token[];\n  version?: \"v2\" | \"v3\";\n}\n\nexport default function CurrencySelector({\n  currencyId,\n  onChange,\n  disabledCurrency,\n  activeCurrencies,\n  bgGray = false,\n  loading,\n  disabled = false,\n  version,\n}: CurrencySelectorProps) {\n  const [selectorShow, setSelectorShow] = useState(false);\n\n  const onTokenChange = (token: TokenInfo) => {\n    if (onChange) onChange(token);\n    setSelectorShow(false);\n  };\n\n  const [, token] = useToken(currencyId);\n\n  const disabledCurrencyIds = useMemo(() => {\n    if (disabledCurrency && disabledCurrency.length) {\n      return disabledCurrency.map((currency) => currency?.address);\n    }\n    return [];\n  }, [disabledCurrency]);\n\n  const activeCurrencyIds = useMemo(() => {\n    if (activeCurrencies && activeCurrencies.length) {\n      return activeCurrencies.map((currency) => currency?.address);\n    }\n    return [];\n  }, [activeCurrencies]);\n\n  return (\n    <>\n      <CurrencySelectButton\n        currency={token}\n        onClick={() => {\n          if (disabled) return;\n          setSelectorShow(true);\n        }}\n        bgGray={bgGray}\n        loading={loading}\n        disabled\n      />\n      {selectorShow && (\n        <Selector\n          open={selectorShow}\n          onClose={() => setSelectorShow(false)}\n          onChange={onTokenChange}\n          disabledCurrencyIds={disabledCurrencyIds}\n          activeCurrencyIds={activeCurrencyIds}\n          version={version}\n        />\n      )}\n    </>\n  );\n}\n","import Button, { ButtonConnectorProps } from \"components/authentication/ButtonConnector\";\nimport { Override } from \"@w2e/types\";\nimport { t } from \"@lingui/macro\";\n\nexport interface AddLiquidityButtonProps {\n  error: string | undefined | null;\n}\n\nexport default function AddLiquidityButton(props: Override<ButtonConnectorProps, AddLiquidityButtonProps>) {\n  const { error } = props;\n\n  return (\n    <Button\n      variant=\"contained\"\n      fullWidth\n      sx={{\n        borderRadius: \"8px\",\n      }}\n      {...props}\n    >\n      {error ?? t`Confirm`}\n    </Button>\n  );\n}\n","import { useState, useMemo } from \"react\";\nimport { Typography, Grid, Button } from \"@mui/material\";\nimport SwapModal from \"components/modal/swap\";\nimport { formatTickPrice } from \"utils/swap/formatTickPrice\";\nimport { Bound } from \"constants/swap\";\nimport { Trans } from \"@lingui/macro\";\nimport { SyncAlt as SyncAltIcon } from \"@mui/icons-material\";\nimport { Position, Token } from \"@w2e/swap-sdk\";\nimport { useTicksAtLimitInvert } from \"hooks/swap/usePriceInvert\";\n\nexport interface AddLiquidityConfirmModalProps {\n  open: boolean;\n  onCancel: () => void;\n  onConfirm: () => void;\n  position: Position;\n  baseCurrencyDefault?: Token;\n}\n\nexport default function AddLiquidityConfirmModal({\n  open,\n  onCancel,\n  onConfirm,\n  position,\n  baseCurrencyDefault,\n}: AddLiquidityConfirmModalProps) {\n  const currency0 = position?.pool?.token0;\n  const currency1 = position?.pool?.token1;\n\n  const [manuallyInverted, setManuallyInverted] = useState(false);\n\n  const baseCurrency = useMemo(() => {\n    const base = baseCurrencyDefault\n      ? baseCurrencyDefault === currency0\n        ? currency0\n        : baseCurrencyDefault === currency1\n          ? currency1\n          : currency0\n      : currency0;\n\n    if (manuallyInverted) {\n      if (base === currency0) return currency1;\n      return currency0;\n    }\n\n    return base;\n  }, [baseCurrencyDefault, currency1, currency0, manuallyInverted]);\n\n  const sorted = baseCurrency === currency0;\n  const quoteCurrency = sorted ? currency1 : currency0;\n\n  const ticksAtLimit = useTicksAtLimitInvert({\n    position,\n    inverted: manuallyInverted,\n  });\n\n  const { price, priceLower, priceUpper } = useMemo(() => {\n    const price = sorted ? position.pool.priceOf(position.pool.token0) : position.pool.priceOf(position.pool.token1);\n\n    const priceLower = sorted ? position.token0PriceLower : position.token0PriceUpper.invert();\n    const priceUpper = sorted ? position.token0PriceUpper : position.token0PriceLower.invert();\n\n    return {\n      price,\n      priceLower,\n      priceUpper,\n    };\n  }, [sorted, position]);\n\n  const onConvertClick = () => {\n    setManuallyInverted(!manuallyInverted);\n  };\n\n  return (\n    <SwapModal open={open} onClose={onCancel} title=\"Add Liquidity\">\n      <>\n        <Grid container flexDirection=\"column\" spacing={3}>\n          <Grid item container>\n            <Typography>\n              <Trans>Deposited Amount</Trans>\n            </Typography>\n            <Grid item xs container flexDirection=\"column\" justifyContent=\"flex-end\">\n              <Typography color=\"textPrimary\" align=\"right\">\n                {`${position.amount0.toSignificant(6, { groupSeparator: \",\" })} ${currency0.symbol}`}\n              </Typography>\n              <Typography\n                color=\"textPrimary\"\n                align=\"right\"\n                sx={{\n                  marginTop: \"8px\",\n                }}\n              >\n                {`${position.amount1.toSignificant(6, { groupSeparator: \",\" })} ${currency1.symbol}`}\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid item container>\n            <Typography>\n              <Trans>Current Price</Trans>\n            </Typography>\n            <Grid item xs container justifyContent=\"flex-end\">\n              <Typography color=\"textPrimary\" align=\"right\">\n                {`${price.toSignificant(5, { groupSeparator: \",\" })} ${quoteCurrency.symbol} per ${baseCurrency.symbol\n                  }`}\n              </Typography>\n              <SyncAltIcon sx={{ fontSize: \"1rem\", marginLeft: \"6px\", cursor: \"pointer\" }} onClick={onConvertClick} />\n            </Grid>\n          </Grid>\n          <Grid item container>\n            <Typography>\n              <Trans>Price Range</Trans>\n            </Typography>\n            <Grid item xs container justifyContent=\"flex-end\">\n              <Typography color=\"textPrimary\" align=\"right\">\n                {`${formatTickPrice(priceLower, ticksAtLimit, Bound.LOWER)}`} -{\" \"}\n                {`${formatTickPrice(priceUpper, ticksAtLimit, Bound.UPPER)}`}{\" \"}\n                {`${quoteCurrency?.symbol} per ${baseCurrency?.symbol}`}\n              </Typography>\n              <SyncAltIcon sx={{ fontSize: \"1rem\", marginLeft: \"6px\", cursor: \"pointer\" }} onClick={onConvertClick} />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Button variant=\"contained\" size=\"large\" fullWidth sx={{ marginTop: \"40px\" }} onClick={onConfirm}>\n          <Trans>Add</Trans>\n        </Button>\n      </>\n    </SwapModal>\n  );\n}\n","import { useMemo } from \"react\";\nimport { Position } from \"@w2e/swap-sdk\";\nimport { Bound } from \"constants/swap\";\nimport useIsTickAtLimit from \"hooks/swap/useIsTickAtLimit\";\n\nexport function useTicksAtLimitInvert({ position, inverted }: { position: Position; inverted?: boolean }) {\n  const { tickLower, tickUpper } = position || {};\n\n  const feeAmount = position?.pool.fee;\n\n  const _tickAtLimit = useIsTickAtLimit(feeAmount, tickLower, tickUpper);\n\n  const tickAtLimit = useMemo(() => {\n    if (!inverted) return _tickAtLimit;\n\n    return {\n      [Bound.LOWER]: _tickAtLimit[Bound.UPPER] ? true : undefined,\n      [Bound.UPPER]: _tickAtLimit[Bound.LOWER] ? true : undefined,\n    };\n  }, [_tickAtLimit, inverted]);\n\n  return tickAtLimit;\n}\n","import { SvgIcon } from \"@mui/material\";\n\nexport default (props: any) => {\n  return (\n    <SvgIcon viewBox=\"0 0 18 20\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M14.5227 5.39601V6.92935C16.2451 7.46696 17.5 9.02614 17.5 10.8884V15.8253C17.5 18.1308 15.5886 20 13.2322 20H4.7688C2.41136 20 0.5 18.1308 0.5 15.8253V10.8884C0.5 9.02614 1.75595 7.46696 3.47729 6.92935V5.39601C3.48745 2.41479 5.95667 0 8.98476 0C12.0535 0 14.5227 2.41479 14.5227 5.39601ZM9.00508 1.73904C11.0678 1.73904 12.7445 3.37871 12.7445 5.39601V6.7137H5.25553V5.37613C5.26569 3.36878 6.94232 1.73904 9.00508 1.73904ZM9.88912 14.4549C9.88912 14.9419 9.49283 15.3294 8.99492 15.3294C8.50717 15.3294 8.11088 14.9419 8.11088 14.4549V12.2488C8.11088 11.7718 8.50717 11.3843 8.99492 11.3843C9.49283 11.3843 9.88912 11.7718 9.88912 12.2488V14.4549Z\"\n        fill=\"#111936\"\n      />\n    </SvgIcon>\n  );\n};\n","import { Box, Grid, Typography, Chip } from \"@mui/material\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport { CurrencyAmount, Token } from \"@w2e/swap-sdk\";\nimport LockIcon from \"assets/images/swap/Lock\";\nimport { NumberTextField, TokenImage } from \"components/index\";\nimport { SAFE_DECIMALS_LENGTH, MAX_SWAP_INPUT_LENGTH } from \"constants/index\";\nimport { formatCurrencyAmount } from \"utils/swap/formatCurrencyAmount\";\nimport { isDarkTheme } from \"utils\";\nimport { Trans } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\n\nconst useStyle = makeStyles((theme: Theme) => {\n  return {\n    box: {\n      position: \"relative\",\n      borderRadius: `${theme.radius}px`,\n      backgroundColor: theme.palette.background.level3,\n      border: theme.palette.border.gray200,\n    },\n    input: {\n      \"& input\": {\n        textAlign: \"right\",\n        fontSize: \"20px\",\n        fontWeight: 700,\n        // color: theme.textPrimary,\n        [theme.breakpoints.down(\"sm\")]: {\n          fontSize: \"16px\",\n        },\n      },\n      \"& input::placeholder\": {\n        fontSize: \"20px\",\n        fontWeight: 700,\n        [theme.breakpoints.down(\"sm\")]: {\n          fontSize: \"16px\",\n        },\n      },\n    },\n    chip: {\n      padding: \"0 10px\",\n      height: \"44px\",\n      backgroundColor: isDarkTheme(theme) ? theme.palette.background.level2 : theme.colors.lightGray200,\n      borderRadius: `${theme.radius}px`,\n      \"& .MuiChip-label\": {\n        paddingLeft: \"18px\",\n      },\n    },\n    maxButton: {\n      padding: \"1px 3px\",\n      cursor: \"pointer\",\n      borderRadius: \"2px\",\n      backgroundColor: theme.colors.secondaryMain,\n      color: \"#ffffff\",\n    },\n  };\n});\n\nconst LockMask = ({ type }: { type: string | undefined }) => {\n  const theme = useTheme() as Theme;\n\n  return (\n    <Box\n      sx={{\n        position: \"absolute\",\n        width: \"100%\",\n        height: \"100%\",\n        top: 0,\n        left: 0,\n      }}\n    >\n      <Box\n        sx={{\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\",\n          top: 0,\n          left: 0,\n          background: type === \"addLiquidity\" ? theme.palette.background.level2 : theme.palette.background.level1,\n          opacity: 0.9,\n          borderRadius: \"12px\",\n        }}\n      />\n      <Grid\n        container\n        sx={{\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\",\n          top: 0,\n          left: 0,\n          zIndex: 1,\n        }}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <LockIcon />\n        <Typography align=\"center\" color=\"textPrimary\">\n          <Trans>The market price is outside your specified price range. Single-asset deposit only.</Trans>\n        </Typography>\n      </Grid>\n    </Box>\n  );\n};\n\nexport interface SwapDepositAmountProps {\n  currency: Token | undefined;\n  type?: string;\n  value: string | number;\n  locked?: boolean;\n  onUserInput: (value: string) => void;\n  showMaxButton?: boolean;\n  onMax?: () => void;\n  currencyBalance: CurrencyAmount<Token> | undefined;\n}\n\nexport default function SwapDepositAmount({\n  currency,\n  value,\n  locked = false,\n  onUserInput,\n  type,\n  currencyBalance,\n  showMaxButton,\n  onMax,\n}: SwapDepositAmountProps) {\n  const classes = useStyle();\n\n  const decimals = currency?.decimals ?? SAFE_DECIMALS_LENGTH;\n\n  return (\n    <Box sx={{ p: 2 }} className={classes.box}>\n      <Grid container alignItems=\"center\">\n        <Chip\n          className={classes.chip}\n          label={currency?.symbol}\n          avatar={<TokenImage logo={currency?.logo} tokenId={currency?.wrapped.address} />}\n        />\n        <Grid item xs>\n          <NumberTextField\n            value={value}\n            fullWidth\n            className={classes.input}\n            placeholder=\"0.0\"\n            variant=\"standard\"\n            numericProps={{\n              thousandSeparator: true,\n              decimalScale: decimals > SAFE_DECIMALS_LENGTH ? SAFE_DECIMALS_LENGTH : decimals,\n              allowNegative: false,\n              maxLength: MAX_SWAP_INPUT_LENGTH,\n            }}\n            onChange={(e) => {\n              onUserInput(e.target.value);\n            }}\n          />\n        </Grid>\n      </Grid>\n      <Grid container mt={1}>\n        <Grid item mr={1}>\n          <Typography>\n            <Trans>Balance:</Trans> {currency ? formatCurrencyAmount(currencyBalance, currency.decimals) : \"--\"}\n          </Typography>\n        </Grid>\n        {showMaxButton && (\n          <Grid>\n            <Typography fontSize={12} className={classes.maxButton} onClick={onMax}>\n              <Trans>Max</Trans>\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n      {locked && <LockMask type={type} />}\n    </Box>\n  );\n}\n","import { useState, useMemo, useCallback, memo } from \"react\";\nimport { Grid, Box, Typography } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { usePoolsTokenAmountsFromKey } from \"hooks/swap/v3Calls\";\nimport { isDarkTheme } from \"utils\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\nimport { BigNumber } from \"@w2e/utils\";\nimport { Token, FeeAmount } from \"@w2e/swap-sdk\";\n\nexport const FEE_DESCRIPTION = {\n  [FeeAmount.LOW]: t`Best for stable pairs`,\n  [FeeAmount.MEDIUM]: t`Best for most pairs`,\n  [FeeAmount.HIGH]: t`Best for exotic pairs`,\n};\n\nconst NO_LIQUIDITY = \"NO_LIQUIDITY\";\n\nexport type LOCAL_FEE = {\n  feeTier: FeeAmount;\n  description: string;\n};\n\nconst LOCAL_FEES: LOCAL_FEE[] = [\n  {\n    feeTier: FeeAmount.LOW,\n    description: FEE_DESCRIPTION[FeeAmount.LOW],\n  },\n  {\n    feeTier: FeeAmount.MEDIUM,\n    description: FEE_DESCRIPTION[FeeAmount.MEDIUM],\n  },\n  {\n    feeTier: FeeAmount.HIGH,\n    description: FEE_DESCRIPTION[FeeAmount.HIGH],\n  },\n];\n\nexport const feeFormat = (feeValue: number) => {\n  return `${new BigNumber(feeValue).div(10000).toString()}%`;\n};\n\nconst useStyle = makeStyles((theme: Theme) => {\n  const border = \"1px solid #29314F\";\n\n  return {\n    feeItem: {\n      padding: \"13px 12px\",\n      border: isDarkTheme(theme) ? border : `1px solid ${theme.colors.lightGray200BorderColor}`,\n      borderRadius: \"12px\",\n      cursor: \"pointer\",\n      backgroundColor: isDarkTheme(theme) ? \"transparent\" : \"#fff\",\n      \"&.active\": {\n        border: `2px solid #5669DC`,\n      },\n    },\n    button: {\n      width: \"auto\",\n      padding: \"7px 9px\",\n      backgroundColor: isDarkTheme(theme) ? theme.palette.background.level4 : theme.colors.lightGray200,\n      borderRadius: \"8px\",\n      cursor: \"pointer\",\n      outline: \"none\",\n      border: \"none\",\n      color: theme.themeOption.textPrimary,\n      [theme.breakpoints.down(\"sm\")]: {\n        fontSize: \"10px\",\n      },\n    },\n    feeButton: {\n      [theme.breakpoints.down(\"sm\")]: {\n        display: \"flex\",\n        alignItems: \"center\",\n        textAlign: \"center\",\n      },\n    },\n    activeFee: {\n      border: isDarkTheme(theme) ? border : `1px solid ${theme.colors.lightGray200BorderColor}`,\n      borderRadius: \"12px\",\n      backgroundColor: isDarkTheme(theme) ? \"transparent\" : \"#fff\",\n    },\n  };\n});\n\nexport type FeeItem = {\n  feeTier: FeeAmount;\n  description: string;\n  balance0?: BigNumber;\n  balance1?: BigNumber;\n};\n\nexport const FeeItemComponent = memo(\n  ({\n    fee,\n    onClick,\n    activeFee,\n    getPercentage,\n  }: {\n    fee: FeeItem;\n    onClick: (value: FeeItem) => void;\n    activeFee: FeeAmount;\n    getPercentage: (value: FeeItem) => string;\n  }) => {\n    const classes = useStyle();\n\n    const liquidityPercentage = getPercentage(fee);\n\n    return (\n      <Box\n        className={`${classes.feeItem} ${Number(fee.feeTier) === activeFee ? \"active\" : \"\"}`}\n        onClick={() => onClick(fee)}\n      >\n        <Typography variant=\"h4\" color=\"textPrimary\">\n          <Trans>{feeFormat(fee.feeTier)} fee</Trans>\n        </Typography>\n        <Box mt={1}>\n          <Typography fontSize=\"12px\" align=\"left\">\n            {fee.description}\n          </Typography>\n        </Box>\n        <Box mt={1}>\n          <Typography\n            className={`${classes.button} ${classes.feeButton}`}\n            component=\"span\"\n            color=\"textPrimary\"\n            fontSize=\"12px\"\n          >\n            {liquidityPercentage === NO_LIQUIDITY ? t`Not created` : t`${liquidityPercentage} selected`}\n          </Typography>\n        </Box>\n      </Box>\n    );\n  },\n);\n\nexport interface SwapFeeSelectorProps {\n  currencyA: Token | undefined;\n  currencyB: Token | undefined;\n  defaultActiveFee?: FeeAmount;\n  onSelect: (value: FeeAmount) => void;\n}\n\nexport default function SwapFeeSelector({\n  currencyA,\n  currencyB,\n  defaultActiveFee = FeeAmount.MEDIUM,\n}: SwapFeeSelectorProps) {\n  const classes = useStyle();\n\n  const [activeFee] = useState<FeeAmount>(defaultActiveFee);\n  // const [feeShow, setFeeToggleShow] = useState(false);\n\n  const feeAmountKeys = useMemo(() => {\n    return LOCAL_FEES.map((fee) => {\n      if (!currencyA?.address || !currencyB?.address) return undefined;\n\n      return {\n        fee: fee.feeTier,\n        token0: currencyA.address,\n        token1: currencyB.address,\n      };\n    });\n  }, [LOCAL_FEES, currencyA, currencyB]);\n\n  const { result: tvl } = usePoolsTokenAmountsFromKey(feeAmountKeys);\n\n  const fees = useMemo(() => {\n    return LOCAL_FEES.map((fee, index) => {\n      if (tvl && tvl[index]) {\n        return {\n          ...tvl[index],\n          ...fee,\n        };\n      }\n\n      return {\n        ...fee,\n      };\n    });\n  }, [tvl, LOCAL_FEES]);\n\n  const getFee = (feeValue: FeeAmount) => {\n    return fees.filter((fee) => fee.feeTier === feeValue)[0];\n  };\n\n  const activeFeeObject = getFee(activeFee);\n\n  // const handleSelectFee = (fee: LOCAL_FEE) => {\n  //   setActiveFee(fee.feeTier);\n  //   onSelect(fee.feeTier);\n  // };\n\n  // const feeToggleShow = () => {\n  //   setFeeToggleShow(!feeShow);\n  // };\n\n  const totalValueLocked = fees.reduce(\n    (accumulator, currentValue) => {\n      return [\n        new BigNumber(accumulator[0]).plus(currentValue.balance0 ?? 0),\n        new BigNumber(accumulator[1]).plus(currentValue.balance1 ?? 0),\n      ];\n    },\n    [new BigNumber(0), new BigNumber(0)],\n  );\n\n  const getPercentage = useCallback(\n    (fee: FeeItem) => {\n      if (!totalValueLocked) return \"NO_LIQUIDITY\";\n      if (new BigNumber(fee.balance0 ?? 0).isEqualTo(0)) return \"NO_LIQUIDITY\";\n\n      return `${new BigNumber(fee.balance0 ?? 0)\n        .plus(fee.balance1 ?? 0)\n        .div(new BigNumber(totalValueLocked[0]).plus(totalValueLocked[1]))\n        .multipliedBy(100)\n        .toFixed(0, 4)}%`;\n    },\n    [totalValueLocked],\n  );\n\n  const currentLiquidityPercentage = getPercentage(activeFeeObject);\n\n  return (\n    <>\n      <Grid container sx={{ p: 2 }} className={classes.activeFee}>\n        <Grid item xs={8}>\n          <Typography variant=\"h4\" color=\"textPrimary\">\n            <Trans>{feeFormat(activeFeeObject.feeTier)} fee</Trans>\n          </Typography>\n          <Box mt={1}>\n            <Typography className={classes.button} component=\"span\" color=\"textPrimary\" fontSize=\"12px\">\n              {currentLiquidityPercentage === NO_LIQUIDITY ? t`Not created` : t`${currentLiquidityPercentage} selected`}\n            </Typography>\n          </Box>\n        </Grid>\n        {/* <Grid item xs={4} container justifyContent=\"flex-end\" alignItems=\"center\">\n          <button\n            className={classes.button}\n            component=\"span\"\n            color=\"textPrimary\"\n            fontSize=\"12px\"\n            onClick={feeToggleShow}\n          >\n            {feeShow ? t`Hide` : t`Edit`}\n          </button>\n        </Grid> */}\n      </Grid>\n      {/* {feeShow && (\n        <Grid mt={2} container spacing={1}>\n          {fees.map((item) => (\n            <Grid item xs={4} key={Number(item.feeTier)}>\n              <FeeItem\n                fee={item}\n                activeFee={activeFeeObject.feeTier}\n                onClick={handleSelectFee}\n                getPercentage={getPercentage}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      )} */}\n    </>\n  );\n}\n","import { Box, Typography, Grid } from \"@mui/material\";\nimport { t } from \"@lingui/macro\";\nimport { Wrapper, TabPanel } from \"components/index\";\nimport React from \"react\";\n// import { INFO_URL } from \"constants/index\";\n\nfunction LinkIcon() {\n  return (\n    <svg width=\"6\" height=\"7\" viewBox=\"0 0 6 7\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.09619 1.5H0.303301V0.5H5.3033H5.8033V1V6H4.8033V2.20711L0.707107 6.3033L0 5.59619L4.09619 1.5Z\"\n        fill=\"#4F5A84\"\n      />\n    </svg>\n  );\n}\n\ntype Button = {\n  id: number | string;\n  value: React.ReactNode;\n  path?: string;\n  key: string;\n};\n\nfunction SwapWrapper({ children, buttons }: { children: React.ReactNode; buttons: Button[] }) {\n  return (\n    <Wrapper>\n      <TabPanel tabs={buttons} />\n      <Box mt={4}>{children}</Box>\n    </Wrapper>\n  );\n}\n\nexport function SwapV2Wrapper({ children }: { children: React.ReactNode }) {\n  const buttons = [\n    { id: 3, value: t`Wrap`, path: \"/swap/v2/wrap\", key: \"/wrap\" },\n    {\n      id: 2,\n      key: \"/swap/v2/liquidity\",\n      value: t`Liquidity V2`,\n      path: \"/swap/v2/liquidity\",\n    },\n    {\n      id: 4,\n      key: \"swap-v3\",\n      value: (\n        <Grid container>\n          <Typography\n            sx={{\n              fontWeight: 600,\n              \"@media (max-width: 640px)\": {\n                fontSize: \"12px\",\n              },\n            }}\n          >\n            Exchange\n          </Typography>\n          <Box sx={{ margin: \"0 0 0 3px\", position: \"relative\", top: \"-4px\" }}>\n            <LinkIcon />\n          </Box>\n        </Grid>\n      ),\n      path: \"/swap\",\n    },\n  ];\n\n  return <SwapWrapper buttons={buttons}>{children}</SwapWrapper>;\n}\n\nexport default function _SwapWrapper({ children }: { children: React.ReactNode }) {\n  const buttons = [\n    { id: 1, value: t`Swap V3`, path: \"/swap\", key: \"/swap\" },\n    {\n      id: 2,\n      key: \"/swap/liquidity\",\n      value: t`Liquidity`,\n      path: \"/swap/liquidity\",\n    },\n    // {\n    //   id: 3,\n    //   key: \"info\",\n    //   value: (\n    //     <Grid container>\n    //       <Typography>Info</Typography>\n    //       <Box sx={{ margin: \"0 0 0 3px\", position: \"relative\", top: \"-4px\" }}>\n    //         <LinkIcon />\n    //       </Box>\n    //     </Grid>\n    //   ),\n    //   link: INFO_URL,\n    // },\n  ];\n\n  return <SwapWrapper buttons={buttons}>{children}</SwapWrapper>;\n}\n","import { SvgIcon } from \"@mui/material\";\n\nexport default (props: any) => {\n  return (\n    <SvgIcon viewBox=\"0 0 16 16\" {...props}>\n      <path\n        d=\"M8 10.9653C8.44731 10.9653 8.82227 11.3403 8.82227 11.7876C8.82227 12.2349 8.44731 12.6099 8 12.6099C7.56914 12.6099 7.17774 12.2349 7.19748 11.8073C7.17774 11.337 7.5494 10.9653 8 10.9653Z\"\n        fill=\"#FFC107\"\n      />\n      <path\n        d=\"M0.389341 13.8794C-0.127039 12.9881 -0.130329 11.9257 0.382763 11.0376L5.53341 2.11775C6.04321 1.21984 6.96415 0.687012 7.99691 0.687012C9.02967 0.687012 9.9506 1.22313 10.4604 2.11446L15.6176 11.0442C16.1307 11.9421 16.1274 13.0111 15.6078 13.9024C15.0947 14.7839 14.177 15.3134 13.1508 15.3134H2.86271C1.83323 15.3134 0.909011 14.7773 0.389341 13.8794ZM1.50762 13.2347C1.79377 13.7281 2.30028 14.0208 2.86599 14.0208H13.1541C13.7133 14.0208 14.2165 13.7347 14.4961 13.2512C14.7789 12.7611 14.7822 12.1757 14.4994 11.6823L9.34213 2.75582C9.06256 2.26575 8.56263 1.97632 7.99691 1.97632C7.43448 1.97632 6.93126 2.26904 6.65169 2.75911L1.49775 11.6856C1.22147 12.1658 1.22476 12.7447 1.50762 13.2347Z\"\n        fill=\"#FFC107\"\n      />\n      <path\n        d=\"M8.20408 5.19314C8.59548 5.30496 8.83887 5.66018 8.83887 6.09105C8.81913 6.35088 8.80269 6.614 8.78295 6.87384C8.72704 7.86384 8.67113 8.83411 8.61521 9.82411C8.59548 10.1596 8.33564 10.403 8.00016 10.403C7.66468 10.403 7.40155 10.1432 7.38511 9.80438C7.38511 9.60046 7.38511 9.41298 7.36537 9.20577C7.32919 8.57099 7.28973 7.9362 7.25355 7.30141C7.23381 6.89028 7.19763 6.47915 7.1779 6.06802C7.1779 5.92001 7.19763 5.78845 7.25355 5.65689C7.42129 5.28852 7.81268 5.10104 8.20408 5.19314Z\"\n        fill=\"#FFC107\"\n      />\n    </SvgIcon>\n  );\n};\n","import { ButtonBase, Grid } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Token } from \"@w2e/swap-sdk\";\nimport { isDarkTheme } from \"utils\";\nimport { Theme } from \"@mui/material/styles\";\n\nconst useStyle = makeStyles((theme: Theme) => ({\n  container: {\n    background: isDarkTheme(theme) ? theme.palette.background.level3 : \"#fff\",\n    border: theme.palette.border.gray200,\n    borderRadius: \"8px\",\n    padding: \"2px\",\n  },\n  item: {\n    borderRadius: \"6px\",\n    \"&.active\": {\n      background: isDarkTheme(theme) ? theme.palette.background.level1 : \"#EFEFEF\",\n    },\n  },\n  buttonBase: {\n    lineHeight: \"20px\",\n    padding: \"2.5px 12px\",\n  },\n}));\n\nexport default function TokenToggle({\n  currencyA,\n  currencyB,\n  handleToggle,\n}: {\n  currencyA: Token | undefined;\n  currencyB: Token | undefined;\n  handleToggle: () => void;\n}) {\n  const classes = useStyle();\n\n  const isSorted = currencyA && currencyB && currencyA.sortsBefore(currencyB);\n\n  return currencyA && currencyB ? (\n    <Grid container className={classes.container} onClick={handleToggle}>\n      <Grid className={`${classes.item}${isSorted ? \" active\" : \"\"}`}>\n        <ButtonBase className={classes.buttonBase}>{isSorted ? currencyA.symbol : currencyB.symbol}</ButtonBase>\n      </Grid>\n      <Grid className={`${classes.item}${!isSorted ? \" active\" : \"\"}`}>\n        <ButtonBase className={classes.buttonBase}>{isSorted ? currencyB.symbol : currencyA.symbol}</ButtonBase>\n      </Grid>\n    </Grid>\n  ) : null;\n}\n","import { tickToPrice, Token } from \"@w2e/swap-sdk\";\nimport JSBI from \"jsbi\";\n\nconst PRICE_FIXED_DIGITS = 8;\n\nexport interface TickProcessed {\n  tickIdx: number;\n  liquidityActive: JSBI;\n  liquidityNet: JSBI;\n  price0: string;\n}\n\nexport interface TickData {\n  tickIdx: number;\n  liquidityNet: string;\n  liquidityGross: bigint;\n}\n\n// Computes the numSurroundingTicks above or below the active tick.\nexport default function computeSurroundingTicks(\n  token0: Token,\n  token1: Token,\n  activeTickProcessed: TickProcessed,\n  sortedTickData: TickData[],\n  pivot: number,\n  ascending: boolean,\n) {\n  let previousTickProcessed: TickProcessed = {\n    ...activeTickProcessed,\n  };\n  // Iterate outwards (either up or down depending on direction) from the active tick,\n  // building active liquidity for every tick.\n  let processedTicks: TickProcessed[] = [];\n\n  for (let i = pivot + (ascending ? 1 : -1); ascending ? i < sortedTickData.length : i >= 0; ascending ? i++ : i--) {\n    const tickIdx = Number(sortedTickData[i].tickIdx);\n    const currentTickProcessed = {\n      liquidityActive: previousTickProcessed.liquidityActive,\n      tickIdx,\n      liquidityNet: JSBI.BigInt(sortedTickData[i].liquidityNet),\n      price0: tickToPrice(token0, token1, tickIdx).toFixed(PRICE_FIXED_DIGITS),\n    };\n\n    // Update the active liquidity.\n    // If we are iterating ascending and we found an initialized tick we immediately apply\n    // it to the current processed tick we are building.\n    // If we are iterating descending, we don't want to apply the net liquidity until the following tick.\n    if (ascending) {\n      currentTickProcessed.liquidityActive = JSBI.add(\n        previousTickProcessed.liquidityActive,\n        JSBI.BigInt(sortedTickData[i].liquidityNet),\n      );\n    } else if (!ascending && JSBI.notEqual(previousTickProcessed.liquidityNet, JSBI.BigInt(0))) {\n      // We are iterating descending, so look at the previous tick and apply any net liquidity.\n      currentTickProcessed.liquidityActive = JSBI.subtract(\n        previousTickProcessed.liquidityActive,\n        previousTickProcessed.liquidityNet,\n      );\n    }\n\n    processedTicks.push(currentTickProcessed);\n    previousTickProcessed = currentTickProcessed;\n  }\n\n  if (!ascending) {\n    processedTicks = processedTicks.reverse();\n  }\n\n  return processedTicks;\n}\n","import { tickToPrice, TICK_SPACINGS, Token, FeeAmount, TickMath } from \"@w2e/swap-sdk\";\nimport BigNumber from \"bignumber.js\";\nimport { JSBI } from \"utils/index\";\nimport { useMemo } from \"react\";\nimport computeSurroundingTicks from \"utils/computeSurroundingTicks\";\nimport { useSwapAllTicks } from \"@w2e/hooks\";\nimport { usePoolCanisterId } from \"hooks/swap/index\";\nimport { PoolState, usePool } from \"./usePools\";\n\nconst PRICE_FIXED_DIGITS = 8;\n\nconst getActiveTick = (tickCurrent: number | undefined, feeAmount: FeeAmount) =>\n  (tickCurrent || tickCurrent === 0) && feeAmount\n    ? Math.floor(tickCurrent / TICK_SPACINGS[feeAmount]) * TICK_SPACINGS[feeAmount]\n    : undefined;\n\ntype Tick = {\n  liquidityGross: bigint;\n  liquidityNet: bigint;\n  price0: bigint;\n  price1: bigint;\n  tickIndex: bigint;\n  price0Decimal: number;\n  price1Decimal: number;\n};\n\nexport function useAllTicks(token0: Token | undefined, token1: Token | undefined, feeAmount: FeeAmount) {\n  const poolId = usePoolCanisterId(token0?.address, token1?.address, feeAmount);\n\n  const { result: allTicks, loading } = useSwapAllTicks(poolId);\n\n  const ticks = useMemo(() => {\n    const ticks: Tick[] = [];\n\n    if (allTicks) {\n      for (let i = 0; i < allTicks.length; i++) {\n        const tick = allTicks[i];\n        const sqrtRatioX = TickMath.getSqrtRatioAtTick(Number(tick.id));\n\n        const tempInfo = {\n          liquidityGross: tick.liquidityGross,\n          liquidityNet: tick.liquidityNet,\n          price0: BigInt(sqrtRatioX.toString()), // Nat.pow(sqrtRatioX, 2) * Nat.pow(10, 100);\n          price1: BigInt(JSBI.divide(JSBI.BigInt(1), sqrtRatioX).toString()), // Nat.pow(Nat.pow(10, 100) / sqrtRatioX, 2);\n          tickIndex: BigInt(tick.id),\n          price0Decimal: 1, // Nat.pow(10, 100);\n          price1Decimal: 1, // Nat.pow(Nat.pow(10, 100), 2);\n        };\n\n        ticks.push(tempInfo);\n      }\n    }\n\n    return ticks;\n  }, [allTicks]);\n\n  return { loading, result: ticks };\n}\n\nexport function usePoolActiveLiquidity(\n  currencyA: Token | undefined,\n  currencyB: Token | undefined,\n  feeAmount: FeeAmount,\n) {\n  const isSorted = currencyA && currencyB ? currencyA.wrapped.sortsBefore(currencyB.wrapped) : undefined;\n  const token0 = isSorted ? currencyA?.wrapped : currencyB?.wrapped;\n  const token1 = isSorted ? currencyB?.wrapped : currencyA?.wrapped;\n  const [poolState, pool] = usePool(currencyA, currencyB, feeAmount);\n\n  const tickCurrent = pool?.tickCurrent;\n\n  // Find nearest valid tick for pool in case tick is not initialized.\n  const activeTick = useMemo(() => getActiveTick(tickCurrent, feeAmount), [tickCurrent, feeAmount]);\n\n  const { loading: isLoading, result: ticks } = useAllTicks(token0, token1, feeAmount);\n\n  const sortedTicks = useMemo(() => {\n    if (!ticks) return [];\n\n    return ticks\n      .map((item) => {\n        const price0 = new BigNumber(String(item.price0))\n          .div(String(item.price0Decimal))\n          .toFormat({ groupSeparator: \"\" });\n        const price1 = new BigNumber(String(item.price1))\n          .div(String(item.price1Decimal))\n          .toFormat({ groupSeparator: \"\" });\n\n        return {\n          ...item,\n          price0,\n          price1,\n          tickIdx: Number(item.tickIndex),\n          _price0: item.price0,\n          _price1: item.price1,\n          liquidityNet: item.liquidityNet.toString(),\n        };\n      })\n      .sort((a, b) => {\n        if (a.tickIdx < b.tickIdx) return -1;\n        if (a.tickIdx > b.tickIdx) return 1;\n        return 0;\n      });\n  }, [ticks, isLoading]);\n\n  return useMemo(() => {\n    const isUninitialized = poolState === PoolState.NOT_EXISTS;\n\n    if (\n      !currencyA ||\n      !currencyB ||\n      !token0 ||\n      !token1 ||\n      activeTick === undefined ||\n      poolState !== PoolState.EXISTS ||\n      !sortedTicks ||\n      sortedTicks.length === 0 ||\n      isLoading\n    ) {\n      return {\n        isLoading: isLoading || poolState === PoolState.LOADING,\n        isUninitialized,\n        activeTick,\n        data: undefined,\n      };\n    }\n\n    // find where the active tick would be to partition the array\n    // if the active tick is initialized, the pivot will be an element\n    // if not, take the previous tick as pivot\n    const pivot = sortedTicks.findIndex(({ tickIdx }) => tickIdx > activeTick) - 1;\n\n    if (pivot < 0) {\n      // consider setting a local error\n      console.error(\"TickData pivot not found\");\n      return {\n        isLoading,\n        isUninitialized,\n        activeTick,\n        data: undefined,\n      };\n    }\n\n    const activeTickProcessed = {\n      liquidityActive: JSBI.BigInt(pool?.liquidity ?? 0),\n      tickIdx: activeTick,\n      liquidityNet:\n        Number(sortedTicks[pivot].tickIdx) === activeTick\n          ? JSBI.BigInt(sortedTicks[pivot].liquidityNet)\n          : JSBI.BigInt(0),\n      price0: tickToPrice(token0, token1, activeTick).toFixed(PRICE_FIXED_DIGITS),\n    };\n\n    const formatTicks = sortedTicks.map((tick) => ({\n      tickIdx: tick.tickIdx,\n      liquidityNet: tick.liquidityNet,\n      liquidityGross: tick.liquidityGross,\n    }));\n\n    const subsequentTicks = computeSurroundingTicks(token0, token1, activeTickProcessed, formatTicks, pivot, true);\n\n    const previousTicks = computeSurroundingTicks(token0, token1, activeTickProcessed, formatTicks, pivot, false);\n\n    const ticksProcessed = previousTicks.concat(activeTickProcessed).concat(subsequentTicks);\n\n    return {\n      isLoading,\n      isUninitialized,\n      activeTick,\n      data: ticksProcessed,\n      isError: ticks === undefined,\n    };\n  }, [currencyA, currencyB, activeTick, pool, sortedTicks, isLoading, poolState, ticks]);\n}\n","// @ts-nocheck\nimport { useMemo } from \"react\";\nimport { area, curveStepAfter, ScaleLinear } from \"d3\";\nimport styled from \"styled-components/macro\";\nimport inRange from \"lodash/inRange\";\n\nimport { ChartEntry } from \"./types\";\n\nconst COLOR_BLUE_2 = \"#0068FC\";\n\nconst Path = styled.path`\n  opacity: 0.5;\n  stroke: ${({ fill }) => fill ?? COLOR_BLUE_2};\n  fill: ${({ fill }) => fill ?? COLOR_BLUE_2};\n`;\n\nexport interface AreaProps {\n  series: ChartEntry[];\n  xScale: ScaleLinear<number, number>;\n  yScale: ScaleLinear<number, number>;\n  xValue: (d: ChartEntry) => number;\n  yValue: (d: ChartEntry) => number;\n  fill?: string | undefined;\n}\n\nexport const Area = ({ series, xScale, yScale, xValue, yValue, fill }: AreaProps) =>\n  useMemo(\n    () => (\n      <Path\n        fill={fill}\n        d={\n          area()\n            .curve(curveStepAfter)\n            .x((d: unknown) => xScale(xValue(d as ChartEntry)))\n            .y1((d: unknown) => yScale(yValue(d as ChartEntry)))\n            .y0(yScale(0))(\n            series.filter((d) => inRange(xScale(xValue(d)), 0, innerWidth)) as Iterable<[number, number]>,\n          ) ?? undefined\n        }\n      />\n    ),\n    [fill, series, xScale, xValue, yScale, yValue],\n  );\n","// @ts-nocheck\nimport { useMemo } from \"react\";\nimport { Axis as d3Axis, axisBottom, NumberValue, ScaleLinear, select } from \"d3\";\nimport styled from \"styled-components/macro\";\n\nconst StyledGroup = styled.g`\n  line {\n    display: none;\n  }\n  text {\n    color: ${({ theme }) => theme.text2};\n    transform: translateY(5px);\n  }\n`;\n\nconst Axis = ({ axisGenerator }: { axisGenerator: d3Axis<NumberValue> }) => {\n  const axisRef = (axis: SVGGElement) => {\n    if (axis) {\n      select(axis)\n        .call(axisGenerator)\n        .call((g) => g.select(\".domain\").remove());\n    }\n  };\n\n  return <g ref={axisRef} />;\n};\n\nexport const AxisBottom = ({\n  xScale,\n  innerHeight,\n  offset = 0,\n}: {\n  xScale: ScaleLinear<number, number>;\n  innerHeight: number;\n  offset?: number;\n}) =>\n  useMemo(\n    () => (\n      <StyledGroup transform={`translate(0, ${innerHeight + offset})`}>\n        <Axis axisGenerator={axisBottom(xScale).ticks(6)} />\n      </StyledGroup>\n    ),\n    [innerHeight, offset, xScale],\n  );\n","/*\n * Generates an SVG path for the east brush handle.\n * Apply `scale(-1, 1)` to generate west brush handle.\n *\n *    |```````\\\n *    |  | |  |\n *    |______/\n *    |\n *    |\n *    |\n *    |\n *    |\n *\n * https://medium.com/@dennismphil/one-side-rounded-rectangle-using-svg-fb31cf318d90\n */\nexport const brushHandlePath = (height: number) =>\n  [\n    // handle\n    `M 0 0`, // move to origin\n    `v ${height}`, // vertical line\n    \"m 1 0\", // move 1px to the right\n    `V 0`, // second vertical line\n    `M 0 1`, // move to origin\n\n    // head\n    \"h 12\", // horizontal line\n    \"q 2 0, 2 2\", // rounded corner\n    \"v 22\", // vertical line\n    \"q 0 2 -2 2\", // rounded corner\n    \"h -12\", // horizontal line\n    `z`, // close path\n  ].join(\" \");\n\nexport const brushHandleAccentPath = () =>\n  [\n    \"m 5 7\", // move to first accent\n    \"v 14\", // vertical line\n    \"M 0 0\", // move to origin\n    \"m 9 7\", // move to second accent\n    \"v 14\", // vertical line\n    \"z\",\n  ].join(\" \");\n\nexport const OffScreenHandle = ({\n  color,\n  size = 10,\n  margin = 10,\n}: {\n  color: string;\n  size?: number;\n  margin?: number;\n}) => (\n  <polygon\n    points={`0 0, ${size} ${size}, 0 ${size}`}\n    transform={` translate(${size + margin}, ${margin}) rotate(45) `}\n    fill={color}\n    stroke={color}\n    strokeWidth=\"4\"\n    strokeLinejoin=\"round\"\n  />\n);\n","// @ts-nocheck\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { brushX, select, ScaleLinear, BrushBehavior } from \"d3\";\nimport styled from \"styled-components/macro\";\nimport { usePrevious } from \"@w2e/hooks\";\nimport { useTheme } from \"@mui/material\";\nimport { brushHandleAccentPath, brushHandlePath, OffScreenHandle } from \"./svg\";\n\nconst Handle = styled.path<{ color: string; d: string }>`\n  cursor: ew-resize;\n  pointer-events: none;\n  stroke-width: 3;\n  stroke: ${({ color }) => color};\n  fill: ${({ color }) => color};\n`;\n\nconst HandleAccent = styled.path<{ d: string }>`\n  cursor: ew-resize;\n  pointer-events: none;\n  stroke-width: 1.5;\n  stroke: \"#ffffff\";\n  opacity: 0.6;\n`;\n\nconst LabelGroup = styled.g<{ visible: boolean; transform: string }>`\n  opacity: ${({ visible }) => (visible ? \"1\" : \"0\")};\n  transition: opacity 300ms;\n`;\n\nconst TooltipBackground = styled.rect`\n  fill: ${({ theme }) => theme.palette.background.level3};\n`;\n\nconst Tooltip = styled.text`\n  text-anchor: middle;\n  font-size: 13px;\n  fill: ${({ theme }) => theme.themeOption.textPrimary};\n`;\n\n// flips the handles draggers when close to the container edges\nconst FLIP_HANDLE_THRESHOLD_PX = 20;\n\n// margin to prevent tick snapping from putting the brush off screen\nconst BRUSH_EXTENT_MARGIN_PX = 2;\n\nconst compare = (a1: [number, number], a2: [number, number], xScale: ScaleLinear<number, number>): boolean =>\n  xScale(a1[0]) !== xScale(a2[0]) || xScale(a1[1]) !== xScale(a2[1]);\n\nexport interface BrushProps {\n  id: string;\n  xScale: ScaleLinear<number, number>;\n  interactive: boolean;\n  brushLabelValue: (d: \"w\" | \"e\", x: number) => string;\n  brushExtent: [number, number];\n  setBrushExtent: (extent: [number, number], mode: string | undefined) => void;\n  innerWidth: number;\n  innerHeight: number;\n  westHandleColor: string;\n  eastHandleColor: string;\n}\n\nexport const Brush = ({\n  id,\n  xScale,\n  interactive,\n  brushLabelValue,\n  brushExtent,\n  setBrushExtent,\n  innerWidth,\n  innerHeight,\n  westHandleColor,\n  eastHandleColor,\n}: BrushProps) => {\n  const brushRef = useRef<SVGGElement | null>(null);\n  const brushBehavior = useRef<BrushBehavior<SVGGElement> | null>(null);\n  const theme = useTheme();\n\n  // only used to drag the handles on brush for performance\n  const [localBrushExtent, setLocalBrushExtent] = useState<[number, number] | null>(brushExtent);\n  const [showLabels, setShowLabels] = useState(false);\n  const [hovering, setHovering] = useState(false);\n\n  const previousBrushExtent = usePrevious(brushExtent);\n\n  const brushed = useCallback(\n    (event) => {\n      const { type, selection, mode } = event;\n\n      if (!selection) {\n        setLocalBrushExtent(null);\n        return;\n      }\n\n      const scaled = selection.map(xScale.invert);\n\n      // avoid infinite render loop by checking for change\n      if (type === \"end\" && compare(brushExtent, scaled, xScale)) {\n        setBrushExtent(scaled, mode);\n      }\n\n      setLocalBrushExtent(scaled);\n    },\n    [xScale, brushExtent, setBrushExtent],\n  );\n\n  // keep local and external brush extent in sync\n  // i.e. snap to ticks on bruhs end\n  useEffect(() => {\n    setLocalBrushExtent(brushExtent);\n  }, [brushExtent]);\n\n  // initialize the brush\n  useEffect(() => {\n    if (!brushRef.current) return;\n\n    brushBehavior.current = brushX<SVGGElement>()\n      .extent([\n        [Math.max(0 + BRUSH_EXTENT_MARGIN_PX, xScale(0)), 0],\n        [innerWidth - BRUSH_EXTENT_MARGIN_PX, innerHeight],\n      ])\n      .handleSize(30)\n      .filter(() => interactive)\n      .on(\"brush end\", (event) => {\n        brushed(event);\n      });\n\n    brushBehavior.current(select(brushRef.current));\n\n    if (previousBrushExtent && compare(brushExtent, previousBrushExtent, xScale)) {\n      select(brushRef.current)\n        .transition()\n        .call(brushBehavior.current.move as any, brushExtent.map(xScale));\n    }\n\n    // brush linear gradient\n    select(brushRef.current)\n      .selectAll(\".selection\")\n      .attr(\"stroke\", \"none\")\n      .attr(\"fill-opacity\", \"0.1\")\n      .attr(\"fill\", `url(#${id}-gradient-selection)`);\n  }, [brushExtent, brushed, id, innerHeight, innerWidth, interactive, previousBrushExtent, xScale]);\n\n  // respond to xScale changes only\n  useEffect(() => {\n    if (!brushRef.current || !brushBehavior.current) return;\n\n    brushBehavior.current.move(select(brushRef.current) as any, brushExtent.map(xScale) as any);\n  }, [brushExtent, xScale]);\n\n  // show labels when local brush changes\n  useEffect(() => {\n    setShowLabels(true);\n    const timeout = setTimeout(() => setShowLabels(false), 1500);\n    return () => clearTimeout(timeout);\n  }, [localBrushExtent]);\n\n  // variables to help render the SVGs\n  const flipWestHandle = localBrushExtent && xScale(localBrushExtent[0]) > FLIP_HANDLE_THRESHOLD_PX;\n  const flipEastHandle = localBrushExtent && xScale(localBrushExtent[1]) > innerWidth - FLIP_HANDLE_THRESHOLD_PX;\n\n  const showWestArrow = localBrushExtent && (xScale(localBrushExtent[0]) < 0 || xScale(localBrushExtent[1]) < 0);\n  const showEastArrow =\n    localBrushExtent && (xScale(localBrushExtent[0]) > innerWidth || xScale(localBrushExtent[1]) > innerWidth);\n\n  const westHandleInView =\n    localBrushExtent && xScale(localBrushExtent[0]) >= 0 && xScale(localBrushExtent[0]) <= innerWidth;\n  const eastHandleInView =\n    localBrushExtent && xScale(localBrushExtent[1]) >= 0 && xScale(localBrushExtent[1]) <= innerWidth;\n\n  return useMemo(\n    () => (\n      <>\n        <defs>\n          <linearGradient id={`${id}-gradient-selection`} x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"100%\">\n            <stop stopColor={westHandleColor} />\n            <stop stopColor={eastHandleColor} offset=\"1\" />\n          </linearGradient>\n\n          {/* clips at exactly the svg area */}\n          <clipPath id={`${id}-brush-clip`}>\n            <rect x=\"0\" y=\"0\" width={innerWidth} height={innerHeight} />\n          </clipPath>\n        </defs>\n\n        {/* will host the d3 brush */}\n        <g\n          ref={brushRef}\n          clipPath={`url(#${id}-brush-clip)`}\n          onMouseEnter={() => setHovering(true)}\n          onMouseLeave={() => setHovering(false)}\n        />\n\n        {/* custom brush handles */}\n        {localBrushExtent && (\n          <>\n            {/* west handle */}\n            {westHandleInView ? (\n              <g\n                transform={`translate(${Math.max(0, xScale(localBrushExtent[0]))}, 0), scale(${flipWestHandle ? \"-1\" : \"1\"\n                  }, 1)`}\n              >\n                <g>\n                  <Handle color={westHandleColor} d={brushHandlePath(innerHeight)} />\n                  <HandleAccent d={brushHandleAccentPath()} theme={theme} />\n                </g>\n\n                <LabelGroup\n                  transform={`translate(50,0), scale(${flipWestHandle ? \"1\" : \"-1\"}, 1)`}\n                  visible={showLabels || hovering}\n                >\n                  <TooltipBackground y=\"0\" x=\"-30\" height=\"30\" width=\"60\" rx=\"8\" theme={theme} />\n                  <Tooltip transform=\"scale(-1, 1)\" y=\"15\" dominantBaseline=\"middle\" theme={theme}>\n                    {brushLabelValue(\"w\", localBrushExtent[0])}\n                  </Tooltip>\n                </LabelGroup>\n              </g>\n            ) : null}\n\n            {/* east handle */}\n            {eastHandleInView ? (\n              <g transform={`translate(${xScale(localBrushExtent[1])}, 0), scale(${flipEastHandle ? \"-1\" : \"1\"}, 1)`}>\n                <g>\n                  <Handle color={eastHandleColor} d={brushHandlePath(innerHeight)} />\n                  <HandleAccent d={brushHandleAccentPath()} theme={theme} />\n                </g>\n\n                <LabelGroup\n                  transform={`translate(50,0), scale(${flipEastHandle ? \"-1\" : \"1\"}, 1)`}\n                  visible={showLabels || hovering}\n                >\n                  <TooltipBackground y=\"0\" x=\"-30\" height=\"30\" width=\"60\" rx=\"8\" theme={theme} />\n                  <Tooltip y=\"15\" dominantBaseline=\"middle\" theme={theme}>\n                    {brushLabelValue(\"e\", localBrushExtent[1])}\n                  </Tooltip>\n                </LabelGroup>\n              </g>\n            ) : null}\n\n            {showWestArrow && <OffScreenHandle color={westHandleColor} />}\n\n            {showEastArrow && (\n              <g transform={`translate(${innerWidth}, 0) scale(-1, 1)`}>\n                <OffScreenHandle color={eastHandleColor} />\n              </g>\n            )}\n          </>\n        )}\n      </>\n    ),\n    [\n      brushLabelValue,\n      eastHandleColor,\n      eastHandleInView,\n      flipEastHandle,\n      flipWestHandle,\n      hovering,\n      id,\n      innerHeight,\n      innerWidth,\n      localBrushExtent,\n      showEastArrow,\n      showLabels,\n      showWestArrow,\n      westHandleColor,\n      westHandleInView,\n      xScale,\n    ],\n  );\n};\n","import { useEffect, useRef } from \"react\";\n\n// modified from https://usehooks.com/usePrevious/\nexport function usePrevious<T>(value: T) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef<T>();\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import { useMemo } from \"react\";\nimport { Box } from \"@mui/material\";\nimport { ScaleLinear } from \"d3\";\nimport { Theme } from \"@mui/material/styles\";\nimport { useTheme } from \"@mui/styles\";\n\nexport interface LineProps {\n  value: number;\n  xScale: ScaleLinear<number, number>;\n  innerHeight: number;\n}\n\nexport const Line = ({ value, xScale, innerHeight }: LineProps) => {\n  const theme = useTheme() as Theme;\n\n  return useMemo(\n    () => (\n      <Box\n        sx={{\n          opacity: 0.5,\n          strokeWidth: 2,\n          stroke: theme.colors.primaryMain,\n          fill: \"none\",\n        }}\n        component=\"line\"\n        x1={xScale(value)}\n        y1=\"0\"\n        x2={xScale(value)}\n        y2={innerHeight}\n      />\n    ),\n    [value, xScale, innerHeight],\n  );\n};\n","import { SvgIcon } from \"@mui/material\";\n\nexport default ({ fillColor = \"#BDC8F0\", ...props }) => {\n  return (\n    <SvgIcon viewBox=\"0 0 17 17\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M8.50033 12.6332C10.7831 12.6332 12.6337 10.7826 12.6337 8.49984C12.6337 6.21706 10.7831 4.3665 8.50033 4.3665C6.21755 4.3665 4.36699 6.21706 4.36699 8.49984C4.36699 10.7826 6.21755 12.6332 8.50033 12.6332ZM8.50033 13.8332C11.4458 13.8332 13.8337 11.4454 13.8337 8.49984C13.8337 5.55432 11.4458 3.1665 8.50033 3.1665C5.55481 3.1665 3.16699 5.55432 3.16699 8.49984C3.16699 11.4454 5.55481 13.8332 8.50033 13.8332Z\"\n        fill={fillColor}\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M9.03295 5.8335H7.83295V7.83349H5.83301V9.03349H7.83295V11.1668H9.03295V9.03349H11.1663V7.83349H9.03295V5.8335Z\"\n        fill={fillColor}\n      />\n      <rect\n        x=\"11.167\"\n        y=\"12.1094\"\n        width=\"1.33333\"\n        height=\"3.7233\"\n        transform=\"rotate(-45 11.167 12.1094)\"\n        fill={fillColor}\n      />\n    </SvgIcon>\n  );\n};\n","import { SvgIcon } from \"@mui/material\";\n\nexport default ({ fillColor = \"#BDC8F0\", ...props }) => {\n  return (\n    <SvgIcon viewBox=\"0 0 17 17\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M8.50033 12.6332C10.7831 12.6332 12.6337 10.7826 12.6337 8.49984C12.6337 6.21706 10.7831 4.3665 8.50033 4.3665C6.21755 4.3665 4.36699 6.21706 4.36699 8.49984C4.36699 10.7826 6.21755 12.6332 8.50033 12.6332ZM8.50033 13.8332C11.4458 13.8332 13.8337 11.4454 13.8337 8.49984C13.8337 5.55432 11.4458 3.1665 8.50033 3.1665C5.55481 3.1665 3.16699 5.55432 3.16699 8.49984C3.16699 11.4454 5.55481 13.8332 8.50033 13.8332Z\"\n        fill={fillColor}\n      />\n      <path d=\"M5.83301 7.8999H11.1663V9.0999H5.83301V7.8999Z\" fill={fillColor} />\n      <rect\n        x=\"11.167\"\n        y=\"12.1094\"\n        width=\"1.33333\"\n        height=\"3.7233\"\n        transform=\"rotate(-45 11.167 12.1094)\"\n        fill={fillColor}\n      />\n    </SvgIcon>\n  );\n};\n","import { useEffect, useMemo, useRef } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { select, zoom, zoomIdentity, ZoomTransform, ScaleLinear, ZoomBehavior } from \"d3\";\nimport { Grid, Box, Chip } from \"@mui/material\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport { Replay as ReplayIcon } from \"@mui/icons-material\";\nimport ZoomInIcon from \"assets/images/swap/zoomIn\";\nimport ZoomOutIcon from \"assets/images/swap/zoomOut\";\nimport { isDarkTheme } from \"utils\";\nimport { Theme } from \"@mui/material/styles\";\nimport { ZoomLevels } from \"./types\";\n\nexport const ZoomOverlay = styled.rect`\n  fill: transparent;\n  cursor: grab;\n\n  &:active {\n    cursor: grabbing;\n  }\n`;\n\nconst useStyle = makeStyles((theme: Theme) => {\n  return {\n    chartIcon: {\n      width: \"28px\",\n      height: \"28px\",\n      backgroundColor: theme.palette.background.level3,\n      borderRadius: \"50%\",\n      cursor: \"pointer\",\n      marginRight: \"12px\",\n      \"&:last-child\": {\n        marginRight: 0,\n      },\n      \"& .MuiSvgIcon-root\": {\n        fontSize: \"1.2rem\",\n        marginRight: \"0\",\n        marginLeft: \"0\",\n        color: isDarkTheme(theme) ? \"inherit\" : theme.colors.darkLevel2,\n      },\n      \"& .MuiChip-label\": {\n        display: \"none\",\n      },\n    },\n  };\n});\n\nexport interface ZoomProps {\n  svg: SVGElement | null;\n  xScale: ScaleLinear<number, number>;\n  setZoom: (transform: ZoomTransform) => void;\n  width: number;\n  height: number;\n  resetBrush: () => void;\n  showResetButton: boolean;\n  zoomLevels: ZoomLevels;\n}\n\nexport default function Zoom({\n  svg,\n  xScale,\n  setZoom,\n  width,\n  height,\n  resetBrush,\n  zoomLevels,\n}: {\n  svg: SVGElement | null;\n  xScale: ScaleLinear<number, number>;\n  setZoom: (transform: ZoomTransform) => void;\n  width: number;\n  height: number;\n  resetBrush: () => void;\n  showResetButton: boolean;\n  zoomLevels: ZoomLevels;\n}) {\n  const classes = useStyle();\n  const zoomBehavior = useRef<ZoomBehavior<Element, unknown>>();\n  const theme = useTheme() as Theme;\n\n  const [zoomIn, zoomOut, zoomInitial, zoomReset] = useMemo(\n    () => [\n      () =>\n        svg &&\n        zoomBehavior.current &&\n        select(svg as Element)\n          .transition()\n          .call(zoomBehavior.current.scaleBy, 2),\n      () =>\n        svg &&\n        zoomBehavior.current &&\n        select(svg as Element)\n          .transition()\n          .call(zoomBehavior.current.scaleBy, 0.5),\n      () =>\n        svg &&\n        zoomBehavior.current &&\n        select(svg as Element)\n          .transition()\n          .call(zoomBehavior.current.scaleTo, 0.5),\n      () =>\n        svg &&\n        zoomBehavior.current &&\n        select(svg as Element)\n          .call(zoomBehavior.current.transform, zoomIdentity.translate(0, 0).scale(1))\n          .transition()\n          .call(zoomBehavior.current.scaleTo, 0.5),\n    ],\n    [svg],\n  );\n\n  useEffect(() => {\n    if (!svg) return;\n\n    zoomBehavior.current = zoom()\n      .scaleExtent([zoomLevels.min, zoomLevels.max])\n      .extent([\n        [0, 0],\n        [width, height],\n      ])\n      .on(\"zoom\", ({ transform }) => setZoom(transform));\n\n    select(svg as Element).call(zoomBehavior.current);\n  }, [height, width, setZoom, svg, xScale, zoomBehavior, zoomLevels, zoomLevels.max, zoomLevels.min]);\n\n  useEffect(() => {\n    // reset zoom to initial on zoomLevel change\n    zoomInitial();\n  }, [zoomInitial, zoomLevels]);\n\n  return (\n    <Box\n      sx={{\n        position: \"absolute\",\n        top: \"0\",\n        right: \"0\",\n      }}\n    >\n      <Grid container>\n        <Grid item xs mr=\"5px\">\n          <Chip\n            className={classes.chartIcon}\n            icon={<ReplayIcon />}\n            onClick={() => {\n              resetBrush();\n              zoomReset();\n            }}\n          />\n        </Grid>\n        <Grid item xs mr=\"5px\">\n          <Chip\n            className={classes.chartIcon}\n            icon={<ZoomInIcon fillColor={isDarkTheme(theme) ? undefined : theme.colors.darkLevel2} />}\n            onClick={zoomIn}\n          />\n        </Grid>\n        <Grid item xs>\n          <Chip\n            className={classes.chartIcon}\n            icon={<ZoomOutIcon fillColor={isDarkTheme(theme) ? undefined : theme.colors.darkLevel2} />}\n            onClick={zoomOut}\n          />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n","// @ts-nocheck\nimport { max, scaleLinear, ZoomTransform } from \"d3\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Bound } from \"constants/swap\";\nimport { Area } from \"./Area\";\nimport { AxisBottom } from \"./AxisBottom\";\nimport { Brush } from \"./Brush\";\nimport { Line } from \"./Line\";\nimport Zoom, { ZoomOverlay } from \"./Zoom\";\n\nimport { ChartEntry, LiquidityChartRangeInputProps } from \"./types\";\n\nexport const xAccessor = (d: ChartEntry) => d.price0;\nexport const yAccessor = (d: ChartEntry) => d.activeLiquidity;\n\nexport function Chart({\n  id = \"liquidityChartRangeInput\",\n  data: { series, current },\n  ticksAtLimit,\n  styles,\n  dimensions: { width, height },\n  margins,\n  interactive = true,\n  brushDomain,\n  brushLabels,\n  onBrushDomainChange,\n  zoomLevels,\n}: LiquidityChartRangeInputProps) {\n  const zoomRef = useRef<SVGRectElement | null>(null);\n\n  const [zoom, setZoom] = useState<ZoomTransform | null>(null);\n\n  const [innerHeight, innerWidth] = useMemo(\n    () => [height - margins.top - margins.bottom, width - margins.left - margins.right],\n    [width, height, margins],\n  );\n\n  const { xScale, yScale } = useMemo(() => {\n    const scales = {\n      xScale: scaleLinear()\n        .domain([current * zoomLevels.initialMin, current * zoomLevels.initialMax] as number[])\n        .range([0, innerWidth]),\n      yScale: scaleLinear()\n        .domain([0, max(series, yAccessor)] as number[])\n        .range([innerHeight, 0]),\n    };\n\n    if (zoom) {\n      const newXscale = zoom.rescaleX(scales.xScale);\n      scales.xScale.domain(newXscale.domain());\n    }\n\n    return scales;\n  }, [current, zoomLevels.initialMin, zoomLevels.initialMax, innerWidth, series, innerHeight, zoom]);\n\n  useEffect(() => {\n    // reset zoom as necessary\n    setZoom(null);\n  }, [zoomLevels]);\n\n  useEffect(() => {\n    if (!brushDomain) {\n      onBrushDomainChange(xScale.domain() as [number, number], undefined);\n    }\n  }, [brushDomain, onBrushDomainChange, xScale]);\n\n  return (\n    <>\n      <Zoom\n        svg={zoomRef.current}\n        xScale={xScale}\n        setZoom={setZoom}\n        width={innerWidth}\n        height={\n          // allow zooming inside the x-axis\n          height\n        }\n        resetBrush={() => {\n          onBrushDomainChange(\n            [current * zoomLevels.initialMin, current * zoomLevels.initialMax] as [number, number],\n            \"reset\",\n          );\n        }}\n        showResetButton={Boolean(ticksAtLimit[Bound.LOWER] || ticksAtLimit[Bound.UPPER])}\n        zoomLevels={zoomLevels}\n      />\n      <svg width=\"100%\" height=\"100%\" viewBox={`0 0 ${width} ${height}`} style={{ overflow: \"visible\" }}>\n        <defs>\n          <clipPath id={`${id}-chart-clip`}>\n            <rect x=\"0\" y=\"0\" width={innerWidth} height={height} />\n          </clipPath>\n\n          {brushDomain && (\n            // mask to highlight selected area\n            <mask id={`${id}-chart-area-mask`}>\n              <rect\n                fill=\"white\"\n                x={xScale(brushDomain[0])}\n                y=\"0\"\n                width={xScale(brushDomain[1]) - xScale(brushDomain[0])}\n                height={innerHeight}\n              />\n            </mask>\n          )}\n        </defs>\n\n        <g transform={`translate(${margins.left},${margins.top})`}>\n          <g clipPath={`url(#${id}-chart-clip)`}>\n            <Area series={series} xScale={xScale} yScale={yScale} xValue={xAccessor} yValue={yAccessor} />\n\n            {brushDomain && (\n              // duplicate area chart with mask for selected area\n              <g mask={`url(#${id}-chart-area-mask)`}>\n                <Area\n                  series={series}\n                  xScale={xScale}\n                  yScale={yScale}\n                  xValue={xAccessor}\n                  yValue={yAccessor}\n                  fill={styles.area.selection}\n                />\n              </g>\n            )}\n\n            <Line value={current} xScale={xScale} innerHeight={innerHeight} />\n\n            <AxisBottom xScale={xScale} innerHeight={innerHeight} />\n          </g>\n\n          <ZoomOverlay width={innerWidth} height={height} ref={zoomRef} />\n\n          <Brush\n            id={id}\n            xScale={xScale}\n            interactive={interactive}\n            brushLabelValue={brushLabels}\n            brushExtent={brushDomain ?? (xScale.domain() as [number, number])}\n            innerWidth={innerWidth}\n            innerHeight={innerHeight}\n            setBrushExtent={onBrushDomainChange}\n            westHandleColor={styles.brush.handle.west}\n            eastHandleColor={styles.brush.handle.east}\n          />\n        </g>\n      </svg>\n    </>\n  );\n}\n","import { useCallback, useMemo, ReactNode } from \"react\";\nimport { saturate } from \"polished\";\nimport { BarChart2, Inbox, CloudOff, Loader } from \"react-feather\";\nimport { batch } from \"react-redux\";\nimport { useDensityChartData } from \"hooks/swap/useDensityChartData\";\nimport { format } from \"d3\";\nimport { Bound, FeeAmount } from \"constants/swap\";\nimport { Price, Token } from \"@w2e/swap-sdk\";\nimport { Box, Grid, Typography, useTheme } from \"@mui/material\";\nimport { t } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\nimport { ZoomLevels } from \"./types\";\nimport { Chart } from \"./Chart\";\n\nconst ZOOM_LEVELS: Record<FeeAmount, ZoomLevels> = {\n  [FeeAmount.LOW]: {\n    initialMin: 0.999,\n    initialMax: 1.001,\n    min: 0.00001,\n    max: 1.5,\n  },\n  [FeeAmount.MEDIUM]: {\n    initialMin: 0.5,\n    initialMax: 2,\n    min: 0.00001,\n    max: 20,\n  },\n  [FeeAmount.HIGH]: {\n    initialMin: 0.5,\n    initialMax: 2,\n    min: 0.00001,\n    max: 20,\n  },\n};\n\nfunction InfoBox({ message, icon }: { message?: ReactNode; icon: ReactNode }) {\n  return (\n    <Grid\n      container\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      sx={{ height: \"100%\", minHeight: \"200px\" }}\n      flexDirection=\"column\"\n    >\n      {icon}\n      {message && (\n        <Typography variant=\"h3\" color=\"textPrimary\" align=\"center\" sx={{ marginTop: \"20px\" }}>\n          {message}\n        </Typography>\n      )}\n    </Grid>\n  );\n}\n\nexport interface LiquidityChartRangeInputProps {\n  currencyA: Token | undefined;\n  currencyB: Token | undefined;\n  feeAmount?: FeeAmount;\n  ticksAtLimit: { [bound in Bound]?: boolean | undefined };\n  price: number | undefined | string;\n  priceLower?: Price<Token, Token>;\n  priceUpper?: Price<Token, Token>;\n  onLeftRangeInput: (typedValue: string) => void;\n  onRightRangeInput: (typedValue: string) => void;\n  interactive: boolean;\n}\n\nexport default function LiquidityChartRangeInput({\n  currencyA,\n  currencyB,\n  feeAmount,\n  ticksAtLimit,\n  price,\n  priceLower,\n  priceUpper,\n  onLeftRangeInput,\n  onRightRangeInput,\n  interactive,\n}: LiquidityChartRangeInputProps) {\n  const theme = useTheme() as Theme;\n\n  const tokenAColor = \"#788686\";\n  const tokenBColor = \"#bb8d00\";\n  const COLOR_BLUE = \"#0068FC\";\n\n  const isSorted = currencyA && currencyB && currencyA?.wrapped.sortsBefore(currencyB?.wrapped);\n\n  const { isLoading, isUninitialized, isError, formattedData } = useDensityChartData({\n    currencyA,\n    currencyB,\n    feeAmount: feeAmount ?? FeeAmount.MEDIUM,\n  });\n\n  const onBrushDomainChangeEnded = useCallback(\n    (domain, mode) => {\n      let leftRangeValue = Number(domain[0]);\n      const rightRangeValue = Number(domain[1]);\n      if (leftRangeValue <= 0) {\n        leftRangeValue = 1 / 10 ** 6;\n      }\n      batch(() => {\n        // simulate user input for auto-formatting and other validations\n        if (\n          (!ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER] || mode === \"handle\" || mode === \"reset\") &&\n          leftRangeValue > 0\n        ) {\n          onLeftRangeInput(leftRangeValue.toFixed(6));\n        }\n        if ((!ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER] || mode === \"reset\") && rightRangeValue > 0) {\n          // todo: remove this check. Upper bound for large numbers\n          // sometimes fails to parse to tick.\n          if (rightRangeValue < 1e35) {\n            onRightRangeInput(rightRangeValue.toFixed(6));\n          }\n        }\n      });\n    },\n    [isSorted, onLeftRangeInput, onRightRangeInput, ticksAtLimit],\n  );\n\n  const _interactive = interactive && Boolean(formattedData?.length);\n\n  const brushDomain: [number, number] | undefined = useMemo(() => {\n    const leftPrice = isSorted ? priceLower : priceUpper?.invert();\n    const rightPrice = isSorted ? priceUpper : priceLower?.invert();\n\n    return leftPrice && rightPrice\n      ? [parseFloat(leftPrice?.toSignificant(6)), parseFloat(rightPrice?.toSignificant(6))]\n      : undefined;\n  }, [isSorted, priceLower, priceUpper]);\n\n  const brushLabelValue = useCallback(\n    (d: \"w\" | \"e\", x: number) => {\n      if (!price) return \"\";\n\n      if (d === \"w\" && ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER]) return \"0\";\n      if (d === \"e\" && ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER]) return \"∞\";\n\n      const percent =\n        (x < Number(price) ? -1 : 1) *\n        ((Math.max(x, Number(price)) - Math.min(x, Number(price))) / Number(price)) *\n        100;\n\n      return price ? `${format(Math.abs(percent) > 1 ? \".2~s\" : \".2~f\")(percent)}%` : \"\";\n    },\n    [isSorted, price, ticksAtLimit],\n  );\n\n  return (\n    <Box style={{ minHeight: \"200px\" }}>\n      {isUninitialized ? (\n        <InfoBox\n          message={t`Your position will appear here.`}\n          icon={<Inbox size={56} stroke={theme.palette.background.level3} />}\n        />\n      ) : isLoading ? (\n        <InfoBox icon={<Loader size=\"40px\" stroke={theme.palette.background.level3} />} />\n      ) : isError ? (\n        <InfoBox\n          message={t`Liquidity data not available.`}\n          icon={<CloudOff size={56} stroke={theme.palette.background.level3} />}\n        />\n      ) : !formattedData || formattedData.length === 0 || !price ? (\n        <InfoBox\n          message={t`There is no liquidity data.`}\n          icon={<BarChart2 size={56} stroke={theme.palette.background.level3} />}\n        />\n      ) : (\n        <Grid container alignItems=\"center\" justifyContent=\"center\">\n          <Chart\n            data={{ series: formattedData, current: Number(price) }}\n            dimensions={{ width: 400, height: 200 }}\n            margins={{ top: 10, right: 2, bottom: 20, left: 0 }}\n            styles={{\n              area: {\n                selection: COLOR_BLUE,\n              },\n              brush: {\n                handle: {\n                  west: saturate(0.1, tokenAColor),\n                  east: saturate(0.1, tokenBColor) ?? COLOR_BLUE,\n                },\n              },\n            }}\n            interactive={_interactive}\n            brushLabels={brushLabelValue}\n            brushDomain={brushDomain}\n            onBrushDomainChange={onBrushDomainChangeEnded}\n            zoomLevels={ZOOM_LEVELS[feeAmount ?? FeeAmount.MEDIUM]}\n            ticksAtLimit={ticksAtLimit}\n          />\n        </Grid>\n      )}\n    </Box>\n  );\n}\n","import { useMemo } from \"react\";\nimport { usePoolActiveLiquidity } from \"hooks/swap/usePoolTickData\";\nimport { Token, FeeAmount } from \"@w2e/swap-sdk\";\nimport BigNumber from \"bignumber.js\";\n\nexport interface UseDensityChartDataArgs {\n  currencyA: Token | undefined;\n  currencyB: Token | undefined;\n  feeAmount: FeeAmount;\n}\n\nexport function useDensityChartData({ currencyA, currencyB, feeAmount }: UseDensityChartDataArgs) {\n  const { isLoading, isUninitialized, isError, data } = usePoolActiveLiquidity(currencyA, currencyB, feeAmount);\n\n  const formatData = useMemo(() => {\n    if (!data?.length) return undefined;\n\n    const isSorted = currencyA && currencyB ? currencyA.wrapped.sortsBefore(currencyB.wrapped) : undefined;\n\n    const newData: { activeLiquidity: number; price0: number }[] = [];\n\n    for (let i = 0; i < data.length; i++) {\n      const t = data[i];\n\n      const chartEntry = {\n        activeLiquidity: parseFloat(t.liquidityActive.toString()),\n        // convert price0 to the token0 price when is not sorted\n        price0: isSorted ? parseFloat(t.price0) : parseFloat(new BigNumber(1).div(t.price0).toString()),\n      };\n\n      if (chartEntry.activeLiquidity > 0) {\n        // when is not sorted, should converse the data array, but there use unshift to achieve it\n        if (isSorted) {\n          newData.push(chartEntry);\n        } else {\n          newData.unshift(chartEntry);\n        }\n      }\n    }\n\n    return newData;\n  }, [data, currencyA, currencyB]);\n\n  return useMemo(() => {\n    return {\n      isLoading: isLoading || !data,\n      isUninitialized,\n      isError,\n      formattedData: !isLoading && !isUninitialized ? formatData : undefined,\n    };\n  }, [isLoading, isUninitialized, isError, formatData]);\n}\n","import React, { memo, useState, useEffect, useCallback, useMemo } from \"react\";\nimport { Box, Grid, Typography, TextField, Chip, Button, ButtonBase } from \"@mui/material\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport { Add as AddIcon, Remove as RemoveIcon } from \"@mui/icons-material\";\nimport { Token, Price } from \"@w2e/swap-sdk\";\nimport WarningIcon from \"assets/images/swap/warning\";\nimport { Bound, FeeAmount } from \"constants/swap\";\nimport { MAX_SWAP_INPUT_LENGTH } from \"constants/index\";\nimport TokenToggle from \"components/TokenToggle\";\nimport { isDarkTheme, toSignificantFormatted } from \"utils\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\nimport { NumberTextField } from \"components/index\";\nimport PriceRangeChart from \"./PriceRangeChart\";\n\nconst usePriceRangeInputStyle = makeStyles((theme: Theme) => {\n  return {\n    inputContainer: {\n      border: theme.palette.border.gray200,\n      borderRadius: \"12px\",\n    },\n    input: {\n      \"& input\": {\n        fontSize: \"20px\",\n        fontWeight: 700,\n        textAlign: \"center\",\n        height: \"28px\",\n        padding: \"0 0\",\n        [theme.breakpoints.down(\"sm\")]: {\n          fontSize: \"12px\",\n        },\n      },\n      \"& input::placeholder\": {\n        fontSize: \"20px\",\n        fontWeight: 700,\n        [theme.breakpoints.down(\"sm\")]: {\n          fontSize: \"12px\",\n        },\n      },\n    },\n    chip: {\n      width: \"28px\",\n      height: \"28px\",\n      borderRadius: \"8px\",\n      \"& .MuiSvgIcon-root\": {\n        marginLeft: \"17px\",\n        color: isDarkTheme(theme) ? \"#e0e0e0\" : theme.colors.darkLevel1,\n      },\n    },\n  };\n});\n\nexport interface PriceRangeSelectorProps {\n  label: React.ReactChild;\n  value: string;\n  increment: () => string;\n  decrement: () => string;\n  onRangeInput: (value: string) => void;\n  isUpperFullRange?: boolean | undefined;\n  incrementDisabled?: boolean;\n  decrementDisabled?: boolean;\n  baseCurrency: Token | undefined;\n  quoteCurrency: Token | undefined;\n}\n\nexport function PriceRangeSelector({\n  label = t`Min Price`,\n  value,\n  increment,\n  decrement,\n  onRangeInput,\n  isUpperFullRange,\n  incrementDisabled,\n  decrementDisabled,\n  baseCurrency,\n  quoteCurrency,\n}: PriceRangeSelectorProps) {\n  const classes = usePriceRangeInputStyle();\n\n  const [localValue, setLocalValue] = useState(\"\");\n  const [useLocalValue, setUseLocalValue] = useState(false);\n\n  const handleOnFocus = useCallback(() => {\n    setUseLocalValue(true);\n  }, []);\n\n  const handleOnBlur = useCallback(() => {\n    setUseLocalValue(false);\n    onRangeInput(localValue); // trigger update on parent value\n  }, [localValue, onRangeInput]);\n\n  useEffect(() => {\n    if (localValue !== value && !useLocalValue) {\n      setTimeout(() => {\n        setLocalValue(value); // reset local value to match parent\n      }, 0);\n    }\n  }, [localValue, useLocalValue, value]);\n\n  const handleIncreasePrice = useCallback(() => {\n    setUseLocalValue(false);\n    onRangeInput(increment());\n  }, [increment, onRangeInput]);\n\n  const handleDecreasePrice = useCallback(() => {\n    setUseLocalValue(false);\n    onRangeInput(decrement());\n  }, [decrement, onRangeInput]);\n\n  return (\n    <Grid className={classes.inputContainer} container alignItems=\"center\" justifyContent=\"center\" sx={{ p: 2 }}>\n      <Typography align=\"center\" fontSize={12}>\n        {label}\n      </Typography>\n      <Grid container mt=\"12px\" mb=\"12px\">\n        <Chip\n          className={classes.chip}\n          icon={<RemoveIcon />}\n          onClick={handleDecreasePrice}\n          disabled={decrementDisabled}\n        />\n        <Grid item xs ml=\"5px\" mr=\"5px\">\n          {isUpperFullRange ? (\n            <TextField\n              fullWidth\n              value={localValue}\n              className={classes.input}\n              placeholder=\"0.0\"\n              variant=\"standard\"\n              InputProps={{\n                disableUnderline: true,\n              }}\n              onChange={(e) => setLocalValue(e.target.value)}\n              onBlur={handleOnBlur}\n              onFocus={handleOnFocus}\n            />\n          ) : (\n            <NumberTextField\n              fullWidth\n              value={localValue}\n              className={classes.input}\n              placeholder=\"0.0\"\n              variant=\"standard\"\n              numericProps={{\n                thousandSeparator: true,\n                decimalScale: 8,\n                allowNegative: false,\n                maxLength: MAX_SWAP_INPUT_LENGTH,\n              }}\n              onChange={(e) => setLocalValue(e.target.value)}\n              onBlur={handleOnBlur}\n              onFocus={handleOnFocus}\n            />\n          )}\n        </Grid>\n        <Chip className={classes.chip} icon={<AddIcon />} onClick={handleIncreasePrice} disabled={incrementDisabled} />\n      </Grid>\n      <Typography align=\"center\">\n        {baseCurrency && quoteCurrency ? `${quoteCurrency?.symbol} per ${baseCurrency?.symbol}` : \"\"}\n      </Typography>\n    </Grid>\n  );\n}\n\nconst useSetPriceStyle = makeStyles((theme: Theme) => {\n  return {\n    startPriceDescription: {\n      padding: \"16px\",\n      borderRadius: \"12px\",\n      border: `1px solid ${theme.colors.warningDark}`,\n      backgroundColor: theme.palette.background.level3,\n      \". description\": {\n        color: theme.colors.warningDark,\n        fontSize: \"12px\",\n      },\n    },\n    startPrice: {\n      border: isDarkTheme(theme) ? \"1px solid #29314F\" : `1px solid ${theme.colors.lightGray200BorderColor}`,\n      background: isDarkTheme(theme) ? \"transparent\" : \"#fff\",\n      borderRadius: \"12px\",\n      height: \"51px\",\n      padding: \"0 14px\",\n    },\n    priceRangeInput: {\n      position: \"relative\",\n    },\n    fullRangeMask: {\n      position: \"absolute\",\n      top: \"0\",\n      left: \"0\",\n      width: \"100%\",\n      height: \"100%\",\n      background: \"rgba(255, 193, 7, 0.16)\",\n      border: `1px solid ${theme.colors.warningDark}`,\n      borderRadius: \"12px\",\n    },\n    fullRangeButton: {\n      borderRadius: \"12px\",\n      backgroundColor: isDarkTheme(theme) ? theme.colors.darkLevel1 : \"#ffffff\",\n      border: theme.palette.border.gray200,\n      color: isDarkTheme(theme) ? theme.palette.grey[700] : theme.colors.lightTextPrimary,\n      textTransform: \"none\",\n      \"&:hover\": {\n        backgroundColor: theme.palette.mode === \"dark\" ? theme.palette.dark.light + 20 : theme.palette.primary.light,\n        borderColor: theme.palette.mode === \"dark\" ? \"#29314F\" : theme.palette.grey[100],\n      },\n    },\n    warningText: {\n      marginTop: \"13px\",\n      color: theme.colors.warningDark,\n    },\n    warningTitle: {\n      color: theme.colors.warningDark,\n      fontWeight: 700,\n      fontSize: \"16px\",\n    },\n    iUnderstand: {\n      padding: \"0 9px\",\n      backgroundColor: theme.colors.warningDark,\n      color: theme.colors.darkLevel1,\n      borderRadius: \"8px\",\n      height: \"32px\",\n      marginTop: \"16px\",\n    },\n  };\n});\n\nexport interface PriceRangeProps {\n  onStartPriceInput: (value: string) => void;\n  onLeftRangeInput: (value: string) => void;\n  onRightRangeInput: (value: string) => void;\n  startPrice: string | number | undefined;\n  noLiquidity?: boolean;\n  priceLower: Price<Token, Token> | undefined;\n  priceUpper: Price<Token, Token> | undefined;\n  baseCurrency: Token | undefined;\n  quoteCurrency: Token | undefined;\n  feeAmount: FeeAmount | undefined;\n  ticksAtLimit: {\n    [Bound.LOWER]: boolean | undefined;\n    [Bound.UPPER]: boolean | undefined;\n  };\n  price: string | number | undefined;\n  getDecrementLower: () => string;\n  getIncrementLower: () => string;\n  getDecrementUpper: () => string;\n  getIncrementUpper: () => string;\n  getSetFullRange: () => void;\n  handleTokenToggle: () => void;\n  poolLoading?: boolean;\n}\n\nconst PriceRange = memo(\n  ({\n    onStartPriceInput,\n    onLeftRangeInput,\n    onRightRangeInput,\n    startPrice,\n    noLiquidity,\n    priceLower,\n    priceUpper,\n    baseCurrency,\n    quoteCurrency,\n    feeAmount,\n    ticksAtLimit,\n    price,\n    getDecrementLower,\n    getIncrementLower,\n    getDecrementUpper,\n    getIncrementUpper,\n    getSetFullRange,\n    handleTokenToggle,\n    poolLoading,\n  }: PriceRangeProps) => {\n    const [isFullRange, setFullRange] = useState(false);\n    const classes = useSetPriceStyle();\n    const theme = useTheme() as Theme;\n\n    const tokenA = (baseCurrency ?? undefined)?.wrapped;\n    const tokenB = (quoteCurrency ?? undefined)?.wrapped;\n    const isSorted = tokenA && tokenB && tokenA.sortsBefore(tokenB);\n\n    const leftPrice = isSorted ? priceLower : priceUpper?.invert();\n    const rightPrice = isSorted ? priceUpper : priceLower?.invert();\n\n    const isRangePriceDisabled = useMemo(\n      () => (noLiquidity && !startPrice) || poolLoading,\n      [noLiquidity, startPrice, poolLoading],\n    );\n\n    const handleFullRangeClick = () => {\n      setFullRange(true);\n    };\n\n    const handleIUnderstand = () => {\n      setFullRange(false);\n      getSetFullRange();\n    };\n\n    return (\n      <>\n        {noLiquidity && (\n          <>\n            <Typography variant=\"h4\" color=\"textPrimary\">\n              <Trans>Set Starting Price</Trans>\n            </Typography>\n            <Box mt={2}>\n              <Box className={classes.startPriceDescription}>\n                <Typography color={theme.colors.warningDark} fontSize={12}>\n                  <Trans>\n                    Before you can add liquidity, this pool needs to be initialized. Creating a trading pair incurs 1\n                    ICP fee for setting up the Swap pool canister. To begin, select an initial price for the pool,\n                    determine your liquidity price range, and decide on the deposit amount. Please be aware that if the\n                    liquidity pool is being established for the first time, the creation of a new canister might require\n                    some time.\n                  </Trans>\n                </Typography>\n              </Box>\n              <Box mt={2}>\n                <NumberTextField\n                  value={startPrice}\n                  fullWidth\n                  placeholder=\"0.0\"\n                  variant=\"outlined\"\n                  numericProps={{\n                    allowNegative: false,\n                    thousandSeparator: true,\n                    decimalScale: 8,\n                    maxLength: MAX_SWAP_INPUT_LENGTH,\n                  }}\n                  onChange={(e) => onStartPriceInput(e.target.value)}\n                />\n              </Box>\n              <Grid container mt={2} mb={2} className={classes.startPrice} alignItems=\"center\">\n                <Typography sx={{ marginRight: \"8px\" }}>\n                  <Trans>Current {baseCurrency?.symbol} Price:</Trans>\n                </Typography>\n                <Grid item xs>\n                  <Grid container alignItems=\"center\">\n                    <Grid\n                      item\n                      xs\n                      sx={{\n                        overflow: \"hidden\",\n                        width: \"0px\",\n                      }}\n                    >\n                      <Typography\n                        fontWeight={600}\n                        color=\"textPrimary\"\n                        align=\"right\"\n                        sx={{\n                          overflow: \"hidden\",\n                          textOverflow: \"ellipsis\",\n                          whiteSpace: \"nowrap\",\n                        }}\n                      >\n                        {startPrice ? `${startPrice}` : \"- \"}\n                      </Typography>\n                    </Grid>\n                    <Typography\n                      fontWeight={600}\n                      color=\"textPrimary\"\n                      sx={{\n                        marginLeft: \"4px\",\n                      }}\n                    >\n                      {quoteCurrency?.symbol}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Box>\n          </>\n        )}\n        <Box>\n          <Grid container alignItems=\"center\">\n            <Grid item xs>\n              <Typography variant=\"h4\" color=\"textPrimary\">\n                <Trans>Set Price Range</Trans>\n              </Typography>\n            </Grid>\n            {baseCurrency && quoteCurrency && (\n              <Grid item>\n                <TokenToggle currencyA={baseCurrency} currencyB={quoteCurrency} handleToggle={handleTokenToggle} />\n              </Grid>\n            )}\n          </Grid>\n\n          <Box\n            sx={\n              isRangePriceDisabled\n                ? {\n                  opacity: \"0.2\",\n                  pointerEvents: \"none\",\n                }\n                : {}\n            }\n          >\n            {/* zoom position */}\n            {!noLiquidity && (\n              <Box mt={3} sx={{ position: \"relative\" }}>\n                <Grid sx={{ height: \"28px\" }} container alignItems=\"center\">\n                  <Typography color=\"textPrimary\" fontSize=\"12px\">\n                    <Trans>Current Price: </Trans> {price ? toSignificantFormatted(price) : \"--\"}\n                    <Typography component=\"span\" sx={{ marginLeft: \"5px\" }} fontSize=\"12px\">\n                      {quoteCurrency?.symbol} per {baseCurrency?.symbol}\n                    </Typography>\n                  </Typography>\n                </Grid>\n                <Box mt={3}>\n                  {/* @ts-ignore */}\n                  <PriceRangeChart\n                    priceLower={priceLower}\n                    priceUpper={priceUpper}\n                    ticksAtLimit={ticksAtLimit}\n                    onLeftRangeInput={onLeftRangeInput}\n                    onRightRangeInput={onRightRangeInput}\n                    currencyA={baseCurrency}\n                    currencyB={quoteCurrency}\n                    feeAmount={feeAmount}\n                    price={price}\n                  />\n                </Box>\n              </Box>\n            )}\n            <Box mt={4} className={classes.priceRangeInput}>\n              <Box\n                sx={{\n                  opacity: isFullRange ? 0.05 : 1,\n                }}\n              >\n                <Grid container justifyContent=\"space-between\">\n                  <Grid item sx={{ width: \"48%\" }}>\n                    <PriceRangeSelector\n                      label={t`Min Price`}\n                      value={\n                        ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER] ? \"0\" : leftPrice?.toSignificant(5) ?? \"\"\n                      }\n                      onRangeInput={onLeftRangeInput}\n                      decrement={isSorted ? getDecrementLower : getIncrementUpper}\n                      increment={isSorted ? getIncrementLower : getDecrementUpper}\n                      decrementDisabled={ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER]}\n                      incrementDisabled={ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER]}\n                      baseCurrency={baseCurrency}\n                      quoteCurrency={quoteCurrency}\n                    />\n                  </Grid>\n                  <Grid item sx={{ width: \"48%\" }}>\n                    <PriceRangeSelector\n                      label={t`Max Price`}\n                      value={\n                        ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER] ? \"∞\" : rightPrice?.toSignificant(6) ?? \"\"\n                      }\n                      onRangeInput={(value) => onRightRangeInput(value)}\n                      decrement={isSorted ? getDecrementUpper : getIncrementLower}\n                      increment={isSorted ? getIncrementUpper : getDecrementLower}\n                      isUpperFullRange={ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER]}\n                      incrementDisabled={ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER]}\n                      decrementDisabled={ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER]}\n                      baseCurrency={baseCurrency}\n                      quoteCurrency={quoteCurrency}\n                    />\n                  </Grid>\n                </Grid>\n                {!noLiquidity && (\n                  <Box mt={2}>\n                    <Button\n                      variant=\"outlined\"\n                      size=\"large\"\n                      fullWidth\n                      color=\"secondary\"\n                      className={classes.fullRangeButton}\n                      onClick={handleFullRangeClick}\n                    >\n                      <Trans>Full Range</Trans>\n                    </Button>\n                  </Box>\n                )}\n              </Box>\n              {isFullRange && (\n                <Box className={classes.fullRangeMask} sx={{ p: 3 }}>\n                  <Grid container alignItems=\"center\">\n                    <Grid item xs=\"auto\" mr=\"12px\">\n                      <Grid container>\n                        <WarningIcon />\n                      </Grid>\n                    </Grid>\n                    <Typography className={classes.warningTitle}>\n                      <Trans>Efficiency Comparison</Trans>\n                    </Typography>\n                  </Grid>\n                  <Typography className={classes.warningText}>\n                    <Trans>Full range positions may earn less fees than concentrated positions.</Trans>\n                  </Typography>\n                  <ButtonBase className={classes.iUnderstand} onClick={handleIUnderstand}>\n                    <Trans>I Understand</Trans>\n                  </ButtonBase>\n                </Box>\n              )}\n            </Box>\n          </Box>\n        </Box>\n      </>\n    );\n  },\n);\n\nexport default PriceRange;\n"],"names":["BackIcon","props","_jsx","SvgIcon","viewBox","children","d","useStyle","bgGray","makeStyles","theme","selectButton","position","padding","height","color","cursor","backgroundColor","isDarkTheme","palette","background","level2","colors","lightGray200","borderRadius","concat","radius","selectButtonActive","lineHeight","themeOption","defaultGradient","arrow","CurrencySelectorButton","_ref","currency","onClick","loading","disabled","classes","handleButtonClick","useCallback","_jsxs","Grid","container","className","alignItems","item","mr","xs","gap","TokenImage","logo","size","tokenId","address","Typography","component","symbol","KeyboardArrowDown","sx","fontSize","Loading","circularSize","Box","Trans","id","CurrencySelector","currencyId","onChange","disabledCurrency","activeCurrencies","version","selectorShow","setSelectorShow","useState","token","useToken","disabledCurrencyIds","useMemo","length","map","activeCurrencyIds","_Fragment","CurrencySelectButton","Selector","open","onClose","AddLiquidityButton","error","Button","variant","fullWidth","i18n","_","AddLiquidityConfirmModal","_position$pool","_position$pool2","onCancel","onConfirm","baseCurrencyDefault","currency0","pool","token0","currency1","token1","manuallyInverted","setManuallyInverted","baseCurrency","base","sorted","quoteCurrency","ticksAtLimit","inverted","tickLower","tickUpper","feeAmount","fee","_tickAtLimit","useIsTickAtLimit","Bound","LOWER","UPPER","undefined","useTicksAtLimitInvert","price","priceLower","priceUpper","priceOf","token0PriceLower","token0PriceUpper","invert","onConvertClick","SwapModal","title","flexDirection","spacing","justifyContent","align","amount0","toSignificant","groupSeparator","marginTop","amount1","SyncAltIcon","marginLeft","formatTickPrice","fillRule","clipRule","fill","box","level3","border","gray200","input","textAlign","fontWeight","breakpoints","down","chip","paddingLeft","maxButton","secondaryMain","LockMask","type","useTheme","width","top","left","level1","opacity","zIndex","LockIcon","SwapDepositAmount","_ref2","_currency$decimals","value","locked","onUserInput","currencyBalance","showMaxButton","onMax","decimals","SAFE_DECIMALS_LENGTH","p","Chip","label","avatar","wrapped","NumberTextField","placeholder","numericProps","thousandSeparator","decimalScale","allowNegative","maxLength","MAX_SWAP_INPUT_LENGTH","e","target","mt","formatCurrencyAmount","FEE_DESCRIPTION","FeeAmount","LOW","MEDIUM","HIGH","NO_LIQUIDITY","LOCAL_FEES","feeTier","description","feeFormat","feeValue","BigNumber","div","toString","feeItem","lightGray200BorderColor","button","level4","outline","textPrimary","feeButton","display","activeFee","SwapFeeSelector","currencyA","currencyB","defaultActiveFee","feeAmountKeys","result","tvl","usePoolsTokenAmountsFromKey","fees","index","activeFeeObject","filter","totalValueLocked","reduce","accumulator","currentValue","_currentValue$balance","_currentValue$balance2","plus","balance0","balance1","currentLiquidityPercentage","_fee$balance","_fee$balance2","_fee$balance3","isEqualTo","multipliedBy","toFixed","getPercentage","values","0","LinkIcon","xmlns","SwapWrapper","buttons","Wrapper","TabPanel","tabs","SwapV2Wrapper","path","key","margin","_SwapWrapper","_ref3","buttonBase","TokenToggle","handleToggle","isSorted","sortsBefore","ButtonBase","PRICE_FIXED_DIGITS","computeSurroundingTicks","activeTickProcessed","sortedTickData","pivot","ascending","previousTickProcessed","processedTicks","i","tickIdx","Number","currentTickProcessed","liquidityActive","liquidityNet","JSBI","price0","tickToPrice","push","reverse","getActiveTick","tickCurrent","Math","floor","TICK_SPACINGS","usePoolActiveLiquidity","poolState","usePool","activeTick","isLoading","ticks","poolId","usePoolCanisterId","allTicks","useSwapAllTicks","tick","sqrtRatioX","TickMath","getSqrtRatioAtTick","tempInfo","liquidityGross","BigInt","price1","divide","tickIndex","price0Decimal","price1Decimal","useAllTicks","sortedTicks","String","toFormat","_price0","_price1","sort","a","b","_pool$liquidity","isUninitialized","PoolState","NOT_EXISTS","EXISTS","LOADING","data","findIndex","console","liquidity","formatTicks","subsequentTicks","ticksProcessed","isError","COLOR_BLUE_2","Path","styled","withConfig","displayName","componentId","Area","series","xScale","yScale","xValue","yValue","_area$curve$x$y1$y","area","curve","curveStepAfter","x","y1","y0","inRange","innerWidth","StyledGroup","g","text2","Axis","axisGenerator","ref","axis","select","call","remove","AxisBottom","innerHeight","offset","transform","axisBottom","brushHandlePath","join","brushHandleAccentPath","OffScreenHandle","points","stroke","strokeWidth","strokeLinejoin","Handle","HandleAccent","LabelGroup","visible","TooltipBackground","rect","_ref4","Tooltip","text","_ref5","compare","a1","a2","Brush","_ref6","interactive","brushLabelValue","brushExtent","setBrushExtent","westHandleColor","eastHandleColor","brushRef","useRef","brushBehavior","localBrushExtent","setLocalBrushExtent","showLabels","setShowLabels","hovering","setHovering","previousBrushExtent","useEffect","current","usePrevious","brushed","event","selection","mode","scaled","brushX","extent","max","handleSize","on","transition","move","selectAll","attr","timeout","setTimeout","clearTimeout","flipWestHandle","flipEastHandle","showWestArrow","showEastArrow","westHandleInView","eastHandleInView","x1","x2","y2","stopColor","y","clipPath","onMouseEnter","onMouseLeave","rx","dominantBaseline","Line","primaryMain","fillColor","ZoomOverlay","chartIcon","marginRight","darkLevel2","Zoom","svg","setZoom","resetBrush","zoomLevels","zoomBehavior","zoomIn","zoomOut","zoomInitial","zoomReset","scaleBy","scaleTo","zoomIdentity","translate","scale","zoom","scaleExtent","min","right","icon","ReplayIcon","ZoomInIcon","ZoomOutIcon","xAccessor","yAccessor","activeLiquidity","Chart","styles","dimensions","margins","brushDomain","brushLabels","onBrushDomainChange","zoomRef","bottom","scales","scaleLinear","domain","initialMin","initialMax","range","newXscale","rescaleX","showResetButton","Boolean","style","overflow","mask","brush","handle","west","east","ZOOM_LEVELS","InfoBox","message","minHeight","LiquidityChartRangeInput","_saturate","onLeftRangeInput","onRightRangeInput","COLOR_BLUE","formattedData","formatData","newData","t","chartEntry","parseFloat","unshift","useDensityChartData","onBrushDomainChangeEnded","leftRangeValue","rightRangeValue","batch","_interactive","leftPrice","rightPrice","percent","format","abs","Inbox","Loader","CloudOff","saturate","BarChart2","usePriceRangeInputStyle","inputContainer","darkLevel1","PriceRangeSelector","increment","decrement","onRangeInput","isUpperFullRange","incrementDisabled","decrementDisabled","localValue","setLocalValue","useLocalValue","setUseLocalValue","handleOnFocus","handleOnBlur","handleIncreasePrice","handleDecreasePrice","mb","RemoveIcon","ml","TextField","InputProps","disableUnderline","onBlur","onFocus","AddIcon","useSetPriceStyle","startPriceDescription","warningDark","startPrice","priceRangeInput","fullRangeMask","fullRangeButton","grey","lightTextPrimary","textTransform","dark","light","primary","borderColor","warningText","warningTitle","iUnderstand","memo","_leftPrice$toSignific","_rightPrice$toSignifi","onStartPriceInput","noLiquidity","getDecrementLower","getIncrementLower","getDecrementUpper","getIncrementUpper","getSetFullRange","handleTokenToggle","poolLoading","isFullRange","setFullRange","tokenA","tokenB","isRangePriceDisabled","textOverflow","whiteSpace","pointerEvents","toSignificantFormatted","PriceRangeChart","handleFullRangeClick","WarningIcon","handleIUnderstand"],"sourceRoot":""}
{"version":3,"file":"static/js/922.f7511cd3.chunk.js","mappings":"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","sources":["assets/images/wicp_currency.svg","components/LazyImage/DefaultDarkImage.tsx","components/LazyImage/FilledImage.tsx","components/LazyImage/LoadingDarkImage.tsx","components/LazyImage/LoadingLightImage.tsx","components/LazyImage/DefaultLightImage.tsx","components/LazyImage/index.tsx","components/NFT/FileImage.tsx","components/NFT/NFTVideo.tsx","components/NFT/NFTAvatar.tsx","components/NFT/WICPPriceFormat.tsx","hooks/nft/trade.ts","hooks/nft/useNFTCalls.ts","hooks/nft/useNFTSvg.ts","hooks/swap/useNFTSvg.ts","hooks/nft/useNFTMetadata.ts","hooks/swap/v2/useSwapCalls.ts","../packages/utils/src/isValidAccount.ts","../packages/utils/src/time.ts"],"sourcesContent":["var _circle, _path, _path2, _path3, _circle2, _g, _defs;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgWicpCurrency(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 29,\n    height: 29,\n    viewBox: \"0 0 29 29\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 14.0039,\n    cy: 14.5,\n    r: 14,\n    fill: \"white\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.0796 7.08594C17.9489 7.08594 16.7155 7.68859 15.4136 8.87666C14.7969 9.43628 14.2573 10.0389 13.8633 10.521C13.8633 10.521 14.4971 11.2356 15.1909 12.0018C15.5678 11.5369 16.1074 10.9084 16.7327 10.3402C17.889 9.2813 18.6427 9.06608 19.0796 9.06608C20.707 9.06608 22.0261 10.4005 22.0261 12.0535C22.0261 13.6893 20.707 15.0237 19.0796 15.0409C19.0024 15.0409 18.9082 15.0323 18.7969 15.0065C19.2679 15.2217 19.7819 15.3767 20.2616 15.3767C23.2423 15.3767 23.8246 13.3621 23.8589 13.2157C23.9445 12.8455 23.9961 12.4581 23.9961 12.0621C23.9874 9.31573 21.7862 7.08594 19.0796 7.08594Z\",\n    fill: \"url(#paint0_linear_638_0)\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.6743 17.0134C9.80492 17.0134 11.0383 16.4107 12.3403 15.2227C12.9569 14.663 13.4966 14.0604 13.8906 13.5783C13.8906 13.5783 13.2567 12.8637 12.5629 12.0975C12.1861 12.5624 11.6465 13.1909 11.0212 13.7591C9.86488 14.8094 9.10256 15.0332 8.6743 15.0332C7.04688 15.0332 5.72782 13.6988 5.72782 12.0458C5.72782 10.4101 7.04688 9.07564 8.6743 9.05842C8.75139 9.05842 8.8456 9.06702 8.95695 9.09285C8.48586 8.87762 7.97194 8.72266 7.49229 8.72266C4.51155 8.72266 3.92911 10.7372 3.89486 10.8836C3.80921 11.2538 3.75781 11.6412 3.75781 12.0372C3.75781 14.7836 5.9591 17.0134 8.6743 17.0134Z\",\n    fill: \"url(#paint1_linear_638_0)\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M10.9423 10.3833C10.6168 10.0734 9.02365 8.80779 7.49903 8.76475C4.78203 8.69793 3.98334 10.6322 3.91448 10.8817C4.43491 8.71265 6.37483 7.09452 8.68104 7.08594C10.5611 7.08594 12.4611 8.89116 13.8648 10.5204C13.8671 10.5176 13.8693 10.515 13.8714 10.5124C13.8714 10.5124 14.5053 11.227 15.1991 11.9932C15.1991 11.9932 15.9871 12.9058 16.8265 13.7064C17.152 14.0164 18.7365 15.2647 20.2611 15.3078C23.0535 15.3852 23.8244 13.3448 23.8671 13.1899C23.3533 15.368 21.409 16.9952 19.0962 17.0038C17.2156 17.0038 15.315 15.1974 13.9053 13.5677C13.9025 13.5711 13.8999 13.5743 13.8973 13.5773C13.8973 13.5773 13.2635 12.8628 12.5697 12.0965C12.5697 12.0965 11.7817 11.1839 10.9423 10.3833ZM3.91016 10.8998C3.91093 10.8955 3.91236 10.8894 3.91448 10.8817C3.91303 10.8877 3.91159 10.8938 3.91016 10.8998Z\",\n    fill: \"#29ABE2\"\n  })), /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask0_638_0\",\n    style: {\n      maskType: \"alpha\"\n    },\n    maskUnits: \"userSpaceOnUse\",\n    x: 0,\n    y: 0,\n    width: 28,\n    height: 29\n  }, _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 14,\n    cy: 14.5,\n    r: 14,\n    fill: \"white\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#mask0_638_0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M27.4982 18.5C23.848 20.5441 19.1392 21.7753 13.9991 21.7753C8.85897 21.7753 4.15017 20.5441 0.5 18.5C2.13091 24.4239 7.55685 28.7753 13.9991 28.7753C20.4413 28.7753 25.8673 24.4239 27.4982 18.5Z\",\n    fill: \"#5669DC\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.5947 23.025H12.2047L11.1747 26.5H10.5297L9.79969 23.87L9.02469 26.5L8.38469 26.505L7.39969 23.025H8.00469L8.72469 25.855L9.50469 23.025H10.1447L10.8697 25.84L11.5947 23.025ZM13.2448 23.745V24.225C13.4215 23.875 13.6965 23.7 14.0698 23.7V24.29H13.9248C13.7015 24.29 13.5315 24.3467 13.4148 24.46C13.3015 24.5733 13.2448 24.77 13.2448 25.05V26.5H12.6748V23.745H13.2448ZM16.4088 25.8C16.5754 25.63 16.6588 25.4033 16.6588 25.12C16.6588 24.8367 16.5754 24.6117 16.4088 24.445C16.2454 24.2783 16.0504 24.195 15.8238 24.195C15.5971 24.195 15.4004 24.2767 15.2338 24.44C15.0704 24.6033 14.9888 24.8267 14.9888 25.11C14.9888 25.3933 15.0704 25.6217 15.2338 25.795C15.4004 25.965 15.5971 26.05 15.8238 26.05C16.0504 26.05 16.2454 25.9667 16.4088 25.8ZM15.7038 26.545C15.3371 26.545 15.0288 26.4117 14.7788 26.145C14.5288 25.875 14.4038 25.5317 14.4038 25.115C14.4038 24.695 14.5271 24.355 14.7738 24.095C15.0238 23.8317 15.3338 23.7 15.7038 23.7C15.9204 23.7 16.1104 23.75 16.2738 23.85C16.4404 23.9467 16.5688 24.075 16.6588 24.235V23.745H17.2338V26.5H16.6588V25.985C16.5654 26.155 16.4371 26.2917 16.2738 26.395C16.1104 26.495 15.9204 26.545 15.7038 26.545ZM19.9774 25.795C20.1441 25.6217 20.2274 25.3933 20.2274 25.11C20.2274 24.8267 20.1441 24.6033 19.9774 24.44C19.8141 24.2767 19.6174 24.195 19.3874 24.195C19.1608 24.195 18.9641 24.2783 18.7974 24.445C18.6341 24.6117 18.5524 24.8367 18.5524 25.12C18.5524 25.4033 18.6341 25.63 18.7974 25.8C18.9641 25.9667 19.1608 26.05 19.3874 26.05C19.6141 26.05 19.8108 25.965 19.9774 25.795ZM19.5124 23.7C19.8824 23.7 20.1908 23.8317 20.4374 24.095C20.6841 24.355 20.8074 24.695 20.8074 25.115C20.8074 25.5317 20.6824 25.875 20.4324 26.145C20.1858 26.4117 19.8791 26.545 19.5124 26.545C19.2958 26.545 19.1058 26.495 18.9424 26.395C18.7791 26.2917 18.6491 26.155 18.5524 25.985V27.81H17.9824V23.745H18.5524V24.235C18.6458 24.075 18.7741 23.9467 18.9374 23.85C19.1041 23.75 19.2958 23.7 19.5124 23.7Z\",\n    fill: \"white\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_638_0\",\n    x1: 16.501,\n    y1: 7.80481,\n    x2: 23.3046,\n    y2: 14.8142,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.21,\n    stopColor: \"#F15A24\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.6841,\n    stopColor: \"#FBB03B\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint1_linear_638_0\",\n    x1: 11.2474,\n    y1: 16.2908,\n    x2: 4.44368,\n    y2: 9.2814,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.21,\n    stopColor: \"#ED1E79\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.8929,\n    stopColor: \"#522785\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgWicpCurrency);\nexport default __webpack_public_path__ + \"static/media/wicp_currency.6f660b15621d7fc8fc894abefe7b0a33.svg\";\nexport { ForwardRef as ReactComponent };","import FilledImage from \"./FilledImage\";\n\nexport const DarkIcon = () => {\n  return (\n    <svg width=\"136\" height=\"122\" viewBox=\"0 0 136 122\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M125.263 0H10.7368C4.65263 0 0 4.67847 0 10.7965V111.204C0 116.962 4.65263 122 10.7368 122H125.263C130.989 122 136 116.962 136 111.204V10.7965C136 5.03835 131.347 0 125.263 0V0ZM35.0737 18.354C41.1579 18.354 46.5263 23.3923 46.5263 29.8702C46.5263 36.3481 41.5158 41.3864 35.0737 41.3864C28.9895 41.3864 23.6211 36.3481 23.6211 29.8702C23.6211 23.3923 28.9895 18.354 35.0737 18.354V18.354ZM26.8421 105.805C25.7684 105.805 24.6947 105.445 23.6211 104.726C21.4737 102.926 21.4737 100.407 23.2632 98.2478L45.4526 66.9381C47.2421 65.1386 49.7474 64.7788 51.8947 66.2183L71.2211 79.8938L105.937 42.4661C107.726 40.6667 116.316 31.3097 121.326 41.7463V105.445C121.326 105.805 26.8421 105.805 26.8421 105.805V105.805Z\"\n        fill=\"white\"\n        fillOpacity=\"0.03\"\n      />\n    </svg>\n  );\n};\n\nexport const DefaultDarkImage = (props: { [key: string]: any }) => {\n  return <FilledImage Icon={DarkIcon} theme=\"dark\" {...props} />;\n};\n","import { Grid } from \"@mui/material\";\n\ninterface FilledImageProps {\n  Icon: any;\n  theme?: string;\n  height?: string;\n  sx?: { [key: string]: any };\n}\n\nexport default function FilledImage({ Icon, theme, height, ...props }: FilledImageProps) {\n  return (\n    <Grid\n      {...props}\n      sx={{\n        width: \"100%\",\n        ...(height ? { height } : { paddingTop: \"100%\" }),\n        position: \"relative\",\n        ...(props.sx || {}),\n      }}\n    >\n      <Grid\n        container\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={{\n          background: theme === \"dark\" ? \"#29314F\" : \"#e3e3e3\",\n          width: \"100%\",\n          height: \"100%\",\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n        }}\n      >\n        {/* @ts-ignore */}\n        <Icon {...props} />\n      </Grid>\n    </Grid>\n  );\n}\n","import FilledImage from \"./FilledImage\";\n\nexport const DarkIcon = ({ size = 94 }) => {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 94 94\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <circle cx=\"47\" cy=\"47\" r=\"47\" fill=\"#111936\" fillOpacity=\"0.15\" />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M58.1332 20C50.777 20 45.4633 25.8845 44.0461 30.0396C41.5601 36.4336 42.6096 41.345 43.5344 45.6764L43.6014 45.9919C44.4602 50.0202 45.2706 53.8248 44.1101 58.6001C44.0023 59.2538 43.8108 59.8967 43.5409 60.511C42.213 63.5562 39.2016 65.5228 35.8699 65.5228C31.2587 65.5228 27.5071 61.7938 27.5071 57.209C27.5071 52.6223 31.2587 48.8909 35.8699 48.8909C37.1118 48.8909 38.3052 49.1571 39.4195 49.6804L40.3907 50.1374L39.1806 42.7828L38.7987 42.706C37.8407 42.5144 36.8551 42.4179 35.8699 42.4179C27.6704 42.4179 21 49.0529 21 57.209C21 65.3654 27.6704 72 35.8699 72C42.6767 72 48.6003 67.4222 50.2664 60.9044C51.951 55.7994 51.1635 51.1417 50.0473 46.0158L49.9224 45.4454C48.8271 40.4322 47.9617 36.4721 50.5711 31.2433C51.9444 28.3477 54.9124 26.4761 58.1332 26.4761C62.7425 26.4761 66.4929 30.2051 66.4929 34.7899C66.4929 39.3743 62.7425 43.1048 58.1332 43.1048C56.9906 43.1048 55.8806 42.8792 54.831 42.4322L53.8877 42.0315L55.0791 49.2739L55.4711 49.3453C56.3419 49.5018 57.238 49.5821 58.1332 49.5821C66.3308 49.5821 73 42.9459 73 34.7899C73 26.6346 66.3308 20 58.1332 20Z\"\n        fill=\"white\"\n        fillOpacity=\"0.04\"\n      />\n    </svg>\n  );\n};\n\nexport const LoadingDarkImage = (props: { [key: string]: any }) => {\n  return <FilledImage Icon={DarkIcon} theme=\"dark\" {...props} />;\n};\n","import FilledImage from \"./FilledImage\";\n\nexport const LightIcon = () => {\n  return (\n    <svg width=\"94\" height=\"94\" viewBox=\"0 0 94 94\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <circle cx=\"47\" cy=\"47\" r=\"47\" fill=\"black\" fillOpacity=\"0.04\" />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M58.1332 20C50.777 20 45.4633 25.8845 44.0461 30.0396C41.5601 36.4336 42.6096 41.345 43.5344 45.6764L43.6014 45.9919C44.4602 50.0202 45.2706 53.8248 44.1101 58.6001C44.0023 59.2538 43.8108 59.8967 43.5409 60.511C42.213 63.5562 39.2016 65.5228 35.8699 65.5228C31.2587 65.5228 27.5071 61.7938 27.5071 57.209C27.5071 52.6223 31.2587 48.8909 35.8699 48.8909C37.1118 48.8909 38.3052 49.1571 39.4195 49.6804L40.3907 50.1374L39.1806 42.7828L38.7987 42.706C37.8407 42.5144 36.8551 42.4179 35.8699 42.4179C27.6704 42.4179 21 49.0529 21 57.209C21 65.3654 27.6704 72 35.8699 72C42.6767 72 48.6003 67.4222 50.2664 60.9044C51.951 55.7994 51.1635 51.1417 50.0473 46.0158L49.9224 45.4454C48.8271 40.4322 47.9617 36.4721 50.5711 31.2433C51.9444 28.3477 54.9124 26.4761 58.1332 26.4761C62.7425 26.4761 66.4929 30.2051 66.4929 34.7899C66.4929 39.3743 62.7425 43.1048 58.1332 43.1048C56.9906 43.1048 55.8806 42.8792 54.831 42.4322L53.8877 42.0315L55.0791 49.2739L55.4711 49.3453C56.3419 49.5018 57.238 49.5821 58.1332 49.5821C66.3308 49.5821 73 42.9459 73 34.7899C73 26.6346 66.3308 20 58.1332 20Z\"\n        fill=\"white\"\n        fillOpacity=\"0.2\"\n      />\n    </svg>\n  );\n};\n\nexport const LoadingLightImage = (props: { [key: string]: any }) => {\n  return <FilledImage Icon={LightIcon} theme=\"light\" {...props} />;\n};\n","import FilledImage from \"./FilledImage\";\n\nexport const LightIcon = () => {\n  return (\n    <svg width=\"136\" height=\"122\" viewBox=\"0 0 136 122\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M125.263 0H10.7368C4.65263 0 0 4.67847 0 10.7965V111.204C0 116.962 4.65263 122 10.7368 122H125.263C130.989 122 136 116.962 136 111.204V10.7965C136 5.03835 131.347 0 125.263 0ZM35.0737 18.354C41.1579 18.354 46.5263 23.3923 46.5263 29.8702C46.5263 36.3481 41.5158 41.3864 35.0737 41.3864C28.9895 41.3864 23.6211 36.3481 23.6211 29.8702C23.6211 23.3923 28.9895 18.354 35.0737 18.354ZM26.8421 105.805C25.7684 105.805 24.6947 105.445 23.6211 104.726C21.4737 102.926 21.4737 100.407 23.2632 98.2478L45.4526 66.938C47.2421 65.1386 49.7474 64.7788 51.8947 66.2183L71.2211 79.8938L105.937 42.4661C107.726 40.6667 116.316 31.3097 121.326 41.7463V105.445C121.326 105.805 26.8421 105.805 26.8421 105.805Z\"\n        fill=\"white\"\n        fillOpacity=\"0.2\"\n      />\n    </svg>\n  );\n};\n\nexport const DefaultLightImage = (props: { [key: string]: any }) => {\n  return <FilledImage Icon={LightIcon} theme=\"light\" {...props} />;\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Grid, Box } from \"@mui/material\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport ErrorImage from \"@mui/icons-material/BrokenImage\";\nimport { Theme } from \"@mui/material/styles\";\nimport { LoadingDarkImage } from \"./LoadingDarkImage\";\nimport { LoadingLightImage } from \"./LoadingLightImage\";\nimport { DefaultDarkImage } from \"./DefaultDarkImage\";\nimport { DefaultLightImage } from \"./DefaultLightImage\";\n\nconst useStyle = makeStyles(() => ({\n  image: {\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n    width: \"auto\",\n    height: \"auto\",\n  },\n  defaultImage: {\n    marginTop: \"-100%\",\n  },\n}));\n\nexport interface LazyImageProps {\n  animationDuration?: number;\n  /** Disables the error icon if set to true. */\n  /** Disables the transition after load if set to true. */\n  disableTransition?: boolean;\n  /** Fired when the user clicks on the image happened. */\n  onClick?: () => void;\n  /** Fired when the image failed to load. */\n  onError?: (event: any) => void;\n  /** Fired when the image finished loading. */\n  onLoad?: (event: any) => void;\n  /** Specifies the URL of an image. */\n  src: string;\n  /** Override the inline-styles of the root element. */\n  style?: { [key: string]: any };\n  /** always show default image */\n  showDefault?: boolean;\n\n  boxSX?: { [key: string]: any };\n\n  height?: string;\n\n  CustomImage?: React.ReactNode;\n}\n\nexport default function LazyImage(props: LazyImageProps) {\n  const theme = useTheme() as Theme;\n  const classes = useStyle();\n  const [imageError, setImageError] = useState(false);\n  const [imageLoaded, setImageLoaded] = useState(false);\n\n  const image = useRef<HTMLImageElement>(null);\n\n  const handleLoadImage = (e?: any) => {\n    setImageError(false);\n    setImageLoaded(true);\n    if (props.onLoad) {\n      props.onLoad(e);\n    }\n  };\n\n  const handleImageError = (e?: any) => {\n    if (props.src) {\n      setImageError(true);\n\n      if (props.onError) {\n        props.onError(e);\n      }\n    }\n  };\n\n  const {\n    animationDuration = 3000,\n    disableTransition = false,\n    onClick,\n    showDefault = false,\n    height,\n    boxSX,\n    CustomImage,\n    ...imageProps\n  } = props;\n\n  const imageTransition = !disableTransition && {\n    opacity: imageLoaded ? 1 : 0,\n    filterBrightness: imageLoaded ? 100 : 0,\n    filterSaturate: imageLoaded ? 100 : 20,\n    transition: `\n      filterBrightness ${animationDuration * 0.75}ms cubic-bezier(0.4, 0.0, 0.2, 1),\n      filterSaturate ${animationDuration}ms cubic-bezier(0.4, 0.0, 0.2, 1),\n      opacity ${animationDuration / 2}ms cubic-bezier(0.4, 0.0, 0.2, 1)`,\n  };\n\n  useEffect(() => {\n    if (props.showDefault) return;\n    const img = image.current;\n    if (img && img.complete) {\n      // image loaded before the component rendered (e.g. SSR), see #43 and #51\n      if (img.naturalWidth === 0) {\n        handleImageError();\n      } else {\n        handleLoadImage();\n      }\n    }\n  }, [props.showDefault]);\n\n  return (\n    <Grid container justifyContent=\"center\" sx={{ position: \"relative\", overflow: \"hidden\" }}>\n      <Box\n        sx={{\n          position: \"relative\",\n          width: \"100%\",\n          ...(height ? { height } : { height: 0, paddingTop: \"100%\" }),\n          display: imageLoaded ? \"block\" : \"none\",\n          ...(boxSX || {}),\n        }}\n        onClick={onClick}\n      >\n        <Box\n          sx={{\n            width: \"100%\",\n            height: \"100%\",\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n          }}\n        >\n          {imageProps.src && !showDefault && !CustomImage && (\n            <img\n              {...imageProps}\n              ref={image}\n              style={{\n                ...imageTransition,\n                display: imageLoaded ? \"block\" : \"none\",\n              }}\n              className={classes.image}\n              onLoad={handleLoadImage}\n              onError={handleImageError}\n              alt=\"\"\n            />\n          )}\n        </Box>\n      </Box>\n      {!imageLoaded &&\n        !showDefault &&\n        !CustomImage &&\n        (theme.customization.mode === \"dark\" ? (\n          <LoadingDarkImage height={height} sx={imageLoaded ? { marginTop: \"-100%\" } : {}} />\n        ) : (\n          <LoadingLightImage height={height} sx={imageLoaded ? { marginTop: \"-100%\" } : {}} />\n        ))}\n      {imageLoaded && imageError && <ErrorImage sx={{ marginTop: \"-100%\" }} />}\n      {showDefault &&\n        !CustomImage &&\n        (theme.customization.mode === \"dark\" ? (\n          <DefaultDarkImage height={height} sx={imageLoaded ? { marginTop: \"-100%\" } : {}} />\n        ) : (\n          <DefaultLightImage height={height} sx={imageLoaded ? { marginTop: \"-100%\" } : {}} />\n        ))}\n      {CustomImage ? (\n        <Box\n          sx={{\n            position: \"relative\",\n            width: \"100%\",\n            ...(height ? { height } : { paddingTop: \"100%\" }),\n          }}\n        >\n          <Box\n            sx={{\n              position: \"absolute\",\n              top: 0,\n              left: 0,\n              height: \"100%\",\n              width: \"100%\",\n            }}\n          >\n            {CustomImage}\n          </Box>\n        </Box>\n      ) : null}\n    </Grid>\n  );\n}\n","import { Box, Grid, Typography } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles(() => {\n  return {\n    wrapper: {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"100%\",\n      padding: \"20px\",\n      background: \"linear-gradient(137.79deg, #7584D7 2.02%, #443D99 98.56%)\",\n      borderRadius: \"12px\",\n    },\n  };\n});\n\nfunction CanisterIcon() {\n  return (\n    <svg width=\"28\" height=\"24\" viewBox=\"0 0 28 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M2.24661 4.0788C1.6771 4.54489 1.5 4.94486 1.5 5.25C1.5 5.55514 1.6771 5.95511 2.24661 6.4212C2.81058 6.88275 3.6721 7.33179 4.80294 7.72324C7.0575 8.50366 10.2208 9 13.75 9C17.2792 9 20.4425 8.50366 22.6971 7.72324C23.8279 7.33179 24.6894 6.88275 25.2534 6.4212C25.8229 5.95511 26 5.55514 26 5.25C26 4.94486 25.8229 4.54489 25.2534 4.0788C24.6894 3.61725 23.8279 3.16821 22.6971 2.77676C20.4425 1.99634 17.2792 1.5 13.75 1.5C10.2208 1.5 7.0575 1.99634 4.80294 2.77676C3.6721 3.16821 2.81058 3.61725 2.24661 4.0788ZM4.31228 1.35928C6.7628 0.511024 10.0995 0 13.75 0C17.4005 0 20.7372 0.511024 23.1877 1.35928C24.4094 1.78217 25.4517 2.3028 26.2034 2.91799C26.9496 3.52865 27.5 4.3125 27.5 5.25C27.5 6.1875 26.9496 6.97135 26.2034 7.58201C25.4517 8.1972 24.4094 8.71783 23.1877 9.14072C20.7372 9.98898 17.4005 10.5 13.75 10.5C10.0995 10.5 6.7628 9.98898 4.31228 9.14072C3.09059 8.71783 2.0483 8.1972 1.2966 7.58201C0.550434 6.97135 0 6.1875 0 5.25C0 4.3125 0.550434 3.52865 1.2966 2.91799C2.0483 2.3028 3.09059 1.78217 4.31228 1.35928Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.82685 20.5855C7.07355 21.4496 10.2281 22 13.75 22C17.2719 22 20.4264 21.4496 22.6732 20.5855C23.799 20.1525 24.6587 19.6553 25.2238 19.1413C25.7888 18.6276 26 18.1563 26 17.75H27.5C27.5 18.7244 26.9837 19.5685 26.233 20.2511C25.4825 20.9336 24.4383 21.5137 23.2116 21.9855C20.7533 22.9311 17.4078 23.5 13.75 23.5C10.0922 23.5 6.74675 22.9311 4.28838 21.9855C3.06169 21.5137 2.01753 20.9336 1.26703 20.2511C0.516306 19.5685 0 18.7244 0 17.75H1.5C1.5 18.1563 1.71123 18.6276 2.27618 19.1413C2.84135 19.6553 3.70099 20.1525 4.82685 20.5855Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M1.5 4.75V17.75H0V4.75H1.5ZM26 17.75V4.75H27.5V17.75H26Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M17.0164 12.75C16.3325 12.75 15.5865 13.1145 14.799 13.8331C14.426 14.1716 14.0996 14.5361 13.8613 14.8277C13.8613 14.8277 14.2447 15.2599 14.6643 15.7233C14.8923 15.4421 15.2186 15.062 15.5968 14.7183C16.2962 14.0778 16.7521 13.9477 17.0164 13.9477C18.0006 13.9477 18.7985 14.7548 18.7985 15.7545C18.7985 16.7439 18.0006 17.551 17.0164 17.5614C16.9697 17.5614 16.9127 17.5562 16.8454 17.5406C17.1303 17.6708 17.4411 17.7645 17.7312 17.7645C19.5341 17.7645 19.8863 16.546 19.907 16.4575C19.9588 16.2336 19.99 15.9993 19.99 15.7598C19.9848 14.0987 18.6534 12.75 17.0164 12.75Z\"\n        fill=\"url(#paint0_linear_21175_75502)\"\n      />\n      <path\n        d=\"M10.7237 18.745C11.4075 18.745 12.1535 18.3805 12.941 17.6619C13.314 17.3234 13.6403 16.9589 13.8786 16.6673C13.8786 16.6673 13.4953 16.2351 13.0757 15.7717C12.8477 16.0529 12.5213 16.433 12.1431 16.7767C11.4438 17.412 10.9827 17.5473 10.7237 17.5473C9.73935 17.5473 8.94153 16.7402 8.94153 15.7404C8.94153 14.7511 9.73935 13.944 10.7237 13.9336C10.7703 13.9336 10.8273 13.9388 10.8946 13.9544C10.6097 13.8242 10.2989 13.7305 10.0087 13.7305C8.20589 13.7305 7.8536 14.949 7.83289 15.0375C7.78109 15.2614 7.75 15.4957 7.75 15.7352C7.75 17.3963 9.08141 18.745 10.7237 18.745Z\"\n        fill=\"url(#paint1_linear_21175_75502)\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M12.0931 14.7444C11.8963 14.5569 10.9327 13.7914 10.0105 13.7654C8.36719 13.725 7.88411 14.8949 7.84246 15.0458C8.15723 13.7339 9.33057 12.7552 10.7254 12.75C11.8626 12.75 13.0117 13.8419 13.8608 14.8273C13.8621 14.8256 13.8635 14.824 13.8648 14.8224C13.8648 14.8224 14.2481 15.2546 14.6678 15.7181C14.6678 15.7181 15.1444 16.27 15.6521 16.7543C15.8489 16.9418 16.8073 17.6968 17.7295 17.7228C19.4184 17.7697 19.8847 16.5356 19.9105 16.4419C19.5998 17.7593 18.4237 18.7434 17.0249 18.7487C15.8874 18.7487 14.7379 17.6561 13.8853 16.6704C13.8836 16.6724 13.882 16.6744 13.8804 16.6762C13.8804 16.6762 13.4971 16.244 13.0774 15.7806C13.0774 15.7806 12.6008 15.2286 12.0931 14.7444ZM7.83984 15.0568C7.84031 15.0541 7.84117 15.0504 7.84246 15.0458C7.84158 15.0494 7.84071 15.0531 7.83984 15.0568Z\"\n        fill=\"#29ABE2\"\n      />\n      <defs>\n        <linearGradient\n          id=\"paint0_linear_21175_75502\"\n          x1=\"15.4567\"\n          y1=\"13.1848\"\n          x2=\"19.5718\"\n          y2=\"17.4243\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop offset=\"0.21\" stopColor=\"#F15A24\" />\n          <stop offset=\"0.6841\" stopColor=\"#FBB03B\" />\n        </linearGradient>\n        <linearGradient\n          id=\"paint1_linear_21175_75502\"\n          x1=\"12.2799\"\n          y1=\"18.308\"\n          x2=\"8.16484\"\n          y2=\"14.0684\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop offset=\"0.21\" stopColor=\"#ED1E79\" />\n          <stop offset=\"0.8929\" stopColor=\"#522785\" />\n        </linearGradient>\n      </defs>\n    </svg>\n  );\n}\n\nexport default function FileImage({ fileType }: { fileType: string }) {\n  const classes = useStyles();\n\n  return (\n    <Grid container alignItems=\"center\" justifyContent=\"center\" className={classes.wrapper}>\n      <Box\n        sx={{\n          position: \"absolute\",\n          top: \"20px\",\n          left: \"20px\",\n        }}\n      >\n        <CanisterIcon />\n      </Box>\n      <Typography color=\"text.primary\" fontSize=\"28px\" fontWeight={500}>\n        .{fileType}\n      </Typography>\n    </Grid>\n  );\n}\n","import { Grid, Box } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { DefaultDarkImage } from \"components/LazyImage/DefaultDarkImage\";\n\nexport default function NFTVideo({\n  src,\n  onClick,\n  autoPlay,\n}: {\n  autoPlay?: boolean;\n  src: string | undefined;\n  onClick?: () => void;\n}) {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (src) {\n      const video = document.getElementById(\"NFT_Video\") as HTMLVideoElement;\n\n      if (video) {\n        video.addEventListener(\n          \"loadeddata\",\n          () => {\n            setLoading(false);\n            if (autoPlay) video.play();\n          },\n          false,\n        );\n      }\n    }\n  }, [src]);\n\n  return (\n    <Grid container justifyContent=\"center\" sx={{ position: \"relative\", overflow: \"hidden\" }}>\n      <Box\n        sx={{\n          position: \"relative\",\n          width: \"100%\",\n          height: \"100%\",\n          padding: loading ? 0 : \"5px\",\n        }}\n        onClick={onClick}\n      >\n        <video\n          id=\"NFT_Video\"\n          controls\n          loop\n          muted={!!autoPlay}\n          style={{ display: loading ? \"none\" : \"block\", width: \"100%\", height: \"100%\" }}\n        >\n          <source src={src} type=\"video/mp4\" />\n        </video>\n\n        {loading ? <DefaultDarkImage sx={{ marginTop: loading ? 0 : \"-100%\" }} /> : null}\n      </Box>\n    </Grid>\n  );\n}\n","import LazyImage from \"components/LazyImage\";\nimport { type NFTTokenMetadata } from \"@w2e/types\";\nimport FileImage from \"./FileImage\";\nimport NFTVideo from \"./NFTVideo\";\n\nexport default function NFTAvatar({\n  metadata,\n  onClick,\n  autoPlay,\n}: {\n  metadata: NFTTokenMetadata | undefined;\n  onClick?: () => void;\n  autoPlay?: boolean;\n}) {\n  // fix wrong fileType in data\n  // canister in rgm6h-oyaaa-aaaan-qcx5a-cai all file type is image but is video in data\n  const fileType = metadata?.cId === \"rgm6h-oyaaa-aaaan-qcx5a-cai\" ? \"image\" : metadata?.fileType;\n\n  return !!metadata && fileType === \"video\" ? (\n    <NFTVideo src={metadata.filePath} onClick={onClick} autoPlay={autoPlay} />\n  ) : (\n    <LazyImage\n      src={metadata?.filePath ?? \"\"}\n      showDefault={fileType !== \"image\"}\n      CustomImage={fileType !== \"image\" && !!fileType ? <FileImage fileType={fileType ?? \"\"} /> : null}\n      onClick={onClick}\n      boxSX={{\n        cursor: \"pointer\",\n      }}\n    />\n  );\n}\n","import { Grid, Typography } from \"@mui/material\";\nimport { WRAPPED_ICP_TOKEN_INFO } from \"constants/index\";\nimport WICPCurrencyImage from \"assets/images/wicp_currency.svg\";\nimport { parseTokenAmount, formatAmount } from \"@w2e/utils\";\n\nexport default function WICPPriceFormat({\n  price,\n  color,\n  fontSize,\n  imgSize = \"16px\",\n  fontWeight = 500,\n  align = \"center\",\n  digits = 2,\n  typographyProps,\n}: {\n  color?: string;\n  fontSize?: string;\n  price: bigint | number | undefined | null | string;\n  imgSize?: string;\n  fontWeight?: number;\n  align?: string;\n  digits?: number;\n  typographyProps?: any;\n}) {\n  return (\n    <Grid container alignItems={align}>\n      <img width={imgSize} height={imgSize} src={WICPCurrencyImage} alt=\"\" />\n      <Grid item ml=\"6px\">\n        <Typography\n          color={color ? (color === \"default\" ? \"\" : color) : \"text.primary\"}\n          fontSize={fontSize ?? \"24px\"}\n          component=\"span\"\n          sx={{\n            fontWeight,\n            lineHeight: fontSize ?? \"24px\",\n          }}\n          {...(typographyProps ?? {})}\n        >\n          {formatAmount(parseTokenAmount(price, WRAPPED_ICP_TOKEN_INFO.decimals).toNumber(), digits)}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n","import { useCallback } from \"react\";\nimport { resultFormat, availableArgsNull, isAvailablePageArgs } from \"@w2e/utils\";\nimport { useCallsData } from \"@w2e/hooks\";\nimport { StatusResult1, PaginationResult, getCanisterId, CANISTER_NAMES } from \"constants/index\";\nimport { Principal } from \"@dfinity/principal\";\nimport { TradeOrder, TxRecord, Identity } from \"types\";\nimport type { NFTSaleArgs } from \"@w2e/types\";\nimport { NFTs, AdapterName, NFTsTrade, TradeAdapterName } from \"utils/nft/index\";\nimport { NFTTradeCanister } from \"@w2e/actor\";\n\nexport interface AllowanceArgs {\n  canisterId: string;\n  account: string;\n  spenderCanisterId: string;\n  tokenIdentifier: string;\n}\n\nexport async function allowance({ canisterId, account, spenderCanisterId, tokenIdentifier }: AllowanceArgs) {\n  return (\n    await NFTs.allowance({\n      adapterName: AdapterName.ICPSwap,\n      canisterId,\n      params: {\n        spender: Principal.fromText(spenderCanisterId),\n        token: tokenIdentifier,\n        owner: { address: account },\n      },\n    })\n  ).data;\n}\n\nexport interface ApproveArgs {\n  identity: Identity;\n  canisterId: string;\n  tokenIdentifier: string;\n  account: string;\n}\n\nexport async function approve({ identity, canisterId, tokenIdentifier, account }: ApproveArgs) {\n  const spenderCanisterId = getCanisterId(CANISTER_NAMES.NFTTrade);\n\n  const allowanceBalance = await allowance({ canisterId, tokenIdentifier, spenderCanisterId, account });\n\n  if (allowanceBalance !== BigInt(1)) {\n    await NFTs.approve({\n      canisterId,\n      identity,\n      adapterName: AdapterName.ICPSwap,\n      params: {\n        spender: Principal.fromText(spenderCanisterId),\n        token: tokenIdentifier,\n        subaccount: [],\n        allowance: BigInt(1),\n      },\n    });\n  }\n\n  return true;\n}\n\nexport async function sell(identity: Identity, params: NFTSaleArgs): Promise<StatusResult1<boolean>> {\n  return await NFTsTrade.sale({\n    adapterName: TradeAdapterName.ICPSwap,\n    identity,\n    params,\n  });\n}\n\nexport async function getTradeOrders(\n  canisterId: string | null | undefined,\n  name: string | null,\n  user: string | null,\n  token: number | null,\n  offset: number,\n  limit: number,\n  sort: string,\n  desc = false,\n) {\n  return resultFormat<PaginationResult<TradeOrder>>(\n    await (\n      await NFTTradeCanister()\n    ).findOrderPage(\n      availableArgsNull<string>(canisterId),\n      availableArgsNull<string>(name),\n      availableArgsNull<string>(user),\n      availableArgsNull<number>(token),\n      BigInt(offset),\n      BigInt(limit),\n      sort,\n      desc,\n    ),\n  ).data;\n}\n\nexport function useNFTTradeOrder(\n  canisterId: string | null | undefined,\n  name: string | null,\n  user: string | null,\n  token: number | null,\n  offset: number,\n  limit: number,\n  sort: string,\n  desc = false,\n) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!sort || !isAvailablePageArgs(offset, limit)) return undefined;\n      return await getTradeOrders(canisterId, name, user, token, offset, limit, sort, desc);\n    }, [canisterId, name, offset, limit, sort, desc]),\n  );\n}\n\nexport function useNFTBuyCallback() {\n  return useCallback(async (identity: Identity, canisterId: string, tokenIndex: bigint | string | number) => {\n    return await NFTsTrade.buy({\n      identity,\n      params: { nftCid: canisterId, tokenIndex: Number(tokenIndex) },\n      adapterName: TradeAdapterName.ICPSwap,\n    });\n  }, []);\n}\n\nexport async function cancel(identity: Identity, canisterId: string, tokenIndex: number | bigint) {\n  return await NFTsTrade.revoke({\n    identity,\n    params: { nftCid: canisterId, tokenIndex: Number(tokenIndex) },\n    adapterName: TradeAdapterName.ICPSwap,\n  });\n}\n\nexport function useTradeTxList(\n  canisterId: string | null | undefined,\n  name: string | null | undefined,\n  tokenIndex: number | null,\n  offset: number,\n  limit: number,\n  sort: string,\n  desc: boolean,\n) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!isAvailablePageArgs(offset, limit)) return undefined;\n\n      return resultFormat<PaginationResult<TxRecord>>(\n        await (\n          await NFTTradeCanister()\n        ).findTxPage(\n          availableArgsNull<string>(canisterId),\n          availableArgsNull<string>(name),\n          availableArgsNull<number>(tokenIndex),\n          BigInt(offset),\n          BigInt(limit),\n          sort,\n          desc,\n        ),\n      ).data;\n    }, [canisterId, name, offset, limit, sort]),\n  );\n}\n\nexport function useUserTradeTxList(\n  account: string,\n  canisterId: string | null | undefined,\n  name: string | null,\n  offset: number,\n  limit: number,\n  sort: string,\n  desc: boolean,\n) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!account || !isAvailablePageArgs(offset, limit)) return undefined;\n\n      return resultFormat<PaginationResult<TxRecord>>(\n        await (\n          await NFTTradeCanister()\n        ).findUserTxPage(\n          account,\n          availableArgsNull<string>(canisterId),\n          availableArgsNull<string>(name),\n          BigInt(offset),\n          BigInt(limit),\n          sort,\n          desc,\n        ),\n      ).data;\n    }, [account, canisterId, name, offset, limit, sort]),\n  );\n}\n\nexport function useNFTRecommend(offset: number, limit: number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!isAvailablePageArgs(offset, limit)) return undefined;\n\n      return resultFormat<PaginationResult<TradeOrder>>(\n        await (await NFTTradeCanister()).findRecommend(BigInt(offset), BigInt(limit)),\n      ).data;\n    }, [offset, limit]),\n  );\n}\n\nexport function useNFTOrderInfo(\n  canisterId: string | undefined,\n  tokenIndex: number | bigint | undefined,\n  reload?: boolean,\n) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !tokenIndex) return undefined;\n      return resultFormat<TradeOrder>(await (await NFTTradeCanister()).getOrder(canisterId, Number(tokenIndex))).data;\n    }, [canisterId, tokenIndex]),\n    reload,\n  );\n}\n\nexport async function checkPayment(tx: string) {\n  return resultFormat<boolean>(await (await NFTTradeCanister()).checkPayment(tx));\n}\n","import { useCallback } from \"react\";\nimport { PaginationResult, Identity } from \"types/index\";\nimport type {\n  NFTTokenMetadata,\n  NFTTransaction,\n  NFTCanisterInfo,\n  NFTTransferArgs,\n  NFTControllerArgs,\n  NFTBatchMintArgs,\n  NFTControllerInfo,\n  StatusResult,\n} from \"@w2e/types\";\nimport { OLD_CANISTER_IDS } from \"constants/nft\";\nimport { resultFormat, principalToAccount, isAvailablePageArgs } from \"@w2e/utils\";\nimport { swapNFT, NFTCanisterController, NFTCanister } from \"@w2e/actor\";\nimport { useCallsData } from \"@w2e/hooks\";\nimport { Principal } from \"@dfinity/principal\";\nimport { v2SwapNFT } from \"actor/swapV2\";\n\nexport async function approveForAll(identity: Identity, spenderCanisterId: string) {\n  const spender = principalToAccount(spenderCanisterId);\n  const result = await (await swapNFT(identity)).approveForAll({ spender: { address: spender }, approved: true });\n  return resultFormat(result);\n}\n\nexport async function allowanceAll(account: string, spenderCanisterId: string) {\n  const spender = principalToAccount(spenderCanisterId);\n  return resultFormat<boolean>(await (await swapNFT()).isApproveForAll(account, spender)).data;\n}\n\nexport async function v2ApproveAll(identity: Identity, spenderCanisterId: string) {\n  const spender = principalToAccount(spenderCanisterId);\n  const result = await (await v2SwapNFT(identity)).approveForAll({ spender: { address: spender }, approved: true });\n  return resultFormat(result);\n}\n\nexport async function v2AllowanceAll(account: string, spenderCanisterId: string) {\n  const spender = principalToAccount(spenderCanisterId);\n  return resultFormat<boolean>(await (await v2SwapNFT()).isApproveForAll(account, spender)).data;\n}\n\nexport async function findTokenListByPool(principal: Principal, pool: string, offset: number, limit: number) {\n  return resultFormat<PaginationResult<NFTTokenMetadata>>(\n    await (await swapNFT()).findTokenListByPool(pool, BigInt(offset), BigInt(limit)),\n  ).data;\n}\n\nexport function useUserNFTs(user: Principal | undefined, offset: number, limit: number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!user || !isAvailablePageArgs(offset, limit)) return undefined;\n\n      return resultFormat<PaginationResult<NFTTokenMetadata>>(\n        await (await swapNFT()).findTokenList({ principal: user }, BigInt(offset), BigInt(limit)),\n      ).data;\n    }, [user]),\n  );\n}\n\nexport async function findV2TokenListByPool(\n  account: string,\n  searchCondition: { k: string; v: string }[],\n  offset: number,\n  limit: number,\n) {\n  return resultFormat<PaginationResult<NFTTokenMetadata>>(\n    await (await v2SwapNFT()).findMatchNFTLists({ address: account }, searchCondition, BigInt(offset), BigInt(limit)),\n  ).data;\n}\n\nexport async function getSwapNFTTokenURI(tokenId: bigint | number) {\n  const { data } = resultFormat<string>(await (await swapNFT()).tokenURI(BigInt(tokenId)));\n  return JSON.parse(data ?? \"\") as { image: string; [key: string]: any };\n}\n\nexport function useMintNFTCallback(): (\n  canisterId: string,\n  identity: Identity,\n  params: NFTBatchMintArgs,\n) => Promise<StatusResult<bigint>> {\n  return useCallback(async (canisterId, identity, params) => {\n    if (params.count && BigInt(params.count) > 1) {\n      return resultFormat<bigint>(await (await NFTCanister(canisterId, identity)).mint_batch(params));\n    }\n\n    return resultFormat<bigint>(\n      await (\n        await NFTCanister(canisterId, identity)\n      ).mint({\n        ...params,\n      }),\n    );\n  }, []);\n}\n\nexport function useNFTMetadata(\n  canisterId: string | undefined | null,\n  tokenId: number | bigint | null | undefined,\n  reload?: any,\n) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || (!tokenId && tokenId !== 0)) return undefined;\n      return resultFormat<NFTTokenMetadata>(await (await NFTCanister(canisterId)).icsMetadata(Number(tokenId))).data;\n    }, [tokenId]),\n    reload,\n  );\n}\n\nexport function useNFTTransaction(\n  canisterId: string,\n  tokenIdentifier: string | null | undefined,\n  offset: number,\n  limit: number,\n  reload?: boolean,\n) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !tokenIdentifier || !isAvailablePageArgs(offset, limit)) return undefined;\n      return resultFormat<PaginationResult<NFTTransaction>>(\n        await (await NFTCanister(canisterId)).findTxRecord(tokenIdentifier, BigInt(offset), BigInt(limit)),\n      ).data;\n    }, [canisterId, tokenIdentifier, offset, limit]),\n    reload,\n  );\n}\n\nexport function useUserNFTTransactions(canisterId: string, account: string, offset: number, limit: number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !account || !isAvailablePageArgs(offset, limit)) return undefined;\n\n      return resultFormat<PaginationResult<NFTTransaction>>(\n        await (await NFTCanister(canisterId)).findTokenTxRecord({ address: account }, BigInt(offset), BigInt(limit)),\n      ).data;\n    }, [account, offset, limit]),\n  );\n}\n\nexport function useNFTTransferCallback(): (\n  canisterId: string,\n  identity: Identity,\n  params: NFTTransferArgs,\n) => Promise<StatusResult<boolean>> {\n  return useCallback(\n    async (canisterId, identity, params) =>\n      resultFormat<boolean>(await (await NFTCanister(canisterId, identity)).transfer(params)),\n    [],\n  );\n}\n\nexport function useCanisterCycles(canisterId: string) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId) return undefined;\n      return resultFormat<bigint>(await (await NFTCanister(canisterId)).cycleBalance()).data;\n    }, [canisterId]),\n  );\n}\n\nexport function useCanisterUserNFTCount(canisterId: string, account: string, reload?: boolean | number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !account) return undefined;\n      return resultFormat<bigint>(await (await NFTCanister(canisterId)).ownerNFTCount({ address: account })).data;\n    }, [canisterId, account]),\n    reload,\n  );\n}\n\nexport function useNFTCanisterList(offset: number, limit: number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!isAvailablePageArgs(offset, limit)) return undefined;\n      return resultFormat<PaginationResult<NFTControllerInfo>>(\n        await (await NFTCanisterController()).findCanister(BigInt(offset), BigInt(limit)),\n      ).data;\n    }, [offset, limit]),\n  );\n}\n\nexport function useUserCanisterList(account: string, offset: number, limit: number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!isAvailablePageArgs(offset, limit)) return undefined;\n      return resultFormat<PaginationResult<NFTControllerInfo>>(\n        await (await NFTCanisterController()).findUserCanister(account, BigInt(offset), BigInt(limit)),\n      ).data;\n    }, [offset, limit]),\n  );\n}\n\nexport async function createCanister(values: NFTControllerArgs): Promise<StatusResult<string>> {\n  return resultFormat<string>(await (await NFTCanisterController(true)).create(values));\n}\n\nexport async function setCanisterLogo(canisterId: string, logo: string) {\n  return resultFormat<boolean>(await (await NFTCanister(canisterId, true)).setLogo(logo));\n}\n\nexport async function setCanisterLogoInController(canisterId: string, logo: string) {\n  return resultFormat<boolean>(await (await NFTCanisterController(true)).setLogo(logo, canisterId));\n}\n\nexport function useCanisterMetadata(canisterId: string) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId) return undefined;\n      if (OLD_CANISTER_IDS.includes(canisterId))\n        return resultFormat<NFTControllerInfo>(await (await NFTCanisterController()).canisterInfo(canisterId)).data;\n      return resultFormat<NFTCanisterInfo>(await (await NFTCanister(canisterId)).canisterInfo()).data;\n    }, [canisterId]),\n  );\n}\n\nexport async function getCanisterLogo(canisterId: string) {\n  // The there canisters doesn't has info method in canister\n  if (OLD_CANISTER_IDS.includes(canisterId))\n    return resultFormat<NFTControllerInfo>(await (await NFTCanisterController()).canisterInfo(canisterId)).data?.image;\n  return resultFormat<NFTCanisterInfo>(await (await NFTCanister(canisterId)).canisterInfo()).data?.image;\n}\n\nexport function useCanisterLogo(canisterId: string) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId) return undefined;\n      return await getCanisterLogo(canisterId);\n    }, [canisterId]),\n  );\n}\n\nexport function useCanisterNFTList(canisterId: string, account: string, offset: number, limit: number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !account || !isAvailablePageArgs(offset, limit)) return undefined;\n\n      return resultFormat<PaginationResult<NFTTokenMetadata>>(\n        await (await NFTCanister(canisterId)).findTokenList({ address: account }, BigInt(offset), BigInt(limit)),\n      ).data;\n    }, [canisterId, account, offset, limit]),\n  );\n}\n\nexport function useNFTMintInfo() {\n  return useCallsData(\n    useCallback(async () => {\n      return resultFormat<[bigint, bigint, string, string]>(await (await NFTCanisterController()).feeInfo()).data;\n    }, []),\n  );\n}\n\nexport async function getSwapNFTStat() {\n  return resultFormat<[bigint, bigint]>(await (await swapNFT()).getNftStat()).data;\n}\n","import { useMemo } from \"react\";\nimport type { NFTTokenMetadata } from \"@w2e/types\";\nimport { V3SwapNFTCanisterId } from \"constants/canister\";\nimport v2Ids from \"constants/swap-v2-ids.json\";\nimport { usePositionNFTSvg } from \"hooks/swap/useNFTSvg\";\n\nexport function useIsPositionNFT(data: NFTTokenMetadata): boolean {\n  return data.cId === V3SwapNFTCanisterId;\n}\n\nexport function useIsV2PositionNFT(data: NFTTokenMetadata): boolean {\n  return data.cId === v2Ids.V3SwapNFTCanister.ic;\n}\n\nexport function useNFTSvg(metadata: NFTTokenMetadata) {\n  const isV2PositionNFT = useIsV2PositionNFT(metadata);\n  const isPositionNFT = useIsPositionNFT(metadata);\n\n  const positionNFTSvg = usePositionNFTSvg(\n    isPositionNFT || isV2PositionNFT ? metadata.tokenId : undefined,\n    isV2PositionNFT ? \"v2\" : \"v3\",\n  );\n\n  return useMemo(\n    () => ({\n      positionSVG: positionNFTSvg,\n      isPositionNFT: isPositionNFT || isV2PositionNFT,\n    }),\n    [isPositionNFT, isV2PositionNFT, positionNFTSvg],\n  );\n}\n","import { useEffect, useState, useMemo } from \"react\";\nimport { getSwapNFTTokenURI } from \"@w2e/hooks\";\nimport { getV2SwapNFTTokenURI } from \"hooks/swap/v2/useSwapCalls\";\n\nexport type PositionSVG = {\n  image: string;\n};\n\nexport function usePositionNFTSvg(\n  tokenId: string | number | bigint | undefined,\n  version?: \"v2\" | \"v3\",\n): string | undefined {\n  const [positionSVG, setPositionSVG] = useState<string>(\"\");\n\n  useEffect(() => {\n    (async () => {\n      if (tokenId) {\n        let image = \"\";\n\n        if (version === \"v2\") {\n          image = await getV2SwapNFTTokenURI(BigInt(tokenId));\n        } else {\n          const result = (await getSwapNFTTokenURI(BigInt(tokenId))) as PositionSVG;\n          image = result.image;\n        }\n\n        setPositionSVG(image);\n      }\n    })();\n  }, [tokenId, version]);\n\n  return useMemo(() => positionSVG, [positionSVG]);\n}\n","import { useMemo } from \"react\";\nimport { useNFTMetadata as useNFTMetadataCall } from \"hooks/nft/useNFTCalls\";\nimport type { NFTTokenMetadata } from \"@w2e/types\";\n\nimport { useNFTSvg } from \"./useNFTSvg\";\n\nexport function useNFTMetadata(canisterId: string, tokenId: number | bigint, reload?: boolean): NFTTokenMetadata {\n  const { result } = useNFTMetadataCall(canisterId, tokenId, reload);\n\n  const metadata = result ?? ({} as NFTTokenMetadata);\n\n  const { isPositionNFT, positionSVG } = useNFTSvg(metadata);\n\n  return useMemo(() => {\n    if (isPositionNFT) {\n      return {\n        ...metadata,\n        filePath: positionSVG ?? \"\",\n      };\n    }\n\n    return metadata;\n  }, [positionSVG, metadata, isPositionNFT]);\n}\n\nexport function useNFTByMetadata(metadata: NFTTokenMetadata): NFTTokenMetadata {\n  const { isPositionNFT, positionSVG } = useNFTSvg(metadata);\n\n  return useMemo(() => {\n    if (isPositionNFT) {\n      return {\n        ...metadata,\n        filePath: positionSVG ?? \"\",\n      };\n    }\n    return metadata;\n  }, [isPositionNFT, positionSVG, metadata]);\n}\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport {\n  swapPositionManager,\n  swapPositionManagerV1,\n  swapFactory,\n  swapRouter,\n  swapRecord,\n  swapPool,\n  swapGraphPool,\n} from \"actor/swapV2\";\nimport { resultFormat, isAvailablePageArgs } from \"@w2e/utils\";\nimport { useCallsData } from \"@w2e/hooks\";\nimport { FeeAmount } from \"@w2e/swap-sdk\";\nimport { useStateCallsData } from \"hooks/useCallsData\";\nimport { useAccount } from \"store/global/hooks\";\nimport {\n  PoolInfo,\n  PositionResult,\n  IncreaseLiquidityParams,\n  DecreaseLiquidityParams,\n  IncreaseLiquidityResult,\n  DecreaseLiquidityResult,\n  PoolKey,\n  TVLResult,\n  MintResult,\n  TickLiquidityInfo,\n  SwapRecordInfo,\n  CollectResult,\n  CollectParams,\n  VolumeResult,\n  SwapPoolRecord,\n  QueryPositionResult,\n} from \"types/swapv2\";\nimport { Identity, PaginationResult } from \"types/global\";\nimport { Principal } from \"@dfinity/principal\";\nimport { TOKEN_STANDARD } from \"constants/tokens\";\n\nexport async function getPoolList(): Promise<PoolInfo[]> {\n  return await (await swapFactory()).getPoolList();\n}\n\nexport async function getPoolIds(): Promise<string[]> {\n  return await (await swapFactory()).getPoolIds();\n}\n\nexport async function getPoolTokenStandard(poolId: string, tokenId: string): Promise<TOKEN_STANDARD> {\n  return (await (await swapPool(poolId)).getStandard(tokenId)) as TOKEN_STANDARD;\n}\n\nexport async function getPoolInfoWithNoBalance(poolId: string): Promise<PoolInfo> {\n  return await (await swapPool(poolId)).infoWithNoBalance();\n}\n\nexport function usePoolIds() {\n  const call = useCallback(async () => {\n    return (await getPoolIds()) as string[];\n  }, []);\n\n  return useStateCallsData(call, \"usePoolIds\", true, false, true);\n}\n\nexport function usePoolList() {\n  const { result: poolIds, loading: poolIdsLoading } = usePoolIds();\n\n  const [pools, setPools] = useState<PoolInfo[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const pools: PoolInfo[] = [];\n    let errorNum = 0;\n\n    function trigger() {\n      if (poolIds && pools.length === poolIds.length - errorNum) {\n        setPools(pools);\n        setLoading(false);\n      }\n    }\n\n    const fetch = async (poolId: string) => {\n      const pool = await getPoolInfoWithNoBalance(poolId).catch((err) => {\n        console.error(err);\n        return null;\n      });\n\n      if (!pool) {\n        errorNum++;\n      } else {\n        pools.push(pool);\n      }\n\n      trigger();\n    };\n\n    if (poolIds && poolIds.length > 0) {\n      setLoading(true);\n      for (let i = 0; i < poolIds.length; i++) {\n        fetch(poolIds[i]);\n      }\n    }\n  }, [poolIds]);\n\n  return useMemo(() => ({ loading: poolIdsLoading || loading, pools }), [loading, pools]);\n}\n\nexport function usePosition(positionId: string | number | bigint, invalid?: boolean) {\n  return useCallsData(\n    useCallback(async () => {\n      let result: QueryPositionResult | undefined;\n\n      if (invalid) {\n        result = resultFormat<PositionResult>(\n          await (await swapPositionManager()).invalidPositions(BigInt(positionId)),\n        ).data;\n      } else {\n        result = resultFormat<PositionResult>(await (await swapPositionManager()).positions(BigInt(positionId))).data;\n      }\n\n      return result;\n    }, [positionId]),\n  );\n}\n\nexport async function increaseLiquidity(identity: Identity, params: IncreaseLiquidityParams) {\n  return resultFormat<IncreaseLiquidityResult>(await (await swapPositionManager(identity)).increaseLiquidity(params));\n}\n\nexport async function decreaseLiquidity(identity: Identity, params: DecreaseLiquidityParams) {\n  return resultFormat<DecreaseLiquidityResult>(await (await swapPositionManager(identity)).decreaseLiquidity(params));\n}\n\nexport function useQuoteExactInput(args: string | undefined) {\n  const call = useCallback(async () => {\n    if (!args) return undefined;\n    const { path, amountIn } = JSON.parse(args) as { path: string; amountIn: string };\n    return resultFormat<bigint>(await (await swapRouter()).quoteExactInput(path, amountIn)).data;\n  }, [args]);\n\n  return useStateCallsData(call, \"quoteExactInputV2\", !!args);\n}\n\nexport function useQuoteUnitPrice(path: string | undefined, amountIn: string | number | undefined) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!path || !amountIn || amountIn === \"0\") return undefined;\n      return resultFormat<bigint>(await (await swapRouter()).getUnitPrice(path, String(amountIn))).data;\n    }, [path, amountIn]),\n  );\n}\n\nexport function useQuoteExactOutput(path: string | undefined, amountOut: string | undefined) {\n  const call = useCallback(async () => {\n    if (!path || !amountOut || amountOut === \"0\") return undefined;\n    return resultFormat<bigint>(await (await swapRouter()).quoteExactOutput(path, String(amountOut))).data;\n  }, [path, amountOut]);\n\n  return useStateCallsData(call, \"quoteExactOutputV2\", !!path && !!amountOut);\n}\n\nexport async function exactInputSingle(\n  identity: Identity,\n  path: string,\n  recipient: Principal,\n  deadline: bigint | number,\n  amountIn: string,\n  amountOutMinimum: string,\n) {\n  return resultFormat<bigint>(\n    await (await swapRouter(identity)).exactInput(path, recipient, BigInt(deadline), amountIn, amountOutMinimum),\n  );\n}\n\nexport async function exactOutputSingle(\n  identity: Identity,\n  path: string,\n  recipient: Principal,\n  deadline: bigint | number,\n  amountOut: string,\n  amountInMinimum: string,\n) {\n  return resultFormat<bigint>(\n    await (await swapRouter(identity)).exactOutput(path, recipient, BigInt(deadline), amountOut, amountInMinimum),\n  );\n}\n\nexport function useFeeAmount(feeAmountKeys: (PoolKey | null)[]) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!feeAmountKeys || feeAmountKeys.length === 0 || feeAmountKeys.includes(null)) return undefined;\n      return resultFormat<TVLResult[]>(await (await swapPositionManager()).getPoolTVL(feeAmountKeys as PoolKey[])).data;\n    }, [feeAmountKeys]),\n  );\n}\n\nexport async function mint(\n  identity: Identity,\n  token0: string,\n  token1: string,\n  fee: bigint,\n  tickLower: bigint,\n  tickUpper: bigint,\n  amount0Desired: string,\n  amount1Desired: string,\n  amount0Min: string,\n  amount1Min: string,\n  recipient: Principal,\n  deadline: bigint,\n) {\n  return resultFormat<MintResult>(\n    await (\n      await swapPositionManager(identity)\n    ).mint({\n      token0,\n      token1,\n      fee,\n      tickLower,\n      tickUpper,\n      amount0Desired,\n      amount1Desired,\n      amount0Min,\n      amount1Min,\n      recipient,\n      deadline,\n    }),\n  );\n}\n\nexport function useUserTokens() {\n  const account = useAccount();\n\n  return useCallsData(\n    useCallback(async () => {\n      if (!account) return [];\n      return resultFormat<bigint[]>(await (await swapPositionManager()).ownerTokens(account)).data;\n    }, [account]),\n  );\n}\n\nexport function useUserV1Tokens() {\n  const account = useAccount();\n\n  return useCallsData(\n    useCallback(async () => {\n      if (!account) return [];\n      return resultFormat<bigint[]>(await (await swapPositionManagerV1()).ownerTokens(account)).data;\n    }, [account]),\n  );\n}\n\nexport function useUserInvalidTokens() {\n  const account = useAccount();\n\n  return useCallsData(\n    useCallback(async () => {\n      return resultFormat<bigint[]>(await (await swapPositionManager()).ownerInvalidTokens(account)).data;\n    }, [account]),\n  );\n}\n\nexport async function getPoolCanisterId(token0CanisterId: string, token1CanisterId: string, fee: FeeAmount) {\n  return await (await swapFactory()).getPool(`${token0CanisterId}_${token1CanisterId}_${String(fee)}`);\n}\n\nexport function usePoolCanisterId(\n  token0CanisterId: string | undefined | null,\n  token1CanisterId: string | undefined | null,\n  fee: FeeAmount | undefined | null,\n) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!token0CanisterId || !token1CanisterId || !fee) return undefined;\n      return resultFormat<string>(await getPoolCanisterId(token0CanisterId, token1CanisterId, fee)).data;\n    }, [token0CanisterId, token1CanisterId, fee]),\n  );\n}\n\nexport function useLiquidityTicks(poolId: string | undefined | null) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!poolId) return undefined;\n      return resultFormat<TickLiquidityInfo[]>(await (await swapPool(poolId)).getTickInfos()).data;\n    }, [poolId]),\n  );\n}\n\nexport function useSwapRecord(account: string, offset: number, limit: number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!account || !isAvailablePageArgs(offset, limit)) return undefined;\n      return resultFormat<PaginationResult<SwapRecordInfo>>(\n        await (await swapRecord()).get(account, BigInt(offset), BigInt(limit)),\n      ).data;\n    }, [account, offset, limit]),\n  );\n}\n\nexport function useCollectFeesCall(invalid: boolean) {\n  return useCallback(\n    async (identity: Identity, params: CollectParams) => {\n      if (invalid) {\n        return resultFormat<CollectResult>(\n          await (await swapPositionManager(identity)).collectInInvalidPosition(params),\n        );\n      }\n\n      return resultFormat<CollectResult>(await (await swapPositionManager(identity)).collect(params));\n    },\n    [invalid],\n  );\n}\n\nexport function usePoolTotalVolumeCall(poolKey: string | undefined) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!poolKey) return undefined;\n      return resultFormat<VolumeResult>(await (await swapPositionManager()).getTotalVolume(poolKey)).data;\n    }, [poolKey]),\n  );\n}\n\nexport function usePositionFeesCall(\n  positionId: bigint | string | number | undefined,\n  invalid: boolean,\n  reload?: boolean,\n) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!positionId) return undefined;\n\n      let result: { amount0: bigint; amount1: bigint } | undefined;\n\n      if (invalid) {\n        result = resultFormat<CollectResult>(\n          await (await swapPositionManager()).refreshInvalidIncome(BigInt(positionId)),\n        ).data;\n      } else {\n        result = resultFormat<CollectResult>(\n          await (await swapPositionManager()).refreshIncome(BigInt(positionId)),\n        ).data;\n      }\n\n      return result;\n    }, [positionId, invalid]),\n    reload,\n  );\n}\n\nexport async function getV2SwapNFTTokenURI(tokenId: bigint | number) {\n  const result = resultFormat<string>(await (await swapPositionManager()).tokenURI(BigInt(tokenId))).data;\n  const data = JSON.parse(result ?? '\"\"') as { image: string } | \"\";\n\n  return data ? data.image : \"\";\n}\n\nexport function useFourListedPools() {\n  return useCallsData(\n    useCallback(async () => {\n      return resultFormat<SwapPoolRecord[]>(await (await swapGraphPool()).getAllPools([])).data;\n    }, []),\n  );\n}\n\nexport async function decreaseInvalidLiquidity(identity: Identity, params: DecreaseLiquidityParams) {\n  return resultFormat<DecreaseLiquidityResult>(\n    await (await swapPositionManager(identity)).decreaseLiquidityInInvalidPosition(params),\n  );\n}\n\nexport async function decreaseV1Liquidity(identity: Identity, params: DecreaseLiquidityParams) {\n  return resultFormat<DecreaseLiquidityResult>(await (await swapPositionManagerV1(identity)).decreaseLiquidity(params));\n}\n","export const ICP_ADDRESS_LENGTH = 64;\n\nexport function isValidAccount(address: string): boolean {\n  return (\n    /^[0-9a-fA-F]+$/.test(address) && ICP_ADDRESS_LENGTH === address.length\n  );\n}\n","import dayjs from \"dayjs\";\nimport { SECONDS_IN_DAY } from \"@w2e/constants\";\n\nexport function nanosecond2Millisecond(time: string | number | bigint) {\n  return Number(BigInt(time) / BigInt(1000000));\n}\n\nexport function millisecond2Nanosecond(time: string | number | bigint) {\n  return Number(BigInt(time) * BigInt(1000000));\n}\n\nexport function timestampFormat(timestamp: bigint | string | number, format = \"YYYY-MM-DD HH:mm:ss\"): string {\n  if (!timestamp) return \"\";\n\n  const newTimestamp = Number(String(timestamp).substr(0, 13));\n  return dayjs(newTimestamp).format(format);\n}\n\nexport const secondsToDays = (seconds: number): number => seconds / SECONDS_IN_DAY;\nexport const daysToSeconds = (days: number): number => Math.round(days * SECONDS_IN_DAY);\n"],"names":["DarkIcon","_jsx","width","height","viewBox","fill","xmlns","children","d","fillOpacity","DefaultDarkImage","props","FilledImage","Icon","theme","_ref","Grid","sx","paddingTop","position","container","justifyContent","alignItems","background","top","left","size","_jsxs","cx","cy","r","fillRule","clipRule","LoadingDarkImage","LightIcon","LoadingLightImage","DefaultLightImage","useStyle","makeStyles","image","maxWidth","maxHeight","defaultImage","marginTop","LazyImage","useTheme","classes","imageError","setImageError","useState","imageLoaded","setImageLoaded","useRef","handleLoadImage","e","onLoad","handleImageError","src","onError","animationDuration","disableTransition","onClick","showDefault","boxSX","CustomImage","imageProps","imageTransition","opacity","filterBrightness","filterSaturate","transition","concat","useEffect","img","current","complete","naturalWidth","overflow","Box","display","transform","ref","style","className","alt","customization","mode","ErrorImage","useStyles","wrapper","padding","borderRadius","CanisterIcon","id","x1","y1","x2","y2","gradientUnits","offset","stopColor","FileImage","fileType","Typography","color","fontSize","fontWeight","NFTVideo","autoPlay","loading","setLoading","video","document","getElementById","addEventListener","play","controls","loop","muted","type","NFTAvatar","_metadata$filePath","metadata","cId","filePath","cursor","WICPPriceFormat","price","imgSize","align","digits","typographyProps","WICPCurrencyImage","item","ml","component","lineHeight","formatAmount","parseTokenAmount","WRAPPED_ICP_TOKEN_INFO","decimals","toNumber","async","approve","_ref2","identity","canisterId","tokenIdentifier","account","spenderCanisterId","getCanisterId","CANISTER_NAMES","NFTTrade","allowanceBalance","NFTs","allowance","adapterName","AdapterName","ICPSwap","params","spender","Principal","fromText","token","owner","address","data","BigInt","subaccount","sell","NFTsTrade","sale","TradeAdapterName","getTradeOrders","name","user","limit","sort","desc","arguments","length","undefined","resultFormat","NFTTradeCanister","findOrderPage","availableArgsNull","useNFTBuyCallback","useCallback","tokenIndex","buy","nftCid","Number","cancel","revoke","useTradeTxList","useCallsData","isAvailablePageArgs","findTxPage","useUserTradeTxList","findUserTxPage","useNFTOrderInfo","reload","getOrder","checkPayment","tx","useMintNFTCallback","count","NFTCanister","mint_batch","mint","useNFTMetadata","tokenId","icsMetadata","useNFTTransaction","findTxRecord","useUserNFTTransactions","findTokenTxRecord","useNFTTransferCallback","transfer","useCanisterCycles","cycleBalance","useCanisterUserNFTCount","ownerNFTCount","useNFTCanisterList","NFTCanisterController","findCanister","useUserCanisterList","findUserCanister","createCanister","values","create","setCanisterLogo","logo","setLogo","setCanisterLogoInController","useCanisterMetadata","OLD_CANISTER_IDS","includes","canisterInfo","useCanisterLogo","_resultFormat$data","_resultFormat$data2","getCanisterLogo","useCanisterNFTList","findTokenList","useNFTMintInfo","feeInfo","getSwapNFTStat","swapNFT","getNftStat","useNFTSvg","isV2PositionNFT","v2Ids","isPositionNFT","V3SwapNFTCanisterId","useIsPositionNFT","positionNFTSvg","version","positionSVG","setPositionSVG","getV2SwapNFTTokenURI","getSwapNFTTokenURI","useMemo","usePositionNFTSvg","result","useNFTMetadataCall","useNFTByMetadata","getPoolTokenStandard","poolId","swapPool","getStandard","usePoolIds","call","swapFactory","getPoolIds","useStateCallsData","usePoolList","poolIds","poolIdsLoading","pools","setPools","errorNum","fetch","pool","infoWithNoBalance","getPoolInfoWithNoBalance","catch","err","console","error","push","i","usePosition","positionId","invalid","swapPositionManager","invalidPositions","positions","increaseLiquidity","decreaseLiquidity","token0","token1","fee","tickLower","tickUpper","amount0Desired","amount1Desired","amount0Min","amount1Min","recipient","deadline","useUserTokens","useAccount","ownerTokens","useUserV1Tokens","swapPositionManagerV1","useCollectFeesCall","collectInInvalidPosition","collect","usePositionFeesCall","refreshInvalidIncome","refreshIncome","tokenURI","JSON","parse","useFourListedPools","swapGraphPool","getAllPools","decreaseInvalidLiquidity","decreaseLiquidityInInvalidPosition","decreaseV1Liquidity","ICP_ADDRESS_LENGTH","isValidAccount","test","nanosecond2Millisecond","time","timestampFormat","timestamp","format","newTimestamp","String","substr","dayjs"],"sourceRoot":""}
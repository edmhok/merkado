{"version":3,"file":"static/js/5824.201476b8.chunk.js","mappings":"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","sources":["components/CurrencyAvatar/index.tsx","components/PercentageSlider/index.tsx","../node_modules/.pnpm/@mui+icons-material@5.5.0_@mui+material@5.15.20_@emotion+react@11.11.4_@types+react@17.0.2_re_y34dkmz43sjsezmk4faklzfb6e/node_modules/@mui/icons-material/esm/ArrowBack.js","components/swap/Header.tsx","components/swap/LiquidityInfo.tsx","components/swap/PositionRangeState.tsx","hooks/swap/v2/usePools.ts","hooks/swap/v2/usePositionFees.ts","hooks/swap/v2/useSwapCalls.ts","hooks/useDebouncedChangeHandler.ts","store/swapv2/cache/hooks.ts","store/swapv2/burn/hooks.ts","views/swap-v2/liquidity/DecreaseLiquidity/Unclaimed.tsx","views/swap-v2/liquidity/DecreaseLiquidity/Input.tsx","views/swap-v2/liquidity/DecreaseLiquidity/Confirm.tsx","views/swap-v2/liquidity/DecreaseLiquidity/index.tsx","../node_modules/.pnpm/@mui+icons-material@5.5.0_@mui+material@5.15.20_@emotion+react@11.11.4_@types+react@17.0.2_re_y34dkmz43sjsezmk4faklzfb6e/node_modules/@mui/icons-material/esm/SyncAlt.js","../packages/swap-sdk/src/utils/getPriceOrderingFromPositionForUI.ts","../packages/swap-sdk/src/utils/invert.ts"],"sourcesContent":["import { Avatar } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Token } from \"@w2e/swap-sdk\";\n\nconst useStyles = ({ borderColor, size }: { borderColor: string; size?: string | undefined }) =>\n  makeStyles(() => {\n    return {\n      avatar: {\n        width: size || \"24px\",\n        height: size || \"24px\",\n        border: `1px solid ${borderColor}`,\n      },\n    };\n  });\n\nexport interface CurrencyAvatarProps {\n  currency: Token | undefined | null;\n  borderColor?: string;\n  bgColor?: string;\n  className?: string;\n  size?: string;\n}\n\nexport default function CurrencyAvatar({\n  currency,\n  borderColor = \"#ffffff\",\n  bgColor = \"#97a4ef\",\n  className,\n  size,\n}: CurrencyAvatarProps) {\n  const classes = useStyles({ borderColor, size })();\n\n  return (\n    <Avatar className={`${classes.avatar} ${className || \"\"}`} sx={{ bgcolor: bgColor }} src={currency?.logo}>\n      &nbsp;\n    </Avatar>\n  );\n}\n","import { Slider, Tooltip, tooltipClasses, SliderProps } from \"@mui/material\";\nimport { styled, makeStyles } from \"@mui/styles\";\nimport { isDarkTheme } from \"utils\";\nimport { Theme } from \"@mui/material/styles\";\n\nconst marks = [{ value: 0 }, { value: 25 }, { value: 50 }, { value: 75 }, { value: 100 }];\n\nconst useStyle = makeStyles((theme: Theme) => {\n  return {\n    root: {\n      color: theme.colors.secondaryMain,\n      \"& .MuiSlider-rail\": {\n        height: \"4px\",\n        backgroundColor: isDarkTheme(theme) ? theme.palette.background.level4 : \"#fff\",\n      },\n      \"& .MuiSlider-thumb\": {\n        // marginLeft: \"0px\",\n        width: \"16px\",\n        height: \"16px\",\n        border: \"2px solid #fff\",\n        marginLeft: \"5px\",\n      },\n      \"& .MuiSlider-mark\": {\n        width: \"12px\",\n        height: \"12px\",\n        borderRadius: \"50%\",\n        backgroundColor: theme.palette.background.level4,\n        top: \"50%\",\n        transform: \"translate(0, -50%)\",\n        opacity: 1,\n        \"&.MuiSlider-markActive\": {\n          backgroundColor: theme.colors.secondaryMain,\n        },\n      },\n    },\n    tooltip: {},\n  };\n});\n\nconst LightTooltip = styled(({ className, ...props }) => <Tooltip {...props} classes={{ popper: className }} />)(\n  ({ theme }: { theme: Theme }) => ({\n    [`& .${tooltipClasses.tooltip}`]: {\n      backgroundColor: theme.colors.secondaryMain,\n      color: \"#fff\",\n      fontWeight: 700,\n    },\n    \"& .MuiTooltip-arrow\": {\n      color: theme.colors.secondaryMain,\n    },\n  }),\n);\n\nconst ValueLabelComponent = (props: { children: React.ReactChild; value: string | number }) => {\n  const { children, value } = props;\n  const classes = useStyle();\n\n  return (\n    <LightTooltip placement=\"top\" arrow title={`${value}%`} className={classes.tooltip}>\n      {children}\n    </LightTooltip>\n  );\n};\n\nexport default function PercentageSlider(props: SliderProps) {\n  const classes = useStyle();\n\n  return (\n    <Slider\n      {...props}\n      className={classes.root}\n      marks={marks}\n      valueLabelDisplay=\"auto\"\n      components={{\n        ValueLabel: ValueLabelComponent,\n      }}\n    />\n  );\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');","import React, { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Grid, Typography } from \"@mui/material\";\nimport { ArrowBack as ArrowBackIcon } from \"@mui/icons-material\";\n// import SwapSettingIcon from \"components/swap/SettingIcon\";\n\nexport interface HeaderTabProps {\n  showArrow?: boolean;\n  showUserSetting?: boolean;\n  title: React.ReactChild;\n  slippageType?: string;\n  onBack?: () => void;\n}\n\nexport default function SwapHeader({ showArrow = false, title, onBack }: HeaderTabProps) {\n  const history = useHistory();\n\n  const handleBack = useCallback(() => {\n    if (onBack) {\n      onBack();\n    } else {\n      history.goBack();\n    }\n  }, [history, onBack]);\n\n  return (\n    <Grid container>\n      <Grid item xs={2} container justifyContent=\"flex-start\">\n        {showArrow && <ArrowBackIcon sx={{ cursor: \"pointer\" }} onClick={handleBack} />}\n      </Grid>\n      <Grid item xs container justifyContent=\"center\">\n        <Typography color=\"textPrimary\" variant=\"h3\">\n          {title}\n        </Typography>\n      </Grid>\n      <Grid\n        item\n        xs={2}\n        container\n        justifyContent=\"flex-start\"\n        sx={{\n          position: \"relative\",\n        }}\n      >\n        {/* {showUserSetting && <SwapSettingIcon type={slippageType} />} */}\n      </Grid>\n    </Grid>\n  );\n}\n","import { useState, useMemo } from \"react\";\nimport { Typography, Grid, Box } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { formatTickPrice } from \"utils/swap/formatTickPrice\";\nimport useIsTickAtLimit from \"hooks/swap/useIsTickAtLimit\";\nimport { Bound } from \"constants/swap\";\nimport { Position, getPriceOrderingFromPositionForUI, useInverter } from \"@w2e/swap-sdk\";\nimport { SyncAlt as SyncAltIcon } from \"@mui/icons-material\";\nimport { Trans } from \"@lingui/macro\";\nimport { Theme, createTheme } from \"@mui/material/styles\";\nimport { TokenImage } from \"components/Image/Token\";\nimport PositionRangeState from \"./PositionRangeState\";\n\nexport const customizeTheme = createTheme({\n  breakpoints: {\n    values: {\n      sm: 680,\n    },\n  },\n});\n\nconst useStyle = makeStyles((theme: Theme) => ({\n  NFTBox: {\n    marginRight: \"12px\",\n    borderRadius: \"12px\",\n    background: theme.palette.background.level2,\n    width: \"300px\",\n    height: \"332px\",\n\n    [customizeTheme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      height: \"332px\",\n      marginBottom: \"20px\",\n      marginRight: \"0px\",\n    },\n  },\n  NFTWrapper: {\n    width: \"300px\",\n    height: \"300px\",\n    position: \"relative\",\n  },\n  currentPrice: {\n    height: \"52px\",\n    borderRadius: \"12px\",\n    border: `1px solid ${theme.palette.background.level3}`,\n    background: theme.palette.background.level2,\n    padding: \"0 20px\",\n  },\n  rangeBox: {\n    height: \"112px\",\n    borderRadius: \"12px\",\n    border: `1px solid ${theme.palette.background.level3}`,\n    background: theme.palette.background.level2,\n  },\n}));\n\nexport interface LiquidityInfoProps {\n  position: Position | undefined;\n  positionId: string | number | bigint | undefined;\n  version?: \"v2\" | \"v3\";\n}\n\nfunction hasLiquidity(position: Position | undefined) {\n  return position?.liquidity?.toString() !== \"0\";\n}\n\nexport default function LiquidityInfo({ position }: LiquidityInfoProps) {\n  const classes = useStyle();\n\n  const { pool, tickLower, tickUpper } = position || {};\n  const { token0, token1, fee: feeAmount } = pool || {};\n\n  const pricesFromPosition = getPriceOrderingFromPositionForUI(position);\n  const [manuallyInverted, setManuallyInverted] = useState(false);\n\n  const { priceLower, priceUpper, base } = useInverter({\n    priceLower: pricesFromPosition.priceLower,\n    priceUpper: pricesFromPosition.priceUpper,\n    quote: pricesFromPosition.quote,\n    base: pricesFromPosition.base,\n    invert: manuallyInverted,\n  });\n\n  const inverted = token1 ? base?.equals(token1) : undefined;\n\n  const currencyQuote = inverted ? token0 : token1;\n  const currencyBase = inverted ? token1 : token0;\n\n  const _tickAtLimit = useIsTickAtLimit(feeAmount, tickLower, tickUpper);\n\n  const tickAtLimit = useMemo(() => {\n    if (!inverted) return _tickAtLimit;\n\n    return {\n      [Bound.LOWER]: _tickAtLimit[Bound.UPPER] ? true : undefined,\n      [Bound.UPPER]: _tickAtLimit[Bound.LOWER] ? true : undefined,\n    };\n  }, [_tickAtLimit, inverted]);\n\n  const pairName = useMemo(() => {\n    return !!currencyQuote && !!currencyBase ? `${currencyQuote?.symbol} per ${currencyBase?.symbol}` : \"--\";\n  }, [currencyQuote, currencyBase]);\n\n  const outOfRange =\n    pool && (tickUpper || tickUpper === 0) && (tickLower || tickLower === 0)\n      ? pool.tickCurrent < tickLower || pool.tickCurrent >= tickUpper\n      : false;\n\n  const closed = !hasLiquidity(position);\n\n  return (\n    <Grid container flexDirection=\"column\">\n      <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n        <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n          <TokenImage logo={token0?.logo} tokenId={token0?.address} />\n          <Box sx={{ width: \"32px\", height: \"32px\", position: \"relative\", left: \"-10px\" }}>\n            <TokenImage logo={token1?.logo} tokenId={token1?.address} />\n          </Box>\n\n          <Typography\n            sx={{\n              fontSize: \"28px\",\n              color: \"#fff\",\n              fontWeight: 500,\n              \"@media(max-width: 640px)\": {\n                fontSize: \"18px\",\n              },\n            }}\n          >\n            {token0?.symbol}\n          </Typography>\n          <Typography\n            sx={{\n              fontSize: \"24px\",\n              color: \"#fff\",\n              fontWeight: 500,\n              margin: \"0 10px\",\n              \"@media(max-width: 640px)\": {\n                fontSize: \"16px\",\n              },\n            }}\n          >\n            /\n          </Typography>\n          <Typography\n            sx={{\n              fontSize: \"28px\",\n              color: \"#fff\",\n              fontWeight: 500,\n              \"@media(max-width: 640px)\": {\n                fontSize: \"18px\",\n              },\n            }}\n          >\n            {token1?.symbol}\n          </Typography>\n        </Box>\n\n        <PositionRangeState outOfRange={outOfRange} closed={closed} />\n      </Grid>\n\n      <Grid item xs sx={{ margin: \"24px 0 0 0\" }}>\n        <Grid container alignItems=\"center\" className={classes.currentPrice}>\n          <Typography color=\"text.primary\">\n            <Trans>Current Price</Trans>\n          </Typography>\n          <Grid item xs>\n            <Grid container alignItems=\"center\" justifyContent=\"flex-end\">\n              <Typography\n                fontWeight=\"500\"\n                color=\"text.primary\"\n                sx={{ maxWidth: \"190px\", whiteSpace: \"nowrap\", textOverflow: \"ellipsis\", overflow: \"hidden\" }}\n              >\n                {!!token1 && !!token0\n                  ? inverted\n                    ? pool?.priceOf(token1)\n                      ? `${pool?.priceOf(token1).toSignificant(6)}`\n                      : \"--\"\n                    : pool?.priceOf(token0)\n                      ? `${pool?.priceOf(token0).toSignificant(6)}`\n                      : \"--\"\n                  : \"--\"}\n              </Typography>\n              <SyncAltIcon\n                sx={{ fontSize: \"1rem\", marginLeft: \"6px\", cursor: \"pointer\" }}\n                onClick={() => setManuallyInverted(!manuallyInverted)}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Box mt=\"20px\">\n          <Grid container alignItems=\"center\">\n            <Grid item xs>\n              <Typography color=\"text.primary\" fontWeight=\"700\">\n                Price Range\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <Box sx={{ display: \"flex\", gap: \"0 24px\" }}>\n            <Grid container justifyContent=\"center\" alignItems=\"center\" mt=\"10px\" className={classes.rangeBox}>\n              <Box>\n                <Grid container justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\n                  <Typography fontSize=\"12px\" fontWeight=\"500\">\n                    Min Price\n                  </Typography>\n                  <Typography fontSize=\"20px\" fontWeight=\"700\" color=\"text.primary\" sx={{ margin: \"6px 0\" }}>\n                    {formatTickPrice(priceLower, tickAtLimit, Bound.LOWER)}\n                  </Typography>\n                  <Typography fontSize=\"12px\" fontWeight=\"500\">\n                    {pairName}\n                  </Typography>\n                </Grid>\n              </Box>\n            </Grid>\n\n            <Grid container justifyContent=\"center\" alignItems=\"center\" mt=\"8px\" className={classes.rangeBox}>\n              <Box>\n                <Grid container justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\n                  <Typography fontSize=\"12px\" fontWeight=\"500\">\n                    Max Price\n                  </Typography>\n                  <Typography fontSize=\"20px\" fontWeight=\"700\" color=\"text.primary\" sx={{ margin: \"6px 0\" }}>\n                    {formatTickPrice(priceUpper, tickAtLimit, Bound.UPPER)}\n                  </Typography>\n                  <Typography fontSize=\"12px\" fontWeight=\"500\">\n                    {pairName}\n                  </Typography>\n                </Grid>\n              </Box>\n            </Grid>\n          </Box>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n","import { Box, Typography, SvgIcon } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Trans } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\n\nconst useStyle = makeStyles((theme: Theme) => {\n  return {\n    wrapper: {\n      display: \"flex\",\n      alignItems: \"center\",\n      height: \"24px\",\n      padding: \"0 9px\",\n      borderRadius: \"8px\",\n\n      \"& .MuiTypography-root\": {\n        fontSize: \"12px\",\n        fontWeight: 500,\n      },\n\n      \"&.inRange\": {\n        background: theme.colors.darkPrimary400,\n      },\n\n      \"&.closed\": {\n        background: theme.colors.darkPrimary400,\n      },\n\n      \"&.outOfRange\": {\n        background: \"#FFC107\",\n        \"& .MuiTypography-root\": {\n          color: theme.colors.darkLevel1,\n          marginLeft: \"3px\",\n        },\n      },\n    },\n  };\n});\n\nfunction Marker(props: any) {\n  return (\n    <SvgIcon width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" {...props}>\n      <path\n        d=\"M5.5 3.5H6.5V4.5H5.5V3.5ZM5.5 5.5H6.5V8.5H5.5V5.5ZM6 1C3.24 1 1 3.24 1 6C1 8.76 3.24 11 6 11C8.76 11 11 8.76 11 6C11 3.24 8.76 1 6 1ZM6 10C3.795 10 2 8.205 2 6C2 3.795 3.795 2 6 2C8.205 2 10 3.795 10 6C10 8.205 8.205 10 6 10Z\"\n        fill={props.color ? props.color : \"#111936\"}\n      />\n    </SvgIcon>\n  );\n}\n\nfunction Closed() {\n  const classes = useStyle();\n\n  return (\n    <Box component=\"span\" className={`${classes.wrapper} closed`}>\n      <Marker fontSize=\"12px\" color=\"#fff\" />\n\n      <Typography color=\"#ffffff\" sx={{ marginLeft: \"3px\" }}>\n        <Trans>Closed</Trans>\n      </Typography>\n    </Box>\n  );\n}\n\nfunction OutOfRange() {\n  const classes = useStyle();\n\n  return (\n    <Box className={`${classes.wrapper} outOfRange`}>\n      <Marker fontSize=\"12px\" />\n\n      <Typography>\n        <Trans>Out of range</Trans>\n      </Typography>\n    </Box>\n  );\n}\n\nfunction InRange() {\n  const classes = useStyle();\n\n  return (\n    <Box className={`${classes.wrapper} inRange`}>\n      <Box\n        component=\"span\"\n        sx={{ background: \"#54C081\", width: \"8px\", height: \"8px\", borderRadius: \"50%\", marginRight: \"8px\" }}\n      />\n      <Typography color=\"#ffffff\">\n        <Trans>In range</Trans>\n      </Typography>\n    </Box>\n  );\n}\n\nexport interface PositionRangeStateProps {\n  outOfRange?: boolean | undefined;\n  closed?: boolean | undefined;\n}\n\nexport default function PositionRangeState({ outOfRange, closed }: PositionRangeStateProps) {\n  return closed ? <Closed /> : outOfRange ? <OutOfRange /> : <InRange />;\n}\n","import { Pool, Token, FeeAmount } from \"@w2e/swap-sdk\";\nimport { numberToString } from \"@w2e/utils\";\nimport { useMemo, useEffect, useState } from \"react\";\nimport { swapFactory, swapFactoryV1, swapPool } from \"actor/swapV2\";\nimport { SwapPoolInfo, TickLiquidityInfo } from \"types/swapv2\";\n\nexport enum PoolState {\n  LOADING = \"LOADING\",\n  NOT_EXISTS = \"NOT_EXISTS\",\n  EXISTS = \"EXISTS\",\n  INVALID = \"INVALID\",\n}\n\ntype TypePoolsState = {\n  address: string;\n  info: SwapPoolInfo | null;\n  ticks: TickLiquidityInfo[];\n};\n\nexport function usePools(\n  poolKeys: [Token | undefined, Token | undefined, FeeAmount | undefined][],\n  version?: \"v2\" | \"v1\",\n): [PoolState, Pool | null][] {\n  const [pools, setPools] = useState<TypePoolsState[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  const transformedPoolKeys = useMemo(() => {\n    return poolKeys.map(([currencyA, currencyB, feeAmount]) => {\n      if (!currencyA || !currencyB || !feeAmount) return null;\n\n      const tokenA = currencyA?.wrapped;\n      const tokenB = currencyB?.wrapped;\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return null;\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA];\n\n      return `${token0.address}_${token1.address}_${feeAmount}`;\n    });\n  }, [poolKeys]);\n\n  useEffect(() => {\n    if (transformedPoolKeys && transformedPoolKeys.length && !transformedPoolKeys.includes(null)) {\n      setLoading(true);\n\n      Promise.all<TypePoolsState | undefined>(\n        transformedPoolKeys.map(async (key) => {\n          if (!key) return undefined;\n\n          let poolAddress = \"\";\n\n          if (version === \"v1\") {\n            poolAddress = (await (await swapFactoryV1()).getPool(key)) as string;\n          } else {\n            poolAddress = (await (await swapFactory()).getPool(key)) as string;\n          }\n\n          let poolInfo: SwapPoolInfo | null = null;\n          const ticks: TickLiquidityInfo[] = [];\n\n          if (poolAddress) {\n            poolInfo = await (await swapPool(poolAddress)).infoWithNoBalance();\n          }\n\n          return {\n            address: poolAddress,\n            info: poolInfo,\n            ticks,\n          };\n        }),\n      ).then((result) => {\n        setPools(result.filter((e) => !!e) as TypePoolsState[]);\n        setLoading(false);\n      });\n    }\n  }, [transformedPoolKeys]);\n\n  return useMemo(() => {\n    return transformedPoolKeys.map((poolKey, index) => {\n      if (!poolKey) return [PoolState.INVALID, null];\n      if (loading) return [PoolState.LOADING, null];\n\n      const _pool: TypePoolsState | undefined = pools[index];\n      const { info: pool, address: poolAddress } = _pool ?? ({} as TypePoolsState);\n\n      if (!pool || !pool?.token0 || !pool?.token1 || !pool?.fee) return [PoolState.NOT_EXISTS, null];\n\n      try {\n        const { fee, sqrtRatioX96, liquidity, tickCurrent } = pool;\n        const [token0, token1] = poolKeys[index];\n\n        if (!token0 || !token1) return [PoolState.NOT_EXISTS, null];\n\n        return [\n          PoolState.EXISTS,\n          new Pool(\n            poolAddress,\n            token0.wrapped,\n            token1.wrapped,\n            Number(fee),\n            numberToString(sqrtRatioX96),\n            numberToString(liquidity),\n            Number(tickCurrent),\n          ),\n        ];\n      } catch (error) {\n        console.error(\"Error when constructing the pool\", error);\n        return [PoolState.NOT_EXISTS, null];\n      }\n    });\n  }, [pools, loading, poolKeys, transformedPoolKeys]);\n}\n\nexport function usePool(currencyA: Token | undefined, currencyB: Token | undefined, feeAmount: FeeAmount | undefined) {\n  const poolKeys: [Token | undefined, Token | undefined, FeeAmount | undefined][] = useMemo(\n    () => [[currencyA, currencyB, feeAmount]],\n    [currencyA, currencyB, feeAmount],\n  );\n\n  return usePools(poolKeys)[0];\n}\n\nexport function usePoolV1(\n  currencyA: Token | undefined,\n  currencyB: Token | undefined,\n  feeAmount: FeeAmount | undefined,\n) {\n  const poolKeys: [Token | undefined, Token | undefined, FeeAmount | undefined][] = useMemo(\n    () => [[currencyA, currencyB, feeAmount]],\n    [currencyA, currencyB, feeAmount],\n  );\n\n  return usePools(poolKeys, \"v1\")[0];\n}\n","import { useMemo } from \"react\";\nimport { usePositionFeesCall } from \"hooks/swap/v2/useSwapCalls\";\n\nexport function usePositionFees(positionId: bigint | string | number | undefined, invalid: boolean, reload?: boolean) {\n  const { result } = usePositionFeesCall(positionId, invalid, reload);\n\n  return useMemo(() => {\n    if (!result)\n      return {\n        amount0: undefined,\n        amount1: undefined,\n      };\n\n    return {\n      amount0: result.amount0,\n      amount1: result.amount1,\n    };\n  }, [result]);\n}\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport {\n  swapPositionManager,\n  swapPositionManagerV1,\n  swapFactory,\n  swapRouter,\n  swapRecord,\n  swapPool,\n  swapGraphPool,\n} from \"actor/swapV2\";\nimport { resultFormat, isAvailablePageArgs } from \"@w2e/utils\";\nimport { useCallsData } from \"@w2e/hooks\";\nimport { FeeAmount } from \"@w2e/swap-sdk\";\nimport { useStateCallsData } from \"hooks/useCallsData\";\nimport { useAccount } from \"store/global/hooks\";\nimport {\n  PoolInfo,\n  PositionResult,\n  IncreaseLiquidityParams,\n  DecreaseLiquidityParams,\n  IncreaseLiquidityResult,\n  DecreaseLiquidityResult,\n  PoolKey,\n  TVLResult,\n  MintResult,\n  TickLiquidityInfo,\n  SwapRecordInfo,\n  CollectResult,\n  CollectParams,\n  VolumeResult,\n  SwapPoolRecord,\n  QueryPositionResult,\n} from \"types/swapv2\";\nimport { Identity, PaginationResult } from \"types/global\";\nimport { Principal } from \"@dfinity/principal\";\nimport { TOKEN_STANDARD } from \"constants/tokens\";\n\nexport async function getPoolList(): Promise<PoolInfo[]> {\n  return await (await swapFactory()).getPoolList();\n}\n\nexport async function getPoolIds(): Promise<string[]> {\n  return await (await swapFactory()).getPoolIds();\n}\n\nexport async function getPoolTokenStandard(poolId: string, tokenId: string): Promise<TOKEN_STANDARD> {\n  return (await (await swapPool(poolId)).getStandard(tokenId)) as TOKEN_STANDARD;\n}\n\nexport async function getPoolInfoWithNoBalance(poolId: string): Promise<PoolInfo> {\n  return await (await swapPool(poolId)).infoWithNoBalance();\n}\n\nexport function usePoolIds() {\n  const call = useCallback(async () => {\n    return (await getPoolIds()) as string[];\n  }, []);\n\n  return useStateCallsData(call, \"usePoolIds\", true, false, true);\n}\n\nexport function usePoolList() {\n  const { result: poolIds, loading: poolIdsLoading } = usePoolIds();\n\n  const [pools, setPools] = useState<PoolInfo[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const pools: PoolInfo[] = [];\n    let errorNum = 0;\n\n    function trigger() {\n      if (poolIds && pools.length === poolIds.length - errorNum) {\n        setPools(pools);\n        setLoading(false);\n      }\n    }\n\n    const fetch = async (poolId: string) => {\n      const pool = await getPoolInfoWithNoBalance(poolId).catch((err) => {\n        console.error(err);\n        return null;\n      });\n\n      if (!pool) {\n        errorNum++;\n      } else {\n        pools.push(pool);\n      }\n\n      trigger();\n    };\n\n    if (poolIds && poolIds.length > 0) {\n      setLoading(true);\n      for (let i = 0; i < poolIds.length; i++) {\n        fetch(poolIds[i]);\n      }\n    }\n  }, [poolIds]);\n\n  return useMemo(() => ({ loading: poolIdsLoading || loading, pools }), [loading, pools]);\n}\n\nexport function usePosition(positionId: string | number | bigint, invalid?: boolean) {\n  return useCallsData(\n    useCallback(async () => {\n      let result: QueryPositionResult | undefined;\n\n      if (invalid) {\n        result = resultFormat<PositionResult>(\n          await (await swapPositionManager()).invalidPositions(BigInt(positionId)),\n        ).data;\n      } else {\n        result = resultFormat<PositionResult>(await (await swapPositionManager()).positions(BigInt(positionId))).data;\n      }\n\n      return result;\n    }, [positionId]),\n  );\n}\n\nexport async function increaseLiquidity(identity: Identity, params: IncreaseLiquidityParams) {\n  return resultFormat<IncreaseLiquidityResult>(await (await swapPositionManager(identity)).increaseLiquidity(params));\n}\n\nexport async function decreaseLiquidity(identity: Identity, params: DecreaseLiquidityParams) {\n  return resultFormat<DecreaseLiquidityResult>(await (await swapPositionManager(identity)).decreaseLiquidity(params));\n}\n\nexport function useQuoteExactInput(args: string | undefined) {\n  const call = useCallback(async () => {\n    if (!args) return undefined;\n    const { path, amountIn } = JSON.parse(args) as { path: string; amountIn: string };\n    return resultFormat<bigint>(await (await swapRouter()).quoteExactInput(path, amountIn)).data;\n  }, [args]);\n\n  return useStateCallsData(call, \"quoteExactInputV2\", !!args);\n}\n\nexport function useQuoteUnitPrice(path: string | undefined, amountIn: string | number | undefined) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!path || !amountIn || amountIn === \"0\") return undefined;\n      return resultFormat<bigint>(await (await swapRouter()).getUnitPrice(path, String(amountIn))).data;\n    }, [path, amountIn]),\n  );\n}\n\nexport function useQuoteExactOutput(path: string | undefined, amountOut: string | undefined) {\n  const call = useCallback(async () => {\n    if (!path || !amountOut || amountOut === \"0\") return undefined;\n    return resultFormat<bigint>(await (await swapRouter()).quoteExactOutput(path, String(amountOut))).data;\n  }, [path, amountOut]);\n\n  return useStateCallsData(call, \"quoteExactOutputV2\", !!path && !!amountOut);\n}\n\nexport async function exactInputSingle(\n  identity: Identity,\n  path: string,\n  recipient: Principal,\n  deadline: bigint | number,\n  amountIn: string,\n  amountOutMinimum: string,\n) {\n  return resultFormat<bigint>(\n    await (await swapRouter(identity)).exactInput(path, recipient, BigInt(deadline), amountIn, amountOutMinimum),\n  );\n}\n\nexport async function exactOutputSingle(\n  identity: Identity,\n  path: string,\n  recipient: Principal,\n  deadline: bigint | number,\n  amountOut: string,\n  amountInMinimum: string,\n) {\n  return resultFormat<bigint>(\n    await (await swapRouter(identity)).exactOutput(path, recipient, BigInt(deadline), amountOut, amountInMinimum),\n  );\n}\n\nexport function useFeeAmount(feeAmountKeys: (PoolKey | null)[]) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!feeAmountKeys || feeAmountKeys.length === 0 || feeAmountKeys.includes(null)) return undefined;\n      return resultFormat<TVLResult[]>(await (await swapPositionManager()).getPoolTVL(feeAmountKeys as PoolKey[])).data;\n    }, [feeAmountKeys]),\n  );\n}\n\nexport async function mint(\n  identity: Identity,\n  token0: string,\n  token1: string,\n  fee: bigint,\n  tickLower: bigint,\n  tickUpper: bigint,\n  amount0Desired: string,\n  amount1Desired: string,\n  amount0Min: string,\n  amount1Min: string,\n  recipient: Principal,\n  deadline: bigint,\n) {\n  return resultFormat<MintResult>(\n    await (\n      await swapPositionManager(identity)\n    ).mint({\n      token0,\n      token1,\n      fee,\n      tickLower,\n      tickUpper,\n      amount0Desired,\n      amount1Desired,\n      amount0Min,\n      amount1Min,\n      recipient,\n      deadline,\n    }),\n  );\n}\n\nexport function useUserTokens() {\n  const account = useAccount();\n\n  return useCallsData(\n    useCallback(async () => {\n      if (!account) return [];\n      return resultFormat<bigint[]>(await (await swapPositionManager()).ownerTokens(account)).data;\n    }, [account]),\n  );\n}\n\nexport function useUserV1Tokens() {\n  const account = useAccount();\n\n  return useCallsData(\n    useCallback(async () => {\n      if (!account) return [];\n      return resultFormat<bigint[]>(await (await swapPositionManagerV1()).ownerTokens(account)).data;\n    }, [account]),\n  );\n}\n\nexport function useUserInvalidTokens() {\n  const account = useAccount();\n\n  return useCallsData(\n    useCallback(async () => {\n      return resultFormat<bigint[]>(await (await swapPositionManager()).ownerInvalidTokens(account)).data;\n    }, [account]),\n  );\n}\n\nexport async function getPoolCanisterId(token0CanisterId: string, token1CanisterId: string, fee: FeeAmount) {\n  return await (await swapFactory()).getPool(`${token0CanisterId}_${token1CanisterId}_${String(fee)}`);\n}\n\nexport function usePoolCanisterId(\n  token0CanisterId: string | undefined | null,\n  token1CanisterId: string | undefined | null,\n  fee: FeeAmount | undefined | null,\n) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!token0CanisterId || !token1CanisterId || !fee) return undefined;\n      return resultFormat<string>(await getPoolCanisterId(token0CanisterId, token1CanisterId, fee)).data;\n    }, [token0CanisterId, token1CanisterId, fee]),\n  );\n}\n\nexport function useLiquidityTicks(poolId: string | undefined | null) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!poolId) return undefined;\n      return resultFormat<TickLiquidityInfo[]>(await (await swapPool(poolId)).getTickInfos()).data;\n    }, [poolId]),\n  );\n}\n\nexport function useSwapRecord(account: string, offset: number, limit: number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!account || !isAvailablePageArgs(offset, limit)) return undefined;\n      return resultFormat<PaginationResult<SwapRecordInfo>>(\n        await (await swapRecord()).get(account, BigInt(offset), BigInt(limit)),\n      ).data;\n    }, [account, offset, limit]),\n  );\n}\n\nexport function useCollectFeesCall(invalid: boolean) {\n  return useCallback(\n    async (identity: Identity, params: CollectParams) => {\n      if (invalid) {\n        return resultFormat<CollectResult>(\n          await (await swapPositionManager(identity)).collectInInvalidPosition(params),\n        );\n      }\n\n      return resultFormat<CollectResult>(await (await swapPositionManager(identity)).collect(params));\n    },\n    [invalid],\n  );\n}\n\nexport function usePoolTotalVolumeCall(poolKey: string | undefined) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!poolKey) return undefined;\n      return resultFormat<VolumeResult>(await (await swapPositionManager()).getTotalVolume(poolKey)).data;\n    }, [poolKey]),\n  );\n}\n\nexport function usePositionFeesCall(\n  positionId: bigint | string | number | undefined,\n  invalid: boolean,\n  reload?: boolean,\n) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!positionId) return undefined;\n\n      let result: { amount0: bigint; amount1: bigint } | undefined;\n\n      if (invalid) {\n        result = resultFormat<CollectResult>(\n          await (await swapPositionManager()).refreshInvalidIncome(BigInt(positionId)),\n        ).data;\n      } else {\n        result = resultFormat<CollectResult>(\n          await (await swapPositionManager()).refreshIncome(BigInt(positionId)),\n        ).data;\n      }\n\n      return result;\n    }, [positionId, invalid]),\n    reload,\n  );\n}\n\nexport async function getV2SwapNFTTokenURI(tokenId: bigint | number) {\n  const result = resultFormat<string>(await (await swapPositionManager()).tokenURI(BigInt(tokenId))).data;\n  const data = JSON.parse(result ?? '\"\"') as { image: string } | \"\";\n\n  return data ? data.image : \"\";\n}\n\nexport function useFourListedPools() {\n  return useCallsData(\n    useCallback(async () => {\n      return resultFormat<SwapPoolRecord[]>(await (await swapGraphPool()).getAllPools([])).data;\n    }, []),\n  );\n}\n\nexport async function decreaseInvalidLiquidity(identity: Identity, params: DecreaseLiquidityParams) {\n  return resultFormat<DecreaseLiquidityResult>(\n    await (await swapPositionManager(identity)).decreaseLiquidityInInvalidPosition(params),\n  );\n}\n\nexport async function decreaseV1Liquidity(identity: Identity, params: DecreaseLiquidityParams) {\n  return resultFormat<DecreaseLiquidityResult>(await (await swapPositionManagerV1(identity)).decreaseLiquidity(params));\n}\n","import { useCallback, useEffect, useRef, useState } from \"react\";\n\nexport default function useDebouncedChangeHandler<T>(\n  value: T,\n  onChange: (newValue: T) => void,\n  debouncedMs = 100,\n): [T, (value: T) => void] {\n  const [inner, setInner] = useState<T>(() => value);\n  const timer = useRef<ReturnType<typeof setTimeout>>();\n\n  const onChangeInner = useCallback(\n    (newValue) => {\n      setInner(newValue);\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n      timer.current = setTimeout(() => {\n        onChange(newValue);\n        timer.current = undefined;\n      }, debouncedMs);\n    },\n    [debouncedMs, onChange],\n  );\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current);\n      timer.current = undefined;\n    }\n    setInner(value);\n  }, [value]);\n\n  return [inner, onChangeInner];\n}\n","import { useCallback } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"store/hooks\";\nimport { updateUserSlippage } from \"./actions\";\n\nexport function useIsExpertMode() {\n  return useAppSelector((state) => state.swapV2Cache.userExpertMode);\n}\n\nexport function useIsSingleHop() {\n  return useAppSelector((state) => state.swapV2Cache.userSingleHop);\n}\n\nexport function useUserSlippage() {\n  return useAppSelector((state) => state.swapV2Cache.userSlippage);\n}\n\nexport function useUserTransactionsDeadline() {\n  return useAppSelector((state) => state.swapV2Cache.userTransactionsDeadline);\n}\n\nexport function useSlippageManager(type: string): [number, (value: number) => void] {\n  const dispatch = useAppDispatch();\n  const userSlippage = useUserSlippage()[type];\n\n  const setUserSlippage = useCallback(\n    (value: number) => {\n      dispatch(updateUserSlippage({ type, value }));\n    },\n    [dispatch],\n  );\n\n  return [userSlippage, setUserSlippage];\n}\n","import { useAppSelector, useAppDispatch } from \"store/hooks\";\nimport { useCallback, useMemo } from \"react\";\nimport { numberToString } from \"@w2e/utils\";\nimport { Percent, CurrencyAmount, Position, Token } from \"@w2e/swap-sdk\";\nimport { BURN_FIELD } from \"constants/swap\";\nimport { tryParseAmount } from \"utils/swap\";\nimport { useToken } from \"hooks/useCurrency\";\nimport { usePool } from \"hooks/swap/v2/usePools\";\nimport { t } from \"@lingui/macro\";\nimport { PositionResult } from \"types/swapv2\";\nimport { updateTypedInput, resetBurnState } from \"./actions\";\n\nexport function useBurnState() {\n  return useAppSelector((state) => state.swapV2Burn);\n}\n\nexport function useResetBurnState() {\n  const dispatch = useAppDispatch();\n\n  return useCallback(() => {\n    dispatch(resetBurnState());\n  }, [dispatch]);\n}\n\nexport function useBurnInfo(position: PositionResult | undefined | null) {\n  const { token0: token0Address, token1: token1Address } = position || {};\n\n  const [, token0] = useToken(token0Address) ?? undefined;\n  const [, token1] = useToken(token1Address) ?? undefined;\n\n  const [poolState, pool] = usePool(\n    token0 ?? undefined,\n    token1 ?? undefined,\n    position?.fee ? Number(position.fee) : undefined,\n  );\n\n  const positionSDK = useMemo(\n    () =>\n      pool &&\n      position?.liquidity &&\n      (position?.tickLower || Number(position?.tickLower) === 0) &&\n      (position?.tickUpper || Number(position?.tickUpper) === 0)\n        ? new Position({\n            pool,\n            liquidity: numberToString(position.liquidity),\n            tickLower: Number(position.tickLower),\n            tickUpper: Number(position.tickUpper),\n          })\n        : undefined,\n    [pool, position],\n  );\n\n  const { independentField, typedValue } = useBurnState();\n\n  const [tokenA, tokenB] = [token0?.wrapped, token1?.wrapped];\n\n  const tokens: { [key in BURN_FIELD]?: Token | undefined } = {\n    [BURN_FIELD.CURRENCY_A]: tokenA,\n    [BURN_FIELD.CURRENCY_B]: tokenB,\n  };\n\n  const liquidityValues: { [key in BURN_FIELD]?: CurrencyAmount<Token> | undefined } = {\n    [BURN_FIELD.CURRENCY_A]: positionSDK?.amount0,\n    [BURN_FIELD.CURRENCY_B]: positionSDK?.amount1,\n  };\n\n  let percentToRemove = new Percent(\"0\", \"100\");\n\n  if (independentField === BURN_FIELD.LIQUIDITY_PERCENT) {\n    percentToRemove = new Percent(typedValue, \"100\");\n  } else if (tokens[independentField]) {\n    const independentAmount = tryParseAmount(typedValue, tokens[independentField]);\n    const liquidityValue = liquidityValues[independentField];\n\n    if (independentAmount && liquidityValue && !independentAmount.greaterThan(liquidityValue)) {\n      percentToRemove = new Percent(independentAmount.quotient, liquidityValue.quotient);\n    }\n  }\n\n  const discountedAmount0 = positionSDK ? percentToRemove.multiply(positionSDK.amount0.quotient).quotient : undefined;\n  const discountedAmount1 = positionSDK ? percentToRemove.multiply(positionSDK.amount1.quotient).quotient : undefined;\n\n  const parsedAmounts = {\n    [BURN_FIELD.LIQUIDITY_PERCENT]: percentToRemove,\n    [BURN_FIELD.CURRENCY_A]:\n      token0 && discountedAmount0 && percentToRemove && percentToRemove.greaterThan(\"0\")\n        ? CurrencyAmount.fromRawAmount(token0, discountedAmount0)\n        : undefined,\n    [BURN_FIELD.CURRENCY_B]:\n      token1 && discountedAmount1 && percentToRemove && percentToRemove.greaterThan(\"0\")\n        ? CurrencyAmount.fromRawAmount(token1, discountedAmount1)\n        : undefined,\n  };\n\n  const outOfRange =\n    pool && position ? pool.tickCurrent < position.tickLower || pool.tickCurrent > position.tickUpper : false;\n\n  let error: string | undefined;\n\n  if (\n    !parsedAmounts[BURN_FIELD.LIQUIDITY_PERCENT] ||\n    !parsedAmounts[BURN_FIELD.CURRENCY_A] ||\n    !parsedAmounts[BURN_FIELD.CURRENCY_B]\n  ) {\n    if (typedValue && String(typedValue) !== \"0\") {\n      error = error ?? t`Invalid value`;\n    } else {\n      error = error ?? t`Enter an amount`;\n    }\n  }\n\n  return {\n    poolState,\n    parsedAmounts,\n    error,\n    outOfRange,\n    currencyA: token0,\n    currencyB: token1,\n    position: positionSDK,\n    liquidityToRemove: percentToRemove,\n    liquidityValue0: parsedAmounts[BURN_FIELD.CURRENCY_A],\n    liquidityValue1: parsedAmounts[BURN_FIELD.CURRENCY_B],\n  };\n}\n\nexport function useBurnHandlers() {\n  const dispatch = useAppDispatch();\n\n  const onUserInput = useCallback(\n    (independentField: BURN_FIELD, typedValue: string) => {\n      dispatch(updateTypedInput({ independentField, typedValue }));\n    },\n    [dispatch],\n  );\n\n  return {\n    onUserInput,\n  };\n}\n","import { useMemo } from \"react\";\nimport { Typography, Grid, Box, Avatar } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { usePositionFees } from \"hooks/swap/v2/usePositionFees\";\nimport { numberToString, toSignificant } from \"@w2e/utils\";\nimport { CurrencyAmount, Position } from \"@w2e/swap-sdk\";\nimport { Theme } from \"@mui/material/styles\";\nimport BigNumber from \"bignumber.js\";\n\nconst useStyle = makeStyles((theme: Theme) => ({\n  wrapper: {\n    backgroundColor: theme.palette.background.level2,\n    borderRadius: `12px`,\n    border: `1px solid ${theme.palette.background.level3}`,\n    padding: \"16px 12px\",\n  },\n}));\n\nexport interface UnclaimedProps {\n  positionId: number | bigint | string | undefined;\n  invalid?: boolean;\n  position: Position | undefined;\n}\n\nexport default function Unclaimed({ position, positionId, invalid = false }: UnclaimedProps) {\n  const classes = useStyle();\n\n  const { token0, token1 } = position?.pool || {};\n  const { amount0: feeAmount0, amount1: feeAmount1 } = usePositionFees(positionId, invalid);\n\n  const currencyFeeAmount0 = useMemo(() => {\n    if (!token0 || !feeAmount0) return undefined;\n    return CurrencyAmount.fromRawAmount(token0, numberToString(feeAmount0));\n  }, [feeAmount0, token0]);\n\n  const currencyFeeAmount1 = useMemo(() => {\n    if (!token1 || !feeAmount1) return undefined;\n    return CurrencyAmount.fromRawAmount(token1, numberToString(feeAmount1));\n  }, [feeAmount1, token1]);\n\n  return (\n    <Box>\n      <Typography color=\"text.primary\">Unclaimed fees</Typography>\n      <Box mt=\"12px\" className={classes.wrapper}>\n        <Grid container alignItems=\"center\">\n          <Avatar sx={{ width: \"32px\", height: \"32px\", marginRight: \"12px\", bgcolor: \"#273155\" }} src={token0?.logo}>\n            &nbsp;\n          </Avatar>\n          <Typography color=\"text.primary\">{token0?.symbol}</Typography>\n          <Grid item xs>\n            <Typography align=\"right\" color=\"text.primary\">\n              {currencyFeeAmount0\n                ? toSignificant(new BigNumber(currencyFeeAmount0.toExact()).multipliedBy(0.8).toString(), 6)\n                : 0}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Grid mt=\"10px\" container alignItems=\"center\">\n          <Avatar sx={{ width: \"32px\", height: \"32px\", marginRight: \"12px\", bgcolor: \"#273155\" }} src={token1?.logo}>\n            &nbsp;\n          </Avatar>\n          <Typography color=\"text.primary\">{token1?.symbol}</Typography>\n          <Grid item xs>\n            <Typography align=\"right\" color=\"text.primary\">\n              {currencyFeeAmount1\n                ? toSignificant(new BigNumber(currencyFeeAmount1.toExact()).multipliedBy(0.8).toString(), 6)\n                : 0}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Grid, Box, Typography, Avatar } from \"@mui/material\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport { NumberTextField } from \"components/index\";\nimport { MAX_SWAP_INPUT_LENGTH } from \"constants/index\";\nimport { Trans } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Token } from \"@w2e/swap-sdk\";\n\nconst useStyle = makeStyles((theme: Theme) => {\n  return {\n    inputBox: {\n      backgroundColor: theme.palette.background.level3,\n      borderRadius: \"12px\",\n      padding: \"16px 24px 16px 12px\",\n    },\n    tokenButton: {\n      backgroundColor: theme.palette.background.level2,\n      borderRadius: \"12px\",\n      padding: \"9px 28px 9px 12px\",\n    },\n    input: {\n      \"& input\": {\n        textAlign: \"right\",\n        fontSize: \"20px\",\n        fontWeight: 700,\n        // color: theme.textPrimary,\n      },\n      \"& input::placeholder\": {\n        fontSize: \"20px\",\n        fontWeight: 700,\n      },\n    },\n  };\n});\n\nexport interface DecreaseLiquidityInputProps {\n  currency: Token | undefined;\n  value: string | number;\n  onUserInput: (value: string) => void;\n  totalAmount: React.ReactChild;\n}\n\nexport default function DecreaseLiquidityInput({\n  currency,\n  value,\n  onUserInput,\n  totalAmount,\n}: DecreaseLiquidityInputProps) {\n  const classes = useStyle();\n  const theme = useTheme() as Theme;\n\n  return (\n    <Box className={classes.inputBox}>\n      <Grid container>\n        <Box className={classes.tokenButton}>\n          <Grid item xs container alignItems=\"center\">\n            <Avatar\n              sx={{\n                ...theme.palette.avatar.bgcolor,\n                display: \"inline-block\",\n                marginRight: \"8px\",\n                width: \"24px\",\n                height: \"24px\",\n              }}\n              alt=\"\"\n              src={currency?.logo}\n            >\n              &nbsp;\n            </Avatar>\n            <Typography component=\"span\">{currency?.symbol}</Typography>\n          </Grid>\n        </Box>\n        <Grid item xs>\n          <NumberTextField\n            fullWidth\n            value={value}\n            className={classes.input}\n            placeholder=\"0.0\"\n            variant=\"standard\"\n            numericProps={{\n              thousandSeparator: true,\n              decimalScale: currency?.decimals ?? 8,\n              allowNegative: false,\n              maxLength: MAX_SWAP_INPUT_LENGTH,\n            }}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              onUserInput(e.target.value);\n            }}\n          />\n        </Grid>\n      </Grid>\n      <Box mt={1}>\n        <Typography fontSize=\"12px\">\n          <Trans>Total Amount:</Trans> {totalAmount} {currency?.symbol}\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n","import { memo } from \"react\";\nimport { Box, Typography, Grid, Button } from \"@mui/material\";\nimport SwapModal from \"components/modal/swap\";\nimport CurrencyAvatar from \"components/CurrencyAvatar\";\nimport { BURN_FIELD } from \"constants/swap\";\nimport { Trans } from \"@lingui/macro\";\nimport { Token } from \"@w2e/swap-sdk\";\n\nexport default memo(\n  ({\n    open,\n    onCancel,\n    onConfirm,\n    formattedAmounts,\n    currencyA,\n    currencyB,\n  }: {\n    open: boolean;\n    onCancel: () => void;\n    onConfirm: () => void;\n    currencyA: Token | undefined;\n    currencyB: Token | undefined;\n    formattedAmounts: { [key in BURN_FIELD]?: string };\n  }) => {\n    return (\n      <SwapModal open={open} onClose={onCancel} title=\"Remove Liquidity\">\n        <>\n          <Box mt={1}>\n            <Grid container mt={1} alignItems=\"center\">\n              <Grid item xs container alignItems=\"center\">\n                <Grid item mr={1}>\n                  <CurrencyAvatar currency={currencyA} />\n                </Grid>\n                <Grid item>\n                  <Typography>{currencyA?.symbol}</Typography>\n                </Grid>\n              </Grid>\n              <Grid item xs>\n                <Typography align=\"right\">{formattedAmounts[BURN_FIELD.CURRENCY_A] ?? 0}</Typography>\n              </Grid>\n            </Grid>\n            <Grid container mt={2} alignItems=\"center\">\n              <Grid item xs container alignItems=\"center\">\n                <Grid item mr={1}>\n                  <CurrencyAvatar currency={currencyB} />\n                </Grid>\n                <Grid item>\n                  <Typography>{currencyB?.symbol}</Typography>\n                </Grid>\n              </Grid>\n              <Grid item xs>\n                <Typography align=\"right\">{formattedAmounts[BURN_FIELD.CURRENCY_B] ?? 0}</Typography>\n              </Grid>\n            </Grid>\n          </Box>\n          <Button variant=\"contained\" size=\"large\" fullWidth sx={{ marginTop: \"40px\" }} onClick={onConfirm}>\n            <Trans>Remove</Trans>\n          </Button>\n        </>\n      </SwapModal>\n    );\n  },\n);\n","import { memo, useCallback, useMemo, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Grid, Box, Typography } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { CurrencyAmount, Position } from \"@w2e/swap-sdk\";\nimport { MainCard } from \"components/index\";\nimport PercentageSlider from \"components/PercentageSlider\";\nimport HeaderTab from \"components/swap/Header\";\nimport useDebouncedChangeHandler from \"hooks/useDebouncedChangeHandler\";\nimport { useBurnHandlers, useBurnInfo, useBurnState, useResetBurnState } from \"store/swapv2/burn/hooks\";\nimport { useSlippageManager, useUserTransactionsDeadline } from \"store/swapv2/cache/hooks\";\nimport { BURN_FIELD, slippageToPercent } from \"constants/mint\";\nimport {\n  usePosition as usePositionRequest,\n  decreaseLiquidity as decreaseLiquidityRequest,\n  decreaseInvalidLiquidity,\n} from \"hooks/swap/v2/useSwapCalls\";\nimport BigNumber from \"bignumber.js\";\nimport { useErrorTip, useSuccessTip, useLoadingTip } from \"hooks/useTips\";\nimport { useAccount } from \"store/global/hooks\";\nimport { CurrencyAmountFormatDecimals } from \"constants/index\";\nimport { t, Trans } from \"@lingui/macro\";\nimport Identity, { CallbackProps, SubmitLoadingProps } from \"components/Identity\";\nimport { useAccountPrincipal } from \"store/auth/hooks\";\nimport { type StatusResult, type ActorIdentity } from \"@w2e/types\";\nimport LiquidityInfo from \"components/swap/LiquidityInfo\";\nimport Loading from \"components/Loading/Static\";\nimport { PoolState } from \"hooks/swap/v2/usePools\";\nimport { getLocaleMessage } from \"locales/services\";\nimport Button from \"components/authentication/ButtonConnector\";\nimport Unclaimed from \"./Unclaimed\";\nimport DecreaseLiquidityInput from \"./Input\";\nimport ConfirmRemoveLiquidityModal from \"./Confirm\";\n\nconst useStyle = makeStyles(() => {\n  return {\n    container: {\n      width: \"100%\",\n      maxWidth: \"720px\",\n    },\n  };\n});\n\nexport default memo(() => {\n  const classes = useStyle();\n  const history = useHistory();\n\n  const isInvalid = history.location.search?.includes(\"invalid\");\n  const principal = useAccountPrincipal();\n  const { positionId: _positionId } = useParams<{ positionId: string }>();\n  const positionId = BigInt(_positionId);\n\n  const { result: _position, loading: positionRequestLoading } = usePositionRequest(positionId, isInvalid);\n  const { independentField, typedValue } = useBurnState();\n  const {\n    position: positionSDK,\n    parsedAmounts,\n    error,\n    currencyA,\n    currencyB,\n    liquidityToRemove,\n    poolState,\n  } = useBurnInfo(_position);\n\n  const positionLoading = PoolState.LOADING === poolState || positionRequestLoading;\n\n  const { onUserInput } = useBurnHandlers();\n\n  const isValid = !error;\n\n  const formattedAmounts = {\n    // [BURN_FIELD.LIQUIDITY_PERCENT]: parsedAmounts[BURN_FIELD.LIQUIDITY_PERCENT].equalTo(\"0\")\n    //   ? \"0\"\n    //   : parsedAmounts[BURN_FIELD.LIQUIDITY_PERCENT].lessThan(new Percent(\"1\", \"100\"))\n    //   ? \"<1\"\n    //   : parsedAmounts[BURN_FIELD.LIQUIDITY_PERCENT].toFixed(0),\n    [BURN_FIELD.LIQUIDITY_PERCENT]: parsedAmounts[BURN_FIELD.LIQUIDITY_PERCENT].equalTo(\"0\")\n      ? \"0\"\n      : parsedAmounts[BURN_FIELD.LIQUIDITY_PERCENT].toFixed(2),\n    [BURN_FIELD.CURRENCY_A]:\n      independentField === BURN_FIELD.CURRENCY_A\n        ? typedValue\n        : parsedAmounts[BURN_FIELD.CURRENCY_A]?.toFixed(\n          CurrencyAmountFormatDecimals(parsedAmounts[BURN_FIELD.CURRENCY_A]?.currency.decimals),\n        ) ?? \"\",\n    [BURN_FIELD.CURRENCY_B]:\n      independentField === BURN_FIELD.CURRENCY_B\n        ? typedValue\n        : parsedAmounts[BURN_FIELD.CURRENCY_B]?.toFixed(\n          CurrencyAmountFormatDecimals(parsedAmounts[BURN_FIELD.CURRENCY_B]?.currency.decimals),\n        ) ?? \"\",\n  };\n\n  const totalAmount = useMemo(() => {\n    if (!positionSDK || !currencyA || !currencyB)\n      return {\n        [BURN_FIELD.CURRENCY_A]: 0,\n        [BURN_FIELD.CURRENCY_B]: 0,\n      };\n\n    return {\n      [BURN_FIELD.CURRENCY_A]: CurrencyAmount.fromRawAmount(currencyA, positionSDK.amount0.quotient).toFixed(\n        CurrencyAmountFormatDecimals(currencyA.decimals),\n      ),\n      [BURN_FIELD.CURRENCY_B]: CurrencyAmount.fromRawAmount(currencyB, positionSDK.amount1.quotient).toFixed(\n        CurrencyAmountFormatDecimals(currencyB.decimals),\n      ),\n    };\n  }, [positionSDK]);\n\n  const liquidityPercentChangeCallback = useCallback(\n    (value: number | number[]) => {\n      onUserInput(BURN_FIELD.LIQUIDITY_PERCENT, value.toString());\n    },\n    [onUserInput],\n  );\n\n  const onCurrencyAInput = useCallback(\n    (typedValue: string) => {\n      onUserInput(BURN_FIELD.CURRENCY_A, typedValue);\n    },\n    [onUserInput],\n  );\n\n  const onCurrencyBInput = useCallback(\n    (typedValue: string) => {\n      onUserInput(BURN_FIELD.CURRENCY_B, typedValue);\n    },\n    [onUserInput],\n  );\n\n  const [liquidityPercentage, setLiquidityPercentage] = useDebouncedChangeHandler<number | number[]>(\n    Number(formattedAmounts[BURN_FIELD.LIQUIDITY_PERCENT]),\n    liquidityPercentChangeCallback,\n  );\n\n  const resetBurnState = useResetBurnState();\n\n  const [slippageTolerance] = useSlippageManager(\"burn\");\n  const account = useAccount();\n  const transactionsDeadline = useUserTransactionsDeadline();\n\n  const [confirmModalShow, setConfirmModalShow] = useState(false);\n  const [openSuccessTip] = useSuccessTip();\n  const [openErrorTip] = useErrorTip();\n  const [openLoadingTip, closeLoadingTip] = useLoadingTip();\n\n  const handleBack = useCallback(() => {\n    resetBurnState();\n    history.push(\"/swap/v2/liquidity\");\n  }, [history, resetBurnState]);\n\n  const handleConfirm = useCallback(\n    async (identity: ActorIdentity, { loading }: SubmitLoadingProps) => {\n      if (!positionSDK || !liquidityToRemove || loading || !principal) {\n        return;\n      }\n\n      const loadingTipKey = openLoadingTip(`Remove ${currencyA?.symbol}/${currencyB?.symbol} liquidity`);\n      setConfirmModalShow(false);\n\n      const partialPosition = new Position({\n        pool: positionSDK.pool,\n        liquidity: liquidityToRemove.multiply(positionSDK.liquidity).quotient,\n        tickLower: positionSDK.tickLower,\n        tickUpper: positionSDK.tickUpper,\n      });\n\n      const { amount0: amount0Min, amount1: amount1Min } = partialPosition.burnAmountsWithSlippage(\n        slippageToPercent(slippageTolerance),\n      );\n\n      let result:\n        | undefined\n        | StatusResult<{\n          amount0: bigint;\n          amount1: bigint;\n        }>;\n\n      if (isInvalid) {\n        result = await decreaseInvalidLiquidity(identity, {\n          tokenId: positionId,\n          liquidity: partialPosition.liquidity.toString(),\n          amount0Min: amount0Min.toString(),\n          amount1Min: amount1Min.toString(),\n          deadline: BigInt(transactionsDeadline),\n          recipient: principal,\n        });\n      } else {\n        result = await decreaseLiquidityRequest(identity, {\n          tokenId: positionId,\n          liquidity: partialPosition.liquidity.toString(),\n          amount0Min: amount0Min.toString(),\n          amount1Min: amount1Min.toString(),\n          deadline: BigInt(transactionsDeadline),\n          recipient: principal,\n        });\n      }\n\n      const { status, message } = result;\n\n      closeLoadingTip(loadingTipKey);\n\n      if (status === \"ok\") {\n        openSuccessTip(t`Removed liquidity successfully`);\n        handleBack();\n      } else {\n        openErrorTip(getLocaleMessage(message) ?? t`Failed to remove liquidity`);\n      }\n    },\n    [positionSDK, liquidityToRemove, slippageTolerance, positionId, transactionsDeadline, account],\n  );\n\n  const handleDecreaseLiquidity = useCallback(() => {\n    setConfirmModalShow(true);\n  }, [setConfirmModalShow]);\n\n  const handleCancel = useCallback(() => {\n    setConfirmModalShow(false);\n  }, [setConfirmModalShow]);\n\n  return (\n    <Identity onSubmit={handleConfirm}>\n      {({ submit, loading }: CallbackProps) => (\n        <>\n          <Grid container justifyContent=\"center\">\n            <MainCard level={1} className={`${classes.container} lightGray200`}>\n              <HeaderTab\n                title={t`Remove Liquidity`}\n                showArrow\n                showUserSetting\n                slippageType=\"burn\"\n                onBack={handleBack}\n              />\n              <Box mt=\"22px\">\n                <LiquidityInfo position={positionSDK} positionId={positionId} version=\"v2\" />\n              </Box>\n              <Box mt=\"22px\">\n                <Typography variant=\"h5\" color=\"textPrimary\">\n                  <Trans>Amount</Trans>\n                </Typography>\n                <Box mt=\"12px\">\n                  <DecreaseLiquidityInput\n                    totalAmount={totalAmount[BURN_FIELD.CURRENCY_A]}\n                    currency={currencyA}\n                    onUserInput={onCurrencyAInput}\n                    value={formattedAmounts[BURN_FIELD.CURRENCY_A] ?? 0}\n                  />\n                </Box>\n                <Box mt={2}>\n                  <DecreaseLiquidityInput\n                    totalAmount={totalAmount[BURN_FIELD.CURRENCY_B]}\n                    currency={currencyB}\n                    onUserInput={onCurrencyBInput}\n                    value={formattedAmounts[BURN_FIELD.CURRENCY_B] ?? 0}\n                  />\n                </Box>\n              </Box>\n              <Box\n                mt={5}\n                sx={{\n                  paddingRight: \"12px\",\n                }}\n              >\n                <PercentageSlider\n                  value={new BigNumber(liquidityPercentage?.toString() ?? 0).toNumber()}\n                  onChange={(event, value) => setLiquidityPercentage(value)}\n                />\n              </Box>\n\n              <Box mt=\"30px\">\n                <Unclaimed position={positionSDK} positionId={positionId} invalid={isInvalid} />\n              </Box>\n\n              <Box mt={4}>\n                <Button\n                  variant=\"contained\"\n                  fullWidth\n                  disabled={!isValid || loading}\n                  size=\"large\"\n                  onClick={handleDecreaseLiquidity}\n                >\n                  {isValid ? t`Remove` : error}\n                </Button>\n              </Box>\n            </MainCard>\n\n            {positionLoading && (\n              <Box sx={{ position: \"absolute\", top: 0, left: 0, width: \"100%\", height: \"100%\" }}>\n                <Loading loading={positionLoading} mask />\n              </Box>\n            )}\n          </Grid>\n          {confirmModalShow && (\n            <ConfirmRemoveLiquidityModal\n              open={confirmModalShow}\n              onConfirm={submit}\n              onCancel={handleCancel}\n              currencyA={currencyA}\n              currencyB={currencyB}\n              formattedAmounts={formattedAmounts}\n            />\n          )}\n        </>\n      )}\n    </Identity>\n  );\n});\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m18 12 4-4-4-4v3H3v2h15zM6 12l-4 4 4 4v-3h15v-2H6z\"\n}), 'SyncAlt');","import { Position } from \"../entities/position\";\n\nexport function getPriceOrderingFromPositionForUI(position: Position | undefined) {\n  if (!position) return {};\n\n  const token0 = position.amount0.currency;\n  const token1 = position.amount1.currency;\n\n  // if both prices are below 1, invert\n  if (position.token0PriceUpper.lessThan(1)) {\n    return {\n      priceLower: position.token0PriceUpper.invert(),\n      priceUpper: position.token0PriceLower.invert(),\n      quote: token0,\n      base: token1,\n    };\n  }\n\n  // otherwise, just return the default\n  return {\n    priceLower: position.token0PriceLower,\n    priceUpper: position.token0PriceUpper,\n    quote: token1,\n    base: token0,\n  };\n}\n","import { Token } from \"../core/entities/token\";\nimport { Price } from \"../core/entities/fractions/price\";\n\ninterface useInverterProps {\n  priceLower: Price<Token, Token> | undefined;\n  priceUpper: Price<Token, Token> | undefined;\n  quote: Token | undefined;\n  base: Token | undefined;\n  invert: boolean;\n}\n\nexport function useInverter({ priceLower, priceUpper, quote, base, invert }: useInverterProps) {\n  return {\n    priceUpper: invert ? priceLower?.invert() : priceUpper,\n    priceLower: invert ? priceUpper?.invert() : priceLower,\n    quote: invert ? base : quote,\n    base: invert ? quote : base,\n  };\n}\n"],"names":["useStyles","_ref","borderColor","size","makeStyles","avatar","width","height","border","concat","CurrencyAvatar","_ref2","currency","bgColor","className","classes","_jsx","Avatar","sx","bgcolor","src","logo","children","marks","value","useStyle","theme","root","color","colors","secondaryMain","backgroundColor","isDarkTheme","palette","background","level4","marginLeft","borderRadius","top","transform","opacity","tooltip","LightTooltip","styled","props","Tooltip","popper","tooltipClasses","fontWeight","ValueLabelComponent","placement","arrow","title","PercentageSlider","Slider","valueLabelDisplay","components","ValueLabel","createSvgIcon","d","SwapHeader","showArrow","onBack","history","useHistory","handleBack","useCallback","goBack","_jsxs","Grid","container","item","xs","justifyContent","ArrowBackIcon","cursor","onClick","Typography","variant","position","customizeTheme","createTheme","breakpoints","values","sm","NFTBox","marginRight","level2","down","marginBottom","NFTWrapper","currentPrice","level3","padding","rangeBox","LiquidityInfo","pool","tickLower","tickUpper","token0","token1","fee","feeAmount","pricesFromPosition","getPriceOrderingFromPositionForUI","manuallyInverted","setManuallyInverted","useState","priceLower","priceUpper","base","useInverter","quote","invert","inverted","equals","undefined","currencyQuote","currencyBase","_tickAtLimit","useIsTickAtLimit","tickAtLimit","useMemo","Bound","LOWER","UPPER","pairName","symbol","outOfRange","tickCurrent","closed","_position$liquidity","liquidity","toString","hasLiquidity","flexDirection","alignItems","Box","display","TokenImage","tokenId","address","left","fontSize","margin","PositionRangeState","Trans","id","maxWidth","whiteSpace","textOverflow","overflow","priceOf","toSignificant","SyncAltIcon","mt","gap","formatTickPrice","wrapper","darkPrimary400","darkLevel1","Marker","SvgIcon","viewBox","fill","Closed","component","OutOfRange","InRange","PoolState","usePools","poolKeys","version","pools","setPools","loading","setLoading","transformedPoolKeys","map","currencyA","currencyB","tokenA","wrapped","tokenB","sortsBefore","useEffect","length","includes","Promise","all","async","key","poolAddress","swapFactoryV1","getPool","swapFactory","poolInfo","swapPool","infoWithNoBalance","info","ticks","then","result","filter","e","poolKey","index","INVALID","LOADING","_pool","NOT_EXISTS","sqrtRatioX96","EXISTS","Pool","Number","numberToString","error","console","usePool","usePoolV1","usePositionFees","positionId","invalid","reload","usePositionFeesCall","amount0","amount1","getPoolTokenStandard","poolId","getStandard","usePoolIds","call","getPoolIds","useStateCallsData","usePoolList","poolIds","poolIdsLoading","errorNum","fetch","getPoolInfoWithNoBalance","catch","err","push","i","usePosition","useCallsData","resultFormat","swapPositionManager","invalidPositions","BigInt","data","positions","increaseLiquidity","identity","params","decreaseLiquidity","mint","amount0Desired","amount1Desired","amount0Min","amount1Min","recipient","deadline","useUserTokens","account","useAccount","ownerTokens","useUserV1Tokens","swapPositionManagerV1","useCollectFeesCall","collectInInvalidPosition","collect","refreshInvalidIncome","refreshIncome","getV2SwapNFTTokenURI","tokenURI","JSON","parse","image","useFourListedPools","swapGraphPool","getAllPools","decreaseInvalidLiquidity","decreaseLiquidityInInvalidPosition","decreaseV1Liquidity","useDebouncedChangeHandler","onChange","debouncedMs","arguments","inner","setInner","timer","useRef","onChangeInner","newValue","current","clearTimeout","setTimeout","useUserTransactionsDeadline","useAppSelector","state","swapV2Cache","userTransactionsDeadline","useSlippageManager","type","dispatch","useAppDispatch","userSlippage","updateUserSlippage","useBurnState","swapV2Burn","Unclaimed","feeAmount0","feeAmount1","currencyFeeAmount0","CurrencyAmount","fromRawAmount","currencyFeeAmount1","align","BigNumber","toExact","multipliedBy","inputBox","tokenButton","input","textAlign","DecreaseLiquidityInput","_currency$decimals","onUserInput","totalAmount","useTheme","alt","NumberTextField","fullWidth","placeholder","numericProps","thousandSeparator","decimalScale","decimals","allowNegative","maxLength","MAX_SWAP_INPUT_LENGTH","target","memo","_formattedAmounts$BUR","_formattedAmounts$BUR2","open","onCancel","onConfirm","formattedAmounts","SwapModal","onClose","_Fragment","mr","BURN_FIELD","CURRENCY_A","CURRENCY_B","Button","marginTop","_history$location$sea","_parsedAmounts$BURN_F","_parsedAmounts$BURN_F2","_parsedAmounts$BURN_F3","_parsedAmounts$BURN_F4","_parsedAmounts$BURN_F5","_parsedAmounts$BURN_F6","isInvalid","location","search","principal","useAccountPrincipal","_positionId","useParams","_position","positionRequestLoading","usePositionRequest","independentField","typedValue","positionSDK","parsedAmounts","liquidityToRemove","poolState","_useToken","_useToken2","token0Address","token1Address","useToken","Position","tokens","liquidityValues","percentToRemove","Percent","LIQUIDITY_PERCENT","independentAmount","tryParseAmount","liquidityValue","greaterThan","quotient","discountedAmount0","multiply","discountedAmount1","_error","_error2","String","i18n","_","liquidityValue0","liquidityValue1","useBurnInfo","positionLoading","updateTypedInput","useBurnHandlers","isValid","equalTo","toFixed","CurrencyAmountFormatDecimals","liquidityPercentChangeCallback","onCurrencyAInput","onCurrencyBInput","liquidityPercentage","setLiquidityPercentage","resetBurnState","useResetBurnState","slippageTolerance","transactionsDeadline","confirmModalShow","setConfirmModalShow","openSuccessTip","useSuccessTip","openErrorTip","useErrorTip","openLoadingTip","closeLoadingTip","useLoadingTip","handleConfirm","loadingTipKey","partialPosition","burnAmountsWithSlippage","slippageToPercent","decreaseLiquidityRequest","status","message","_getLocaleMessage","getLocaleMessage","handleDecreaseLiquidity","handleCancel","Identity","onSubmit","_liquidityPercentage$","submit","MainCard","level","HeaderTab","showUserSetting","slippageType","paddingRight","toNumber","event","disabled","Loading","mask","ConfirmRemoveLiquidityModal","token0PriceUpper","lessThan","token0PriceLower"],"sourceRoot":""}
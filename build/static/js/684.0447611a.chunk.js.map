{"version":3,"file":"static/js/684.0447611a.chunk.js","mappings":"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","sources":["views/swap-liquidity-v3/RevokeApprove.tsx","hooks/swap/useRevokeApprove.ts"],"sourcesContent":["import { useState, useMemo } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Typography, Box, Grid, Button, CircularProgress, Avatar, useMediaQuery } from \"@mui/material\";\nimport { useTheme } from \"@mui/styles\";\nimport { NoData, LoadingRow, Wrapper, Breadcrumbs, SelectToken } from \"components/index\";\nimport { parseTokenAmount, toSignificant } from \"@w2e/utils\";\nimport { ResultStatus, TOKEN_STANDARD } from \"@w2e/types\";\nimport { Trans } from \"@lingui/macro\";\nimport { useTokenInfo } from \"hooks/token/useTokenInfo\";\nimport { useTips, MessageTypes } from \"hooks/useTips\";\nimport { ICP } from \"constants/tokens\";\nimport { useGlobalContext } from \"hooks/useGlobalContext\";\nimport { useRevokeApprove, revoke } from \"hooks/swap/useRevokeApprove\";\nimport type { SwapPoolData, AllTokenOfSwapTokenInfo } from \"@w2e/types\";\nimport { useAccountPrincipal } from \"store/auth/hooks\";\n\nexport interface RevokeItemProps {\n  tokenId: string;\n  pool: SwapPoolData;\n  allowance: bigint | undefined;\n}\n\nexport function RevokeItem({ tokenId, pool, allowance }: RevokeItemProps) {\n  const theme = useTheme() as Theme;\n  const principal = useAccountPrincipal();\n  const [openTip, closeTip] = useTips();\n  const [loading, setLoading] = useState<boolean>(false);\n  const [revoked, setRevoked] = useState<boolean>(false);\n\n  const { result: token0 } = useTokenInfo(pool.token0.address);\n  const { result: token1 } = useTokenInfo(pool.token1.address);\n\n  const token = useMemo(() => {\n    return tokenId === token0?.canisterId ? token0 : token1;\n  }, [tokenId, token0, token1]);\n\n  const name = token0 && token1 ? `${token0.symbol}/${token1.symbol}` : \"--\";\n\n  const handleRevoke = async () => {\n    if (loading || !allowance || !token || !principal) return;\n\n    setLoading(true);\n\n    const loadingKey = openTip(\n      `Revoke your ${toSignificant(parseTokenAmount(allowance, token.decimals).toString(), 8, {\n        groupSeparator: \",\",\n      })} ${token.symbol}`,\n      MessageTypes.loading,\n    );\n\n    const result = await revoke(tokenId, pool.canisterId.toString(), principal.toString());\n\n    if (result.status === ResultStatus.OK) {\n      openTip(`Revoke ${name} ${token.symbol} successfully`, MessageTypes.success);\n      setRevoked(true);\n    } else {\n      openTip(`Failed to revoke: ${result.message ?? \"\"}`, MessageTypes.error);\n    }\n\n    closeTip(loadingKey);\n\n    setLoading(false);\n  };\n\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  return !revoked ? (\n    <Grid\n      container\n      alignItems=\"center\"\n      sx={{\n        padding: \"24px\",\n        borderRadius: \"12px\",\n        background: theme.palette.background.level1,\n        margin: \"16px 0 0 0\",\n        gap: \"0 12px\",\n        \"@media(max-width: 640px)\": {\n          padding: \"16px\",\n          alignItems: \"flex-start\",\n        },\n      }}\n    >\n      <Avatar\n        src={token?.logo}\n        sx={{\n          width: \"32px\",\n          height: \"32px\",\n          \"@media(max-width: 640px)\": {\n            width: \"24px\",\n            height: \"24px\",\n            margin: \"3px 0 0 0\",\n          },\n        }}\n      >\n        &nbsp;\n      </Avatar>\n\n      <Box\n        sx={{\n          display: \"flex\",\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          \"@media(max-width:640px)\": {\n            flexDirection: \"column\",\n            gap: \"10px 0\",\n            alignItems: \"flex-start\",\n            justifyContent: \"center\",\n          },\n        }}\n      >\n        <Box>\n          <Typography\n            color=\"text.primary\"\n            sx={{\n              fontSize: \"18px\",\n              fontWeight: 600,\n              display: \"flex\",\n              alignItems: \"center\",\n              \"@media(max-width: 640px)\": {\n                fontSize: \"14px\",\n              },\n            }}\n          >\n            <Trans>Approval Limit:</Trans>&nbsp;\n            <Typography\n              color=\"text.primary\"\n              sx={{\n                maxWidth: \"260px\",\n                overflow: \"hidden\",\n                display: \"inline-block\",\n                textOverflow: \"ellipsis\",\n                fontSize: \"18px\",\n                fontWeight: 600,\n                \"@media(max-width: 640px)\": {\n                  fontSize: \"14px\",\n                  maxWidth: \"145px\",\n                },\n              }}\n              component=\"span\"\n            >\n              {toSignificant(parseTokenAmount(allowance, token?.decimals).toString(), 8, { groupSeparator: \",\" })}\n            </Typography>\n            &nbsp;\n            {token?.symbol}\n          </Typography>\n          <Typography sx={{ margin: \"4px 0 0 0\" }}>{name}</Typography>\n          <Typography sx={{ margin: \"4px 0 0 0\" }}>{pool.canisterId.toString()}</Typography>\n        </Box>\n\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: \"0 10px\",\n            justifyContent: \"flex-end\",\n            \"@media(max-width: 640px)\": {\n              width: \"100%\",\n            },\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            size={matchDownSM ? \"small\" : \"medium\"}\n            disabled={loading || !token || !principal || !allowance}\n            onClick={handleRevoke}\n            startIcon={loading ? <CircularProgress size={24} color=\"inherit\" /> : null}\n          >\n            <Trans>Revoke</Trans>\n          </Button>\n        </Box>\n      </Box>\n    </Grid>\n  ) : null;\n}\n\nexport default function SwapRevokeApprove() {\n  const [selectedTokenId, setSelectedTokenId] = useState<string>(ICP.address);\n\n  const { AllPools } = useGlobalContext();\n\n  const pools = useMemo(() => {\n    if (!AllPools || !selectedTokenId) return undefined;\n    return AllPools.filter(\n      (pool) => pool.token0.address === selectedTokenId || pool.token1.address === selectedTokenId,\n    );\n  }, [AllPools, selectedTokenId]);\n\n  const { result, loading } = useRevokeApprove({ pools, tokenId: selectedTokenId });\n\n  const revokeResult = useMemo(() => {\n    return result?.filter((e) => !!e.allowance);\n  }, [result]);\n\n  const tokenFilter = (tokenInfo: AllTokenOfSwapTokenInfo) => {\n    return tokenInfo.standard !== TOKEN_STANDARD.ICRC2;\n  };\n\n  return (\n    <Wrapper>\n      <Box sx={{ margin: \"10px 0 0 0\" }}>\n        <Breadcrumbs\n          prevLink=\"/swap\"\n          prevLabel={<Trans>Swap</Trans>}\n          currentLabel={<Trans>Revoke Token Approval</Trans>}\n        />\n      </Box>\n\n      <Box sx={{ display: \"flex\", justifyContent: \"center\", margin: \"40px 0 0 0\" }}>\n        <Box\n          sx={{\n            width: \"800px\",\n            \"@media(max-width:640px)\": {\n              width: \"100%\",\n            },\n          }}\n        >\n          <Typography sx={{ fontSize: \"24px\", fontWeight: 500 }} color=\"text.primary\">\n            <Trans>Revoke Token Approval</Trans>\n          </Typography>\n\n          <Typography sx={{ margin: \"10px 0 0 0\" }}>\n            <Trans>\n              ICRC2 standard tokens require an approval step when using swap. You can revoke this approval based on your\n              security needs.\n            </Trans>\n          </Typography>\n\n          <Box sx={{ display: \"flex\", alignItems: \"center\", gap: \"0 20px\", margin: \"40px 0 0 0\" }}>\n            <Typography color=\"text.primary\" fontWeight={500}>\n              <Trans>Select Token</Trans>\n            </Typography>\n\n            <Box sx={{ minWidth: \"160px\" }}>\n              <SelectToken value={selectedTokenId} border filter={tokenFilter} onTokenChange={setSelectedTokenId} />\n            </Box>\n          </Box>\n\n          <Box sx={{ margin: \"20px 0 0 0\" }}>\n            {loading ? (\n              <LoadingRow>\n                <div />\n                <div />\n                <div />\n                <div />\n                <div />\n                <div />\n                <div />\n                <div />\n              </LoadingRow>\n            ) : revokeResult && revokeResult.length > 0 ? (\n              <Box\n                sx={{\n                  overflow: \"auto\",\n                  margin: \"-16px 0 0 0\",\n                }}\n              >\n                {revokeResult.map((ele, index) => (\n                  <RevokeItem key={index} pool={ele.pool} allowance={ele.allowance} tokenId={selectedTokenId} />\n                ))}\n              </Box>\n            ) : (\n              <NoData />\n            )}\n          </Box>\n        </Box>\n      </Box>\n    </Wrapper>\n  );\n}\n","import { useEffect, useMemo, useState } from \"react\";\nimport type { SwapPoolData } from \"@w2e/types\";\nimport { useAccountPrincipal } from \"store/auth/hooks\";\nimport { allowance, approve } from \"hooks/token/index\";\nimport { resultFormat } from \"@w2e/utils\";\n\nexport async function revoke(tokenId: string, spender: string, principal: string) {\n  return resultFormat<boolean>(\n    await approve({\n      canisterId: tokenId,\n      spender,\n      value: 0,\n      account: principal,\n    }),\n  );\n}\n\nexport interface UseRevokeApproveArgs {\n  pools: SwapPoolData[] | undefined;\n  tokenId: string | undefined;\n}\n\nexport interface UseRevokeApproveResult {\n  pool: SwapPoolData;\n  allowance: bigint | undefined;\n}\n\nexport function useRevokeApprove({ pools, tokenId }: UseRevokeApproveArgs) {\n  const principal = useAccountPrincipal();\n\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState<undefined | UseRevokeApproveResult[]>(undefined);\n\n  useEffect(() => {\n    async function call() {\n      if (principal && !!pools && (pools?.length ?? 0) > 0 && tokenId) {\n        setLoading(true);\n\n        const result = await Promise.all(\n          pools?.map(async (pool) => {\n            return await allowance({\n              canisterId: tokenId,\n              owner: principal.toString(),\n              spender: pool.canisterId.toString(),\n            });\n          }),\n        );\n\n        setResult(result.map((e, index) => ({ allowance: e, pool: pools[index] })));\n        setLoading(false);\n      }\n    }\n\n    call();\n  }, [principal, pools, tokenId]);\n\n  return useMemo(() => ({ loading, result }), [result, loading]);\n}\n"],"names":["RevokeItem","_ref","tokenId","pool","allowance","theme","useTheme","principal","useAccountPrincipal","openTip","closeTip","useTips","loading","setLoading","useState","revoked","setRevoked","result","token0","useTokenInfo","address","token1","token","useMemo","canisterId","name","concat","symbol","matchDownSM","useMediaQuery","breakpoints","down","_jsxs","Grid","container","alignItems","sx","padding","borderRadius","background","palette","level1","margin","gap","children","_jsx","Avatar","src","logo","width","height","Box","display","flex","justifyContent","flexDirection","Typography","color","fontSize","fontWeight","Trans","id","maxWidth","overflow","textOverflow","component","toSignificant","parseTokenAmount","decimals","toString","groupSeparator","Button","variant","size","disabled","onClick","async","loadingKey","MessageTypes","spender","resultFormat","approve","value","account","revoke","_result$message","status","ResultStatus","OK","success","message","error","startIcon","CircularProgress","SwapRevokeApprove","selectedTokenId","setSelectedTokenId","ICP","AllPools","useGlobalContext","pools","filter","setResult","undefined","useEffect","_pools$length","length","Promise","all","map","owner","e","index","call","useRevokeApprove","revokeResult","Wrapper","Breadcrumbs","prevLink","prevLabel","currentLabel","minWidth","SelectToken","border","tokenInfo","standard","TOKEN_STANDARD","ICRC2","onTokenChange","LoadingRow","ele","NoData"],"sourceRoot":""}
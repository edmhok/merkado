{"version":3,"file":"static/js/5159.4421cc3f.chunk.js","mappings":"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","sources":["components/markdown/BaseMarkdown.tsx","utils/type.ts","hooks/useVotingImageUpload.ts","../node_modules/.pnpm/react-feather@2.0.10_react@17.0.2/node_modules/react-feather/dist/icons/upload-cloud.js","components/markdown/index.tsx","components/vote/Preview.tsx","views/voting/create.tsx","../node_modules/.pnpm/@mui+icons-material@5.5.0_@mui+material@5.15.20_@types+react@17.0.2_react@17.0.2/node_modules/@mui/icons-material/Add.js","../node_modules/.pnpm/@mui+icons-material@5.5.0_@mui+material@5.15.20_@types+react@17.0.2_react@17.0.2/node_modules/@mui/icons-material/HighlightOff.js","../packages/hooks/src/voting/index.ts","../packages/utils/src/isValidAccount.ts","../packages/utils/src/time.ts","../packages/utils/src/xlsx.ts"],"sourcesContent":["/* eslint-disable react/no-danger */\nimport { useEffect, useMemo } from \"react\";\nimport { Remarkable } from \"remarkable\";\nimport { linkify } from \"remarkable/linkify\";\nimport copyToClipboard from \"copy-to-clipboard\";\n\nimport \"./base.css\";\n\nconst remarkable = new Remarkable({\n  html: false,\n  breaks: true,\n  typographer: false,\n  linkTarget: \"_blank\",\n}).use(linkify);\n\nexport default function BaseMarkdown({ content }: { content: string }) {\n  const html = useMemo(() => {\n    const body = content;\n\n    // // Add the ipfs gateway to markdown images that start with ipfs://\n    // function replaceIpfsUrl(match, p1) {\n    //   return match.replace(p1, getIpfsUrl(p1));\n    // }\n\n    // body = body.replace(/!\\[.*?\\]\\((ipfs:\\/\\/[a-zA-Z0-9]+?)\\)/g, replaceIpfsUrl);\n\n    return remarkable.render(body);\n  }, [content]);\n\n  useEffect(() => {\n    document\n      ?.querySelector(\".markdown-body\")\n      ?.querySelectorAll(\"pre>code\")\n      .forEach((code) => {\n        code.parentElement?.classList.add(\"rounded-lg\");\n        const copyButton = document.createElement(\"a\");\n        const icon = document.createElement(\"i\");\n        icon.classList.add(\"copy\");\n        icon.classList.add(\"text-skin-text\");\n        icon.classList.add(\"iconcopy\");\n        icon.classList.add(\"iconfont\");\n        copyButton.appendChild(icon);\n        copyButton.addEventListener(\"click\", () => {\n          const codeText = (code as HTMLElement).innerText.trim();\n          copyToClipboard(codeText);\n        });\n        code.appendChild(copyButton);\n      });\n  }, []);\n\n  return <div className=\"markdown-body\" dangerouslySetInnerHTML={{ __html: html }} />;\n}\n","export function isImage(fileType: string): boolean {\n  return !!fileType.match(\"image.*\");\n}\n\nexport function isVideo(fileType: string): boolean {\n  return !!fileType.match(\"video.*\");\n}\n\nexport function isAudio(fileType: string): boolean {\n  return !!fileType.match(\"audio.*\");\n}\n\nexport function isJSON(fileType: string): boolean {\n  return fileType === \"application/json\";\n}\n\nexport function isPDF(fileType: string): boolean {\n  return fileType === \"application/pdf\";\n}\n\nexport function isText(fileType: string): boolean {\n  return fileType === \"text/plain\";\n}\n\nexport function isJavascript(fileType: string): boolean {\n  return fileType === \"text/javascript\";\n}\n\nexport function isExcel(fileType: string): boolean {\n  return (\n    fileType === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" ||\n    fileType === \"application/vnd.ms-excel\"\n  );\n}\n\nexport function isDoc(fileType: string): boolean {\n  return (\n    fileType === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" ||\n    fileType === \"application/msword\"\n  );\n}\n\nexport function getFileType(fileType: string): string {\n  if (isImage(fileType)) return \"image\";\n  if (isVideo(fileType)) return \"video\";\n  if (isAudio(fileType)) return \"audio\";\n\n  if (\n    isJSON(fileType) ||\n    isPDF(fileType) ||\n    isText(fileType) ||\n    isJavascript(fileType) ||\n    isExcel(fileType) ||\n    isDoc(fileType)\n  )\n    return \"other\";\n\n  return \"unKnow\";\n}\n\nexport function isValidUrl(urlString: string): boolean {\n  const reg = new RegExp(/http(s)?:\\/\\/([\\w-]+\\.)+[\\w-]+(\\/[\\w- ./?%&=]*)?/);\n  return reg.test(urlString);\n}\n","import { useMemo, useState } from \"react\";\nimport { network, NETWORK, host } from \"constants/index\";\nimport { t } from \"@lingui/macro\";\nimport { createVotingBatch, createVotingChunk, commitVotingChunk } from \"@w2e/hooks\";\nimport { ResultStatus } from \"@w2e/types\";\nimport { useTips, MessageTypes } from \"hooks/useTips\";\n\nexport interface UploadChunkRequest {\n  batch_id: bigint;\n  chunk: Blob;\n  canisterId: string;\n  projectId: string;\n}\n\nconst uploadChunk = async ({ batch_id, chunk, canisterId, projectId }: UploadChunkRequest) => {\n  const { data } = await createVotingChunk(\n    true,\n    canisterId,\n    {\n      batch_id,\n      content: [...new Uint8Array(await chunk.arrayBuffer())],\n    },\n    projectId,\n  );\n\n  return data;\n};\n\nexport interface FileUploadResult {\n  loading: boolean;\n  error: string;\n  data: { filePath: string; batchId: bigint };\n}\n\nexport type UploadCallbackProps = {\n  file: File;\n  canisterId: string;\n  projectId: string;\n};\n\nexport default function useVotingImageUpload(): [\n  FileUploadResult,\n  ({ file, canisterId, projectId }: UploadCallbackProps) => Promise<\n    | {\n        filePath: string;\n        batchId: bigint;\n      }\n    | undefined\n  >,\n] {\n  const [openTip] = useTips();\n  const [fileError, setFileError] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [filePath, setFilePath] = useState<string>(\"\");\n  const [batchId, setBatchId] = useState<bigint>(BigInt(0));\n\n  const fileUploadCallback = async ({ file, canisterId, projectId }: UploadCallbackProps) => {\n    if (uploading) return;\n\n    setUploading(true);\n\n    const batchResult = (await createVotingBatch(true, canisterId, projectId)).data;\n\n    if (!batchResult) {\n      setUploading(false);\n      return;\n    }\n\n    const { batch_id } = batchResult;\n\n    const promises: Promise<{ chunk_id: bigint } | undefined>[] = [];\n\n    const chunkSize = 700000;\n\n    for (let start = 0; start < file.size; start += chunkSize) {\n      const chunk = file.slice(start, start + chunkSize);\n\n      promises.push(\n        uploadChunk({\n          batch_id,\n          chunk,\n          canisterId,\n          projectId,\n        }),\n      );\n    }\n\n    const chunkIds = await Promise.all(promises)\n      .then((result) => {\n        return (result.filter((ele) => !!ele?.chunk_id) as { chunk_id: bigint }[]).map((ele) => ele.chunk_id);\n      })\n      .catch((err) => {\n        console.error(err);\n        setFileError(t`Failed to upload, please try again`);\n        setUploading(false);\n        return undefined;\n      });\n\n    if (!chunkIds) {\n      setUploading(false);\n      return;\n    }\n\n    const { status, message } = await commitVotingChunk(\n      true,\n      canisterId,\n      {\n        batch_id,\n        chunk_ids: chunkIds,\n        content_type: file.type,\n      },\n      projectId,\n    );\n\n    if (status === ResultStatus.ERROR) {\n      openTip(t`Failed to upload: ${message}`, MessageTypes.error);\n      setUploading(false);\n      return;\n    }\n\n    setUploading(false);\n\n    const filePath =\n      network === NETWORK.IC\n        ? `https://${canisterId}.raw.icp0.io/${batch_id}`\n        : network === NETWORK.LOCAL\n        ? // TODO get from process port\n          `http://localhost:3000/dfx_image/${batch_id}?canisterId=${canisterId}`\n        : `${host}/${batch_id}?canisterId=${canisterId}`;\n\n    setFilePath(filePath);\n    setBatchId(batch_id);\n\n    return { filePath, batchId };\n  };\n\n  return useMemo(\n    () => [\n      {\n        loading: uploading,\n        error: fileError,\n        data: { filePath, batchId },\n      },\n      fileUploadCallback,\n    ],\n    [uploading, filePath, batchId, fileUploadCallback],\n  );\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar UploadCloud = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"16 16 12 12 8 16\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"12\",\n    x2: \"12\",\n    y2: \"21\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.39 18.39A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.3\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"16 16 12 12 8 16\"\n  }));\n});\nUploadCloud.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nUploadCloud.displayName = 'UploadCloud';\nexport default UploadCloud;","import React, { useEffect, useRef, useState } from \"react\";\nimport { Grid, Box, Input, Typography, CircularProgress } from \"@mui/material\";\nimport { useTheme, makeStyles } from \"@mui/styles\";\nimport { Theme } from \"@mui/material/styles\";\nimport useVotingImageUpload from \"hooks/useVotingImageUpload\";\nimport { getFileType } from \"utils/type\";\nimport { useErrorTip } from \"hooks/useTips\";\nimport { t, Trans } from \"@lingui/macro\";\nimport { UploadCloud } from \"react-feather\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return {\n    textarea: {\n      background: \"transparent\",\n      width: \"100% !important\",\n      border: \"none\",\n      minHeight: \"180px\",\n      outline: \"none\",\n      color: theme.palette.text.secondary,\n      font: \"inherit\",\n      padding: \"0 10px\",\n    },\n  };\n});\n\nconst fileSizeCheck = (limit: number, file: File) => {\n  if (file.size > limit) return false;\n  return true;\n};\n\nexport default function Markdown({\n  limit = 14400,\n  onChange,\n  maxFileSize = 2 * 1024 * 1024,\n  fileCanisterId,\n  projectId,\n}: {\n  limit?: number;\n  maxFileSize?: number;\n  onChange?: (value: string) => void;\n  fileCanisterId: string;\n  projectId: string;\n}) {\n  const classes = useStyles();\n  const theme = useTheme() as Theme;\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n  const [openErrorTip] = useErrorTip();\n\n  const [value, setValue] = useState(\"\");\n  const [file, setFile] = useState<File | null>(null);\n\n  const [uploadResult, upload] = useVotingImageUpload();\n\n  const injectImageToBody = (path: string) => {\n    const cursorPosition = textareaRef.current?.selectionStart;\n\n    const currentValue = value;\n    const currentBodyWithImage = `${currentValue?.substring(0, cursorPosition)} \\n![${file?.name}](${path})\n      ${currentValue?.substring(cursorPosition as number)}`;\n\n    setValue(currentBodyWithImage);\n    if (onChange) onChange(currentBodyWithImage);\n  };\n\n  useEffect(() => {\n    if (!uploadResult.loading && !!uploadResult.data.filePath) {\n      injectImageToBody(uploadResult.data.filePath);\n    }\n  }, [uploadResult.data.filePath]);\n\n  const handleDrop = (e: React.DragEvent) => {\n    e.preventDefault();\n\n    if (uploadResult.loading) return;\n\n    for (let i = 0; i < e.dataTransfer.files.length; i++) {\n      const item = e.dataTransfer.files[i];\n      if (item.type.startsWith(\"image/\")) {\n        if (!fileSizeCheck(maxFileSize, item)) {\n          openErrorTip(t`File size limit is 2M`);\n          return;\n        }\n        setFile(item);\n        upload({\n          file: item,\n          canisterId: fileCanisterId,\n          projectId,\n        });\n      }\n    }\n  };\n\n  const handlePaste = (e: React.ClipboardEvent) => {\n    if (uploadResult.loading) return;\n    for (let i = 0; i < e.clipboardData.items.length; ++i) {\n      const item = e.clipboardData.items[i];\n      if (item.kind === \"file\" && item.type.startsWith(\"image/\")) {\n        const file = item.getAsFile();\n\n        if (file && !fileSizeCheck(maxFileSize, file)) {\n          openErrorTip(t`File size limit is 2M`);\n          return;\n        }\n\n        if (file) {\n          setFile(file);\n          upload({\n            projectId,\n            file,\n            canisterId: fileCanisterId,\n          });\n        }\n      }\n    }\n  };\n\n  const handleTextareaChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setValue(event.target.value);\n    if (onChange) onChange(event.target.value);\n  };\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (uploadResult.loading) return;\n\n    event.preventDefault();\n\n    const targetFile = event.target.files?.[0];\n    const fileType = getFileType(targetFile?.type ?? \"\");\n\n    if (targetFile && !fileSizeCheck(maxFileSize, targetFile)) {\n      openErrorTip(t`File size limit is 2M`);\n      return;\n    }\n\n    if (!targetFile || fileType !== \"image\") return;\n\n    setFile(targetFile);\n    upload({\n      projectId,\n      file: targetFile,\n      canisterId: fileCanisterId,\n    });\n  };\n\n  return (\n    <Box>\n      <Grid container justifyContent=\"space-between\">\n        <Typography>\n          <Trans>Description</Trans>\n        </Typography>\n        <Typography>\n          {value.length}/{limit}\n        </Typography>\n      </Grid>\n\n      <Box\n        sx={{\n          borderRadius: \"8px\",\n          border: `1px solid ${theme.palette.background.level4}`,\n          marginTop: \"10px\",\n          padding: \"5px 0 0 0\",\n        }}\n      >\n        <Box onDrop={handleDrop}>\n          <textarea\n            ref={textareaRef}\n            maxLength={limit}\n            onPaste={handlePaste}\n            className={classes.textarea}\n            onChange={handleTextareaChange}\n            value={value}\n          />\n        </Box>\n\n        <Box\n          sx={{\n            position: \"relative\",\n            cursor: \"pointer\",\n            borderTop: `1px solid ${theme.palette.background.level4}`,\n            minHeight: \"32px\",\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          <Input\n            sx={{\n              position: \"absolute\",\n              top: 0,\n              left: 0,\n              width: \"100%\",\n              height: \"100%\",\n              opacity: 0,\n              \"& input\": {\n                cursor: \"pointer\",\n              },\n            }}\n            inputProps={{\n              accept: \"image/jpg, image/jpeg, image/png\",\n              type: \"file\",\n            }}\n            onChange={handleFileChange}\n            disabled={uploadResult.loading}\n          />\n\n          {uploadResult.loading ? (\n            <Grid\n              container\n              alignItems=\"center\"\n              sx={{\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                width: \"100%\",\n                height: \"32px\",\n                zIndex: 1,\n                padding: \"0 10px\",\n              }}\n            >\n              <CircularProgress size={18} sx={{ color: theme.palette.text.secondary }} />\n\n              <Typography\n                sx={{\n                  fontSize: \"12px\",\n                  marginLeft: \"10px\",\n                }}\n              >\n                <Trans>Uploading image</Trans>\n              </Typography>\n            </Grid>\n          ) : (\n            <Typography\n              sx={{\n                width: \"100%\",\n                padding: \"0 10px\",\n                fontSize: \"12px\",\n              }}\n            >\n              <Box\n                component=\"span\"\n                sx={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  \"@media (max-width:520px)\": {\n                    transform: \"scale(0.8)\",\n                  },\n                }}\n              >\n                <Trans>Attach images by dragging & dropping, selecting or pasting them.</Trans>\n                <Box sx={{ width: \"5px\" }} />\n                <UploadCloud size={14} strokeWidth={2} />\n              </Box>\n            </Typography>\n          )}\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","import { Typography, Box } from \"@mui/material\";\nimport BaseMarkdown from \"components/markdown/BaseMarkdown\";\n\nexport default function Preview({ title, content }: { title: string | undefined; content: string | undefined }) {\n  return (\n    <Box>\n      <Typography color=\"text.primary\" fontWeight={700} fontSize=\"26px\" sx={{ marginTop: \"20px\" }}>\n        {title}\n      </Typography>\n\n      {content ? (\n        <>\n          <Box mt=\"20px\">\n            <BaseMarkdown content={content} />\n          </Box>\n        </>\n      ) : null}\n    </Box>\n  );\n}\n","/* eslint-disable no-param-reassign */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from \"react\";\nimport { Grid, Button, Typography, Box, InputAdornment, CircularProgress, Input, useMediaQuery } from \"@mui/material\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { isValidAccount, isValidPrincipal, writeFileOneSheet, millisecond2Nanosecond } from \"@w2e/utils\";\nimport { Wrapper, MainCard, Breadcrumbs, TextButton, FilledTextField, NumberFilledTextField } from \"components/index\";\nimport Identity, { CallbackProps, SubmitLoadingProps } from \"components/Identity\";\nimport { type StatusResult, type ActorIdentity } from \"@w2e/types\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { timeParser } from \"utils/index\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport HighlightOffIcon from \"@mui/icons-material/HighlightOff\";\nimport { useSuccessTip, useErrorTip } from \"hooks/useTips\";\nimport Markdown from \"components/markdown\";\nimport { utils, read } from \"xlsx\";\nimport { useAccountPrincipal, useAccount } from \"store/auth/hooks\";\nimport { createVotingProposal, setVotingProposalPowers } from \"@w2e/hooks\";\nimport { VotingFileCanisterId } from \"constants/canister\";\nimport { Principal } from \"@dfinity/principal\";\nimport Preview from \"components/vote/Preview\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\nimport dayjs from \"dayjs\";\n\nexport type ExcelPower = {\n  \"Address(Account ID or Principal ID)\": string;\n  \"Voting Power\": number | string;\n  __rowNum__: number;\n};\n\nexport type Power = {\n  address: string;\n  power: number | string;\n  __rowNum__: number;\n};\n\nexport type Values = {\n  title: string;\n  content: string;\n  startDateTime: Date | undefined;\n  endDateTime: Date | undefined;\n  options: string[];\n  powers: Power[];\n  invalidPowers: Power[];\n  userAmount: string | number;\n};\n\nexport default function VotingCreateProposal() {\n  const { id: canisterId } = useParams<{ id: string }>();\n  const history = useHistory();\n\n  const account = useAccount();\n  const principal = useAccountPrincipal();\n  const [openSuccessTip] = useSuccessTip();\n  const [openErrorTip] = useErrorTip();\n\n  const [importLoading, setImportLoading] = useState(false);\n  const [preview, setPreview] = useState(false);\n\n  const defaultValues = {\n    options: [\"\"],\n    title: \"\",\n    content: \"\",\n    startDateTime: new Date(new Date().getTime() + 10 * 60 * 1000),\n    endDateTime: new Date(new Date().getTime() + 10 * 24 * 60 * 60 * 1000),\n    powers: [],\n    invalidPowers: [],\n    userAmount: \"\",\n  } as Values;\n\n  const [values, setValues] = useState<Values>(defaultValues);\n\n  const onFiledChange = (value: any, field: string) => {\n    setValues((prevState) => {\n      return {\n        ...prevState,\n        [field]: value,\n      };\n    });\n  };\n\n  const handleOptionsAdd = () => {\n    setValues({\n      ...values,\n      options: [...values.options, \"\"],\n    });\n  };\n\n  const onOptionChange = (value: any, index: number) => {\n    const newOptions = [...values.options];\n\n    newOptions.splice(index, 1, value);\n\n    setValues({\n      ...values,\n      options: newOptions,\n    });\n  };\n\n  const handleOptionDelete = (index: number) => {\n    const newOptions = [...values.options];\n\n    newOptions.splice(index, 1);\n\n    setValues({\n      ...values,\n      options: newOptions,\n    });\n  };\n\n  const handleCreateVote = async (identity: ActorIdentity, { loading }: SubmitLoadingProps) => {\n    if (loading || !principal || !account || !values.startDateTime || !values.endDateTime) return;\n\n    const { status, message, data } = await createVotingProposal(identity, canisterId, {\n      title: values.title,\n      beginTime: BigInt(millisecond2Nanosecond(values.startDateTime.getTime())),\n      endTime: BigInt(millisecond2Nanosecond(values.endDateTime.getTime())),\n      createUser: account,\n      content: values.content,\n      options: values.options.map((option) => ({ k: option, v: BigInt(0) })),\n      userAmount: BigInt(values.userAmount),\n    });\n\n    if (status === \"ok\" && data) {\n      const powers = values.powers.map((item) => ({\n        availablePowers: BigInt(item.power),\n        address: isValidPrincipal(item.address)\n          ? { principal: Principal.fromText(item.address) }\n          : { address: item.address },\n        usedPowers: BigInt(0),\n      }));\n\n      const promises: Promise<StatusResult<boolean>>[] = [];\n\n      for (let i = 0; i < powers.length; i += 20000) {\n        const _powers = powers.slice(i, i + 20000);\n        promises.push(setVotingProposalPowers(identity, canisterId, data, _powers));\n      }\n\n      await Promise.all(promises).catch((err) => {\n        console.error(err);\n      });\n\n      openSuccessTip(t`Created successfully`);\n\n      setValues(defaultValues);\n\n      history.push(`/voting/${canisterId}`);\n    } else {\n      openErrorTip(message);\n    }\n  };\n\n  const handleImportPowers = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    setImportLoading(true);\n\n    const reader = new FileReader();\n    reader.readAsBinaryString(file);\n\n    reader.onload = async (e: any) => {\n      const data = e.target.result;\n\n      const xlsx = read(data, {\n        type: \"binary\",\n      });\n\n      const validPowers: Power[] = [];\n      const invalidPowers: Power[] = [];\n\n      const isValidPower = (power: string | number): boolean => {\n        const num = Number(power);\n        return !isNaN(num);\n      };\n\n      for (let i = 0; i < xlsx.SheetNames.length; i++) {\n        const sheetData = utils.sheet_to_json<ExcelPower>(xlsx.Sheets[xlsx.SheetNames[i]]);\n\n        sheetData.forEach((row) => {\n          const address = row[\"Address(Account ID or Principal ID)\"];\n          const power = row[\"Voting Power\"];\n\n          if ((isValidAccount(address) || isValidPrincipal(address)) && isValidPower(power)) {\n            validPowers.push({\n              address,\n              power,\n              __rowNum__: row.__rowNum__,\n            });\n          } else {\n            invalidPowers.push({\n              address,\n              power,\n              __rowNum__: row.__rowNum__,\n            });\n          }\n        });\n      }\n\n      onFiledChange(validPowers, \"powers\");\n      onFiledChange(invalidPowers, \"invalidPowers\");\n\n      setImportLoading(false);\n\n      // reset input value\n      // @ts-ignore\n      event.target.value = null;\n    };\n  };\n\n  const hasEmptyOption = values.options.filter((option) => !option).length > 0;\n\n  let errorMessage = \"\";\n  if (!values.title) errorMessage = t`Enter the title`;\n  if (!values.content) errorMessage = t`Enter the content`;\n  if (!values.startDateTime || !values.endDateTime) errorMessage = t`Invalid date range`;\n  if (!values.userAmount) errorMessage = t`Enter the amount of voters`;\n  if (!values.options || values.options.length < 2 || hasEmptyOption) errorMessage = t`Invalid options`;\n  if (!values.powers || values.powers.length < 1) errorMessage = t`Import the powers`;\n\n  const down640 = useMediaQuery(\"(max-width:640px)\");\n\n  const handleDownloadTemplate = () => {\n    const json = [\n      {\n        \"Address(Account ID or Principal ID)\": \"b87d05b7cabe506e98015a9ece0c385ba977aaac64bc32952d9b9cfb109c83fe\",\n        \"Voting Power\": 300,\n      },\n      {\n        \"Address(Account ID or Principal ID)\": \"7qzdv-withz-33duz-mufka-bihhf-3hjtq-fh4l6-5imvq-xlpi3-ai5da-tae\",\n        \"Voting Power\": 1000,\n      },\n      {\n        \"Address(Account ID or Principal ID)\": \"49486a5eaa058147cfc5de34932562f0f3ce59bcf43a5de7b48dc65e72216dc5\",\n        \"Voting Power\": 564,\n      },\n      {\n        \"Address(Account ID or Principal ID)\": \"...\",\n        \"Voting Power\": \"...\",\n      },\n      {\n        \"Address(Account ID or Principal ID)\": \"...\",\n        \"Voting Power\": \"...\",\n      },\n    ];\n\n    writeFileOneSheet(json, \"Format of the list of voting power\");\n  };\n\n  return (\n    <Wrapper>\n      <Breadcrumbs prevLabel={t`Project`} currentLabel={t`Create proposal`} prevLink={`/voting/${canisterId}`} />\n\n      <Box mt=\"20px\" />\n\n      <MainCard sx={{ position: \"relative\" }}>\n        <Grid container justifyContent=\"center\">\n          <Box sx={{ width: \"100%\", maxWidth: \"570px\" }}>\n            <Box mt=\"20px\">\n              <Grid container justifyContent=\"flex-end\">\n                <Grid\n                  container\n                  alignItems=\"center\"\n                  justifyContent=\"center\"\n                  sx={{\n                    width: \"68px\",\n                    height: \"28px\",\n                    border: \"1px solid #4F5A84\",\n                    borderRadius: \"8px\",\n                    cursor: \"pointer\",\n                  }}\n                  onClick={() => setPreview(true)}\n                >\n                  <Typography fontSize=\"12px\">\n                    <Trans>Preview</Trans>\n                  </Typography>\n                </Grid>\n              </Grid>\n\n              <Box>\n                <FilledTextField label={<Trans>Title</Trans>} onChange={(value) => onFiledChange(value, \"title\")} />\n              </Box>\n\n              <Box mt=\"20px\">\n                <Markdown\n                  fileCanisterId={VotingFileCanisterId}\n                  projectId={canisterId}\n                  onChange={(value) => onFiledChange(value, \"content\")}\n                />\n              </Box>\n\n              <Box mt=\"20px\">\n                <Typography color=\"text.secondary\">\n                  <Trans>Start/End Time</Trans>\n                </Typography>\n                <Box mt={2}>\n                  <Box\n                    sx={{\n                      display: \"grid\",\n                      gridTemplateColumns: down640 ? \"1fr\" : \"1fr 1fr\",\n                      gap: down640 ? \"20px 0\" : \"0 20px\",\n                    }}\n                  >\n                    <Box>\n                      <LocalizationProvider dateAdapter={AdapterDayjs}>\n                        <DateTimePicker\n                          // @ts-ignore\n                          renderInput={(params: any) => (\n                            <FilledTextField\n                              fullWidth\n                              {...params}\n                              InputProps={{\n                                ...(params?.InputProps ?? {}),\n                              }}\n                              helperText=\"\"\n                            />\n                          )}\n                          value={values.startDateTime}\n                          onChange={(newValue: any) => {\n                            onFiledChange(timeParser(newValue), \"startDateTime\");\n                          }}\n                          minDateTime={dayjs(new Date())}\n                          maxDateTime={values.endDateTime ? dayjs(new Date(values.endDateTime)) : undefined}\n                        />\n                      </LocalizationProvider>\n                    </Box>\n                    <Box>\n                      <LocalizationProvider dateAdapter={AdapterDayjs}>\n                        <DateTimePicker\n                          // @ts-ignore\n                          renderInput={(params: any) => (\n                            <FilledTextField\n                              fullWidth\n                              {...params}\n                              InputProps={{\n                                ...(params?.InputProps ?? {}),\n                              }}\n                              helperText=\"\"\n                            />\n                          )}\n                          value={values.endDateTime}\n                          onChange={(newValue: any) => {\n                            onFiledChange(timeParser(newValue), \"endDateTime\");\n                          }}\n                          minDateTime={values.startDateTime ? dayjs(new Date(values.startDateTime)) : dayjs(new Date())}\n                        />\n                      </LocalizationProvider>\n                    </Box>\n                  </Box>\n                </Box>\n              </Box>\n\n              <Box mt=\"20px\">\n                <NumberFilledTextField\n                  label={<Trans>Amount of voters</Trans>}\n                  value={values.userAmount}\n                  onChange={(value: number) => onFiledChange(value, \"userAmount\")}\n                  numericProps={{\n                    allowNegative: false,\n                    decimalScale: 0,\n                    maxLength: 16,\n                  }}\n                />\n              </Box>\n            </Box>\n\n            <Box mt=\"20px\">\n              <Grid container>\n                <Grid item xs>\n                  <Typography color=\"text.secondary\">\n                    <Trans>Set up the Choices</Trans>\n                  </Typography>\n                </Grid>\n                <Grid\n                  container\n                  alignItems=\"center\"\n                  justifyContent=\"center\"\n                  sx={{\n                    width: \"72px\",\n                    height: \"31px\",\n                    border: \"1px solid #4F5A84\",\n                    borderRadius: \"8px\",\n                    cursor: \"pointer\",\n                  }}\n                  onClick={handleOptionsAdd}\n                >\n                  <AddIcon fontSize=\"small\" />\n                  <Typography color=\"text.primary\">\n                    <Trans>Add</Trans>\n                  </Typography>\n                </Grid>\n              </Grid>\n\n              <Box mt={2}>\n                {values.options.map((option, index) => (\n                  <Box key={index} sx={{ marginBottom: \"10px\", \"&:last-child\": { marginBottom: \"0px\" } }}>\n                    <FilledTextField\n                      value={option}\n                      onChange={(value: any) => onOptionChange(value, index)}\n                      InputProps={{\n                        disableUnderline: true,\n                        inputProps: {\n                          maxLength: 100,\n                        },\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <HighlightOffIcon\n                              sx={{\n                                color: \"#111936\",\n                                fontSize: \"20px\",\n                                cursor: \"pointer\",\n                              }}\n                              onClick={() => handleOptionDelete(index)}\n                            />\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n                  </Box>\n                ))}\n              </Box>\n\n              <Box mt=\"20px\">\n                <Box>\n                  <label htmlFor=\"contained-button-file\">\n                    <Input\n                      id=\"contained-button-file\"\n                      type=\"file\"\n                      inputProps={{\n                        accept: \".xlsx, .xls\",\n                      }}\n                      sx={{\n                        display: \"none\",\n                      }}\n                      onChange={handleImportPowers}\n                    />\n                    <Button\n                      variant=\"outlined\"\n                      component=\"span\"\n                      fullWidth\n                      size=\"large\"\n                      startIcon={importLoading ? <CircularProgress size={24} color=\"inherit\" /> : null}\n                    >\n                      <Trans>Import list of voting power</Trans>\n                    </Button>\n                  </label>\n                  <Grid container justifyContent=\"flex-end\" mt=\"4px\">\n                    <TextButton onClick={handleDownloadTemplate}>\n                      <Trans>Download the template</Trans>\n                    </TextButton>\n                  </Grid>\n                </Box>\n                {!!values.powers?.length || !!values.invalidPowers?.length ? (\n                  <Box\n                    mt={1}\n                    sx={{\n                      textAlign: \"right\",\n                      maxHeight: \"120px\",\n                      overflow: \"hidden auto\",\n                    }}\n                  >\n                    <Typography fontSize=\"12px\">\n                      <Trans>{values.powers.length} valid voters</Trans>\n                    </Typography>\n                    {values.invalidPowers?.length ? (\n                      <Typography fontSize=\"12px\">\n                        <Trans>{values.invalidPowers.length} invalid voters</Trans> (\n                        {values.invalidPowers.reduce((prev, curr) => {\n                          return `${prev ? `${prev}, ` : \"\"}row ${curr.__rowNum__ + 1}`;\n                        }, \"\")}\n                        )\n                      </Typography>\n                    ) : null}\n                  </Box>\n                ) : null}\n              </Box>\n\n              <Box mt=\"20px\">\n                <Identity onSubmit={handleCreateVote}>\n                  {({ submit, loading }: CallbackProps) => (\n                    <Button\n                      onClick={submit}\n                      disabled={loading || !!errorMessage}\n                      fullWidth\n                      variant=\"contained\"\n                      size=\"large\"\n                      startIcon={loading ? <CircularProgress size={24} color=\"inherit\" /> : null}\n                    >\n                      {errorMessage || t`Create proposal`}\n                    </Button>\n                  )}\n                </Identity>\n              </Box>\n            </Box>\n          </Box>\n        </Grid>\n\n        {preview ? (\n          <Box sx={{ position: \"absolute\", top: \"0\", left: \"0\", width: \"100%\", height: \"100%\" }}>\n            <MainCard sx={{ width: \"100%\", height: \"100%\" }}>\n              <Grid container justifyContent=\"center\" sx={{ height: \"100%\", overflow: \"auto\" }}>\n                <Box sx={{ width: \"100%\", maxWidth: \"570px\" }}>\n                  <Grid container justifyContent=\"flex-end\">\n                    <Grid\n                      container\n                      alignItems=\"center\"\n                      justifyContent=\"center\"\n                      sx={{\n                        width: \"68px\",\n                        height: \"28px\",\n                        border: \"1px solid #4F5A84\",\n                        borderRadius: \"8px\",\n                        cursor: \"pointer\",\n                      }}\n                      onClick={() => setPreview(false)}\n                    >\n                      <Typography fontSize=\"12px\">\n                        <Trans>Back</Trans>\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Preview title={values.title} content={values.content} />\n                </Box>\n              </Grid>\n            </MainCard>\n          </Box>\n        ) : null}\n      </MainCard>\n    </Wrapper>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14.59 8 12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'HighlightOff');\n\nexports.default = _default;","import { useCallback } from \"react\";\nimport { isAvailablePageArgs, availableArgsNull, resultFormat } from \"@w2e/utils\";\nimport { votingCanister, votingController, votingFile } from \"@w2e/actor\";\nimport type {\n  ActorIdentity,\n  PaginationResult,\n  ProjectInfo,\n  ProposalInfo,\n  UserVotePowersInfo,\n  UserVoteRecord,\n  VotingFileChunk,\n  CommitBatchArgs,\n  ProposalCreateInfo,\n} from \"@w2e/types\";\nimport { Principal } from \"@dfinity/principal\";\nimport { useCallsData } from \"../useCallData\";\n\nexport async function createVotingCanister(identity: ActorIdentity, args: ProjectInfo) {\n  return resultFormat<boolean>(await (await votingController(identity)).create(args));\n}\n\nexport async function getVotingProjects(offset: number, limit: number) {\n  return resultFormat<PaginationResult<ProjectInfo>>(\n    await (await votingController()).findProjectPage(BigInt(offset), BigInt(limit)),\n  ).data;\n}\n\nexport function useVotingProjects(offset: number, limit: number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!isAvailablePageArgs(offset, limit)) return undefined;\n      return await getVotingProjects(offset, limit);\n    }, [offset, limit]),\n  );\n}\n\nexport async function getVotingProjectDetails(canisterId: string) {\n  return resultFormat<ProjectInfo>(await (await votingCanister(canisterId)).getProject()).data;\n}\n\nexport function useVotingProjectDetails(canisterId: string | undefined) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId) return undefined;\n      return await getVotingProjectDetails(canisterId);\n    }, [canisterId]),\n  );\n}\n\nexport async function createVotingProposal(identity: ActorIdentity, canisterId: string, args: ProposalCreateInfo) {\n  return resultFormat<string>(await (await votingCanister(canisterId, identity)).create(args));\n}\n\nexport async function deleteVotingProposal(identity: ActorIdentity, canisterId: string, proposalId: string) {\n  return resultFormat<boolean>(await (await votingCanister(canisterId, identity)).deleteProposal(proposalId));\n}\n\nexport async function getVotingProposal(canisterId: string, proposalId: string) {\n  return resultFormat<ProposalInfo>(await (await votingCanister(canisterId)).getProposal(proposalId)).data;\n}\n\nexport function useVotingProposal(canisterId: string | undefined, proposalId: string | undefined, reload?: boolean) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !proposalId) return undefined;\n      return await getVotingProposal(canisterId, proposalId);\n    }, [proposalId, canisterId]),\n    reload,\n  );\n}\n\nexport async function getVotingProposals(\n  canisterId: string,\n  address: string | undefined,\n  state: number | undefined,\n  offset: number,\n  limit: number,\n) {\n  return resultFormat<PaginationResult<ProposalInfo>>(\n    await (\n      await votingCanister(canisterId)\n    ).findPage(\n      availableArgsNull<string>(address),\n      availableArgsNull<bigint>(!!state || state === 0 ? BigInt(state) : undefined),\n      BigInt(offset),\n      BigInt(limit),\n    ),\n  ).data;\n}\n\nexport function useVotingProposals(\n  canisterId: string | undefined,\n  address: string | undefined,\n  state: number | undefined,\n  offset: number,\n  limit: number,\n) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !isAvailablePageArgs(offset, limit)) return undefined;\n\n      return await getVotingProposals(canisterId, address, state, offset, limit);\n    }, [canisterId, address, state, offset, limit]),\n  );\n}\n\nexport async function setVotingProposalState(\n  identity: ActorIdentity,\n  canisterId: string,\n  proposalId: string,\n  state: number,\n) {\n  return resultFormat<boolean>(await (await votingCanister(canisterId, identity)).setState(proposalId, BigInt(state)));\n}\n\nexport async function setVotingProposalPowers(\n  identity: ActorIdentity,\n  canisterId: string,\n  proposalId: string,\n  powers: UserVotePowersInfo[],\n) {\n  return resultFormat<boolean>(await (await votingCanister(canisterId, identity)).setVotePower(proposalId, powers));\n}\n\nexport async function voting(\n  identity: ActorIdentity,\n  canisterId: string,\n  proposalId: string,\n  value: string,\n  powers: number,\n) {\n  return resultFormat<boolean>(\n    await (await votingCanister(canisterId, identity)).vote(proposalId, value, BigInt(powers)),\n  );\n}\n\nexport async function getVotingTransactions(canisterId: string, proposalId: string, offset: number, limit: number) {\n  return resultFormat<PaginationResult<UserVoteRecord>>(\n    await (await votingCanister(canisterId)).findRecordPage(proposalId, BigInt(offset), BigInt(limit)),\n  ).data;\n}\n\nexport function useVotingTransactions(\n  canisterId: string | undefined,\n  proposalId: string | undefined,\n  offset: number,\n  limit: number,\n) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!isAvailablePageArgs(offset, limit) || !canisterId || !proposalId) return undefined;\n\n      return await getVotingTransactions(canisterId!, proposalId!, offset, limit);\n    }, [offset, limit, proposalId, canisterId]),\n  );\n}\n\nexport async function getUserVotingPowers(\n  canisterId: string,\n  proposalId: string | undefined,\n  address: string | undefined,\n  offset: number,\n  limit: number,\n) {\n  return resultFormat<PaginationResult<UserVotePowersInfo>>(\n    await (\n      await votingCanister(canisterId)\n    ).findVotePower(\n      availableArgsNull<string>(proposalId),\n      availableArgsNull<string>(address),\n      BigInt(offset),\n      BigInt(limit),\n    ),\n  ).data;\n}\n\nexport function useUserVotingPowers(\n  canisterId: string | undefined,\n  proposalId: string | undefined,\n  address: string | undefined,\n  offset: number,\n  limit: number,\n  reload?: boolean,\n) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !isAvailablePageArgs(offset, limit)) return undefined;\n\n      return await getUserVotingPowers(canisterId!, proposalId, address, offset, limit);\n    }, [canisterId, address, proposalId, offset, limit]),\n    reload,\n  );\n}\n\nexport async function addVotingAuthorityUsers(identity: ActorIdentity, canisterId: string, user: Principal) {\n  return resultFormat<boolean>(await (await votingCanister(canisterId, identity)).addAdmin(user));\n}\n\nexport async function deleteVotingAuthorityUsers(identity: ActorIdentity, canisterId: string, user: Principal) {\n  return resultFormat<boolean>(await (await votingCanister(canisterId, identity)).deleteAdmin(user));\n}\n\nexport async function getVotingAuthorityUsers(canisterId: string, offset: number, limit: number) {\n  return resultFormat<PaginationResult<Principal>>(\n    await (await votingCanister(canisterId)).getAdminList(BigInt(offset), BigInt(limit)),\n  ).data;\n}\n\nexport function useVotingAuthorityUsers(\n  canisterId: string | undefined,\n  offset: number,\n  limit: number,\n  reload?: boolean,\n) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !isAvailablePageArgs(offset, limit)) return undefined;\n      return await getVotingAuthorityUsers(canisterId!, offset, limit);\n    }, [canisterId, offset, limit]),\n    reload,\n  );\n}\n\n// -------------- Voting file --------------\n\nexport async function createVotingBatch(identity: ActorIdentity, canisterId: string, projectId: string) {\n  return resultFormat<{\n    batch_id: bigint;\n  }>(await (await votingFile(canisterId, identity)).create_batch(projectId));\n}\n\nexport async function createVotingChunk(\n  identity: ActorIdentity,\n  canisterId: string,\n  chunk: VotingFileChunk,\n  projectId: string,\n) {\n  return resultFormat<{\n    chunk_id: bigint;\n  }>(await (await votingFile(canisterId, identity)).create_chunk(chunk, projectId));\n}\n\nexport async function commitVotingChunk(\n  identity: ActorIdentity,\n  canisterId: string,\n  args: CommitBatchArgs,\n  projectId: string,\n) {\n  const result = await (await votingFile(canisterId, identity)).commit_batch(args, projectId);\n\n  return resultFormat<boolean>(result === undefined);\n}\n\n// -------------- Voting file --------------\n","export const ICP_ADDRESS_LENGTH = 64;\n\nexport function isValidAccount(address: string): boolean {\n  return (\n    /^[0-9a-fA-F]+$/.test(address) && ICP_ADDRESS_LENGTH === address.length\n  );\n}\n","import dayjs from \"dayjs\";\nimport { SECONDS_IN_DAY } from \"@w2e/constants\";\n\nexport function nanosecond2Millisecond(time: string | number | bigint) {\n  return Number(BigInt(time) / BigInt(1000000));\n}\n\nexport function millisecond2Nanosecond(time: string | number | bigint) {\n  return Number(BigInt(time) * BigInt(1000000));\n}\n\nexport function timestampFormat(timestamp: bigint | string | number, format = \"YYYY-MM-DD HH:mm:ss\"): string {\n  if (!timestamp) return \"\";\n\n  const newTimestamp = Number(String(timestamp).substr(0, 13));\n  return dayjs(newTimestamp).format(format);\n}\n\nexport const secondsToDays = (seconds: number): number => seconds / SECONDS_IN_DAY;\nexport const daysToSeconds = (days: number): number => Math.round(days * SECONDS_IN_DAY);\n","import { utils, writeFile } from \"xlsx\";\n\nexport function writeFileOneSheet(\n  data: any[],\n  fileName: string,\n  sheetName: string = \"Sheet\"\n) {\n  const sheet = utils.json_to_sheet(data);\n\n  const wb = utils.book_new();\n  utils.book_append_sheet(wb, sheet, sheetName);\n  writeFile(wb, `${fileName}.xlsx`);\n}\n"],"names":["remarkable","Remarkable","html","breaks","typographer","linkTarget","use","linkify","BaseMarkdown","_ref","content","useMemo","body","render","useEffect","_document","_document$querySelect","document","querySelector","querySelectorAll","forEach","code","_code$parentElement","parentElement","classList","add","copyButton","createElement","icon","appendChild","addEventListener","codeText","innerText","trim","copyToClipboard","_jsx","className","dangerouslySetInnerHTML","__html","getFileType","fileType","match","isImage","isVideo","isAudio","isJSON","isPDF","isText","isJavascript","isExcel","isDoc","uploadChunk","async","batch_id","chunk","canisterId","projectId","data","createVotingChunk","Uint8Array","arrayBuffer","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","UploadCloud","forwardRef","ref","_ref$color","color","_ref$size","size","rest","React","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","x1","y1","x2","y2","d","propTypes","PropTypes","displayName","useStyles","makeStyles","theme","textarea","background","border","minHeight","outline","palette","text","secondary","font","padding","fileSizeCheck","limit","file","Markdown","onChange","maxFileSize","fileCanisterId","classes","useTheme","textareaRef","useRef","openErrorTip","useErrorTip","value","setValue","useState","setFile","uploadResult","upload","openTip","useTips","fileError","setFileError","uploading","setUploading","filePath","setFilePath","batchId","setBatchId","BigInt","fileUploadCallback","_ref2","batchResult","createVotingBatch","promises","chunkSize","start","slice","push","chunkIds","Promise","all","then","result","filter","ele","chunk_id","map","catch","err","console","error","i18n","_","id","status","message","commitVotingChunk","chunk_ids","content_type","type","ResultStatus","ERROR","values","MessageTypes","network","NETWORK","IC","concat","LOCAL","host","loading","useVotingImageUpload","path","_textareaRef$current","cursorPosition","current","selectionStart","currentValue","currentBodyWithImage","substring","name","injectImageToBody","_jsxs","Box","children","Grid","container","justifyContent","Typography","Trans","sx","borderRadius","level4","marginTop","onDrop","e","preventDefault","dataTransfer","files","item","startsWith","maxLength","onPaste","clipboardData","items","kind","getAsFile","event","position","cursor","borderTop","display","alignItems","Input","top","left","opacity","inputProps","accept","_event$target$files","_targetFile$type","targetFile","disabled","zIndex","CircularProgress","fontSize","marginLeft","component","transform","Preview","title","fontWeight","_Fragment","mt","VotingCreateProposal","_values$powers","_values$invalidPowers","_values$invalidPowers2","useParams","history","useHistory","account","useAccount","principal","useAccountPrincipal","openSuccessTip","useSuccessTip","importLoading","setImportLoading","preview","setPreview","defaultValues","options","startDateTime","Date","getTime","endDateTime","powers","invalidPowers","userAmount","setValues","onFiledChange","field","prevState","hasEmptyOption","option","errorMessage","down640","useMediaQuery","Wrapper","Breadcrumbs","prevLabel","currentLabel","prevLink","MainCard","maxWidth","onClick","FilledTextField","label","VotingFileCanisterId","gridTemplateColumns","gap","LocalizationProvider","dateAdapter","AdapterDayjs","DateTimePicker","renderInput","params","_params$InputProps","fullWidth","InputProps","helperText","newValue","timeParser","minDateTime","dayjs","maxDateTime","undefined","_params$InputProps2","NumberFilledTextField","numericProps","allowNegative","decimalScale","xs","handleOptionsAdd","AddIcon","index","marginBottom","onOptionChange","newOptions","splice","disableUnderline","endAdornment","InputAdornment","HighlightOffIcon","handleOptionDelete","htmlFor","reader","FileReader","readAsBinaryString","onload","xlsx","read","validPowers","isValidPower","power","num","Number","isNaN","SheetNames","utils","sheet_to_json","Sheets","row","address","isValidAccount","isValidPrincipal","__rowNum__","Button","variant","startIcon","TextButton","handleDownloadTemplate","writeFileOneSheet","textAlign","maxHeight","overflow","0","reduce","prev","curr","Identity","onSubmit","identity","createVotingProposal","beginTime","millisecond2Nanosecond","endTime","createUser","k","v","availablePowers","Principal","fromText","usedPowers","_powers","setVotingProposalPowers","submit","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","createVotingCanister","args","resultFormat","votingController","create","useVotingProjects","offset","useCallsData","useCallback","__awaiter","isAvailablePageArgs","findProjectPage","getVotingProjects","useVotingProjectDetails","votingCanister","getProject","getVotingProjectDetails","deleteVotingProposal","proposalId","deleteProposal","useVotingProposal","reload","getProposal","getVotingProposal","useVotingProposals","state","findPage","availableArgsNull","getVotingProposals","setVotePower","voting","vote","getVotingTransactions","findRecordPage","getUserVotingPowers","findVotePower","useUserVotingPowers","addVotingAuthorityUsers","user","addAdmin","deleteVotingAuthorityUsers","deleteAdmin","useVotingAuthorityUsers","getAdminList","getVotingAuthorityUsers","votingFile","create_batch","create_chunk","commit_batch","ICP_ADDRESS_LENGTH","test","nanosecond2Millisecond","time","timestampFormat","timestamp","format","newTimestamp","String","substr","fileName","sheetName","sheet","json_to_sheet","wb","book_new","book_append_sheet","writeFile"],"sourceRoot":""}
{"version":3,"file":"static/js/7626.9e24885f.chunk.js","mappings":"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","sources":["components/Layout/CardContent1120.tsx","../packages/ui/src/components/Modal/Modal.tsx","views/console/burn/ConfirmBurn.tsx","views/console/burn/index.tsx","../packages/hooks/src/token/calls.ts"],"sourcesContent":["import { Box } from \"@mui/material\";\n\nexport interface CardContent1120Props {\n  children: React.ReactNode;\n}\n\nexport function CardContent1120({ children }: CardContent1120Props) {\n  return (\n    <Box sx={{ display: \"flex\", width: \"100%\", justifyContent: \"center\" }}>\n      <Box sx={{ width: \"100%\", maxWidth: \"1120px\" }}>{children}</Box>\n    </Box>\n  );\n}\n","import React, { ReactNode } from \"react\";\nimport { Box, Button, Dialog, DialogTitle, DialogContent, Typography, useMediaQuery } from \"@mui/material\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport { XCircle } from \"react-feather\";\nimport { Theme } from \"@mui/material/styles\";\nimport { isElement } from \"react-is\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  titleContainer: {\n    position: \"relative\",\n  },\n  title: {\n    fontSize: \"20px\",\n    fontWeight: 700,\n    \"@media (max-width: 640px)\": {\n      fontSize: \"1rem\",\n    },\n    \"&.warning\": {\n      color: \"#D3625B\",\n    },\n  },\n  detailItem: {\n    marginBottom: \"24px\",\n  },\n  value: {\n    textAlign: \"right\",\n    wordBreak: \"break-all\",\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: 0,\n    top: \"50%\",\n    transform: \"translate(0, -50%)\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      color: theme.colors.primaryMain,\n    },\n    \"&.warning\": {\n      color: \"#D3625B\",\n      \"&:hover\": {\n        color: \"#D3625B\",\n      },\n    },\n  },\n  closeButton1: {\n    position: \"absolute\",\n    right: \"5px\",\n    top: \"5px\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      color: theme.colors.primaryMain,\n    },\n    \"&.warning\": {\n      color: \"#D3625B\",\n      \"&:hover\": {\n        color: \"#D3625B\",\n      },\n    },\n  },\n}));\n\nexport interface ModalProps {\n  title?: string | React.ReactNode;\n  showClose?: boolean;\n  children: React.ReactNode;\n  open: boolean;\n  confirmText?: ReactNode;\n  cancelText?: ReactNode;\n  onClose?: () => void;\n  onConfirm?: () => void;\n  onCancel?: () => void;\n  showConfirm?: boolean;\n  showCancel?: boolean;\n  confirmDisabled?: boolean;\n  fullWidth?: boolean;\n  maxWidth?: string;\n  dialogProps?: any;\n  type?: string;\n  background?: string;\n  [key: string]: any;\n}\n\nexport function Modal({\n  title,\n  children,\n  open,\n  confirmText = `Confirm`,\n  cancelText = `Cancel`,\n  onClose,\n  onConfirm,\n  onCancel,\n  showConfirm = false,\n  showCancel = false,\n  showClose = true,\n  confirmDisabled,\n  fullWidth = true,\n  maxWidth = \"sm\",\n  type,\n  background,\n  dialogProps,\n}: ModalProps) {\n  const classes = useStyles();\n  const theme = useTheme() as Theme;\n  const matchDownMD = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  const down760 = useMediaQuery(\"(max-width:760px)\");\n\n  return (\n    <Dialog\n      onClose={onClose}\n      open={open}\n      maxWidth={maxWidth}\n      fullWidth={fullWidth}\n      {...dialogProps}\n      sx={{\n        \"& .MuiDialogTitle-root\": {\n          ...(matchDownMD ? { padding: \"8px 14px\" } : {}),\n          \"&+.MuiDialogContent-root\": {\n            paddingTop: \"5px\",\n            ...(matchDownMD ? { paddingTop: \"5px\" } : {}),\n          },\n        },\n        \"& .MuiDialogContent-root\": {\n          position: \"relative\",\n          ...(matchDownMD ? { padding: \"8px 14px\" } : {}),\n        },\n        ...{\n          \"& .MuiPaper-root\": {\n            ...(background ? { backgroundColor: background } : { backgroundColor: theme.palette.background.level2 }),\n          },\n          ...(dialogProps?.sx || {}),\n        },\n      }}\n    >\n      {title ? (\n        isElement(title) ? (\n          title\n        ) : (\n          <DialogTitle>\n            <Typography sx={{ position: \"relative\" }} component=\"div\">\n              <Typography className={`${classes.title} ${type || \"\"}`} component=\"span\" color=\"textPrimary\">\n                {title}\n              </Typography>\n              {showClose ? <XCircle onClick={onClose} className={`${classes.closeButton} ${type || \"\"}`} /> : null}\n            </Typography>\n          </DialogTitle>\n        )\n      ) : null}\n      <DialogContent>\n        {showClose && !title ? (\n          <XCircle onClick={onClose} className={`${classes.closeButton1} ${type || \"\"} `} />\n        ) : null}\n        {children}\n\n        {showConfirm || showCancel ? (\n          <Box\n            mt=\"40px\"\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              gridTemplateColumns: down760 ? \"1fr\" : showConfirm && showCancel ? \"1fr 1fr\" : \"1fr\",\n              gap: down760 ? \"10px 10px\" : \"0 10px\",\n            }}\n          >\n            {showCancel ? (\n              <Button onClick={onCancel} variant=\"outlined\">\n                {cancelText}\n              </Button>\n            ) : null}\n            {showConfirm ? (\n              <Button disabled={confirmDisabled} variant=\"contained\" onClick={onConfirm}>\n                {confirmText}\n              </Button>\n            ) : null}\n          </Box>\n        ) : null}\n      </DialogContent>\n    </Dialog>\n  );\n}\n","import { Modal } from \"@w2e/ui\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { TokenImage } from \"components/index\";\nimport { Typography, Box, Button, CircularProgress } from \"components/Mui\";\nimport { type TokenInfo } from \"types/token\";\nimport { tokenTransfer } from \"hooks/token/calls\";\nimport { useAccountPrincipal } from \"store/auth/hooks\";\nimport { BigNumber, formatTokenAmount } from \"@w2e/utils\";\nimport { useSuccessTip, useErrorTip, useLoadingTip } from \"hooks/useTips\";\nimport { useState } from \"react\";\n\nexport interface ConfirmBurnProps {\n  open: boolean;\n  onClose: () => void;\n  token: TokenInfo | undefined;\n  mintingAccount:\n  | {\n    owner: string;\n    sub: number[] | undefined;\n  }\n  | undefined;\n  amount: string | undefined;\n  onBurnSuccess?: () => void;\n}\n\nexport function ConfirmBurnModal({ open, onClose, token, mintingAccount, amount, onBurnSuccess }: ConfirmBurnProps) {\n  const principal = useAccountPrincipal();\n\n  const [loading, setLoading] = useState(false);\n  const [openSuccessTip] = useSuccessTip();\n  const [openErrorTip] = useErrorTip();\n  const [openLoadingTip, closeLoadingTip] = useLoadingTip();\n\n  const handleConfirm = async () => {\n    if (loading || amount === undefined || mintingAccount === undefined || !token || !principal) return;\n\n    setLoading(true);\n\n    const loadingKey = openLoadingTip(t`Burning ${amount} ${token.symbol}`);\n    onClose();\n\n    const { status, message } = await tokenTransfer({\n      canisterId: token.canisterId,\n      to: mintingAccount.owner,\n      subaccount: mintingAccount.sub,\n      from: principal.toString(),\n      amount: formatTokenAmount(amount, token.decimals),\n    });\n\n    closeLoadingTip(loadingKey);\n\n    if (status === \"ok\") {\n      openSuccessTip(`Burn ${token.symbol} successfully`);\n      if (onBurnSuccess) onBurnSuccess();\n    } else {\n      openErrorTip(message ?? `Failed to burn ${token.symbol}`);\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <Modal open={open} onClose={onClose} title={t`Confirm Burn`}>\n      <Box sx={{ padding: \"30px 0 0 0\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n        <TokenImage logo={token?.logo} size=\"56px\" />\n        <Typography sx={{ fontSize: \"20px\", fontWeight: 600, color: \"text.primary\", margin: \"12px 0 0 0\" }}>\n          {token?.symbol}\n        </Typography>\n      </Box>\n\n      <Box sx={{ margin: \"32px 0 0 0\" }}>\n        <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Typography>\n            <Trans>Minting Account</Trans>\n          </Typography>\n          <Typography color=\"text.primary\">{mintingAccount?.owner}</Typography>\n        </Box>\n\n        <Box sx={{ display: \"flex\", justifyContent: \"space-between\", margin: \"20px 0 0 0\" }}>\n          <Typography>\n            <Trans>Amount</Trans>\n          </Typography>\n          <Typography color=\"text.primary\">{amount ? new BigNumber(amount).toFormat() : \"--\"}</Typography>\n        </Box>\n      </Box>\n\n      <Box sx={{ margin: \"48px 0 0 0\" }}>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          size=\"large\"\n          startIcon={loading ? <CircularProgress color=\"inherit\" size={30} /> : null}\n          onClick={handleConfirm}\n        >\n          <Trans>Confirm Burn</Trans>\n        </Button>\n      </Box>\n    </Modal>\n  );\n}\n","import { Box, Typography } from \"@mui/material\";\nimport { useState, useMemo } from \"react\";\nimport {\n  MainCard,\n  Breadcrumbs,\n  FilledTextField,\n  NumberFilledTextField,\n  MaxButton,\n  AuthButton,\n  SelectToken,\n} from \"components/index\";\nimport { type AllTokenOfSwapTokenInfo, TOKEN_STANDARD } from \"@w2e/types\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { useTokenMintingAccount } from \"@w2e/hooks\";\nimport { useTokenBalance } from \"hooks/token/useTokenBalance\";\nimport { useAccountPrincipal } from \"store/auth/hooks\";\nimport { useTokenInfo } from \"hooks/token\";\nimport { parseTokenAmount, BigNumber } from \"@w2e/utils\";\nimport { CardContent1120 } from \"components/Layout/CardContent1120\";\n\nimport { ConfirmBurnModal } from \"./ConfirmBurn\";\n\nexport default function ConsoleBurn() {\n  const principal = useAccountPrincipal();\n  const [tokenId, setTokenId] = useState<string | undefined>(undefined);\n  const [amount, setAmount] = useState<string | undefined>(undefined);\n  const [confirmModalOpen, setConfirmModalOpen] = useState<boolean>(false);\n\n  const handleTokenChange = (tokenId: string) => {\n    setTokenId(tokenId);\n  };\n\n  const { result: tokenInfo } = useTokenInfo(tokenId);\n  const { result: mintingAccount } = useTokenMintingAccount(tokenId);\n  const { result: balance } = useTokenBalance(tokenId, principal);\n\n  const handleMax = () => {\n    if (!balance || !tokenInfo) return;\n\n    setAmount(parseTokenAmount(balance.minus(tokenInfo.transFee.toString()), tokenInfo.decimals).toString());\n  };\n\n  const handleBurnSuccess = () => {\n    setAmount(\"\");\n  };\n\n  const error = useMemo(() => {\n    if (!tokenId) return t`Select a token`;\n    if (!tokenInfo || !balance || !mintingAccount) return t`Waiting for fetch data`;\n    if (!amount) return t`Enter the amount`;\n    if (new BigNumber(amount).isEqualTo(0)) return t`Must be greater than 0`;\n\n    if (parseTokenAmount(balance.minus(tokenInfo.transFee.toString()), tokenInfo.decimals).isLessThan(amount))\n      return t`Insufficient Balance`;\n  }, [amount, balance, tokenInfo, mintingAccount, tokenId]);\n\n  const showMax = useMemo(() => {\n    if (!balance || !tokenInfo) return false;\n    if (!balance.isGreaterThan(tokenInfo.transFee.toString())) return false;\n    return true;\n  }, [balance, tokenInfo]);\n\n  return (\n    <CardContent1120>\n      <Breadcrumbs prevLabel={<Trans>Console</Trans>} prevLink=\"/console\" currentLabel={<Trans>Burn Tool</Trans>} />\n\n      <MainCard sx={{ margin: \"16px 0 0 0\" }}>\n        <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Box sx={{ width: \"100%\", maxWidth: \"474px\", padding: \"28px 0\" }}>\n            <Typography sx={{ fontSize: \"20px\", fontWeight: 700, color: \"text.primary\" }}>\n              <Trans>Confirm Burn</Trans>\n            </Typography>\n\n            <Box sx={{ margin: \"32px 0 0 0\" }}>\n              <Box>\n                <Typography sx={{ fontSize: \"16px\" }}>\n                  <Trans>Token</Trans>\n                </Typography>\n\n                <Box sx={{ margin: \"12px 0 0 0\" }}>\n                  <Box sx={{ height: \"48px\" }}>\n                    <SelectToken\n                      value={tokenId}\n                      filled\n                      search\n                      fullHeight\n                      onTokenChange={handleTokenChange}\n                      filter={(tokenInfo: AllTokenOfSwapTokenInfo) =>\n                        tokenInfo.standard !== TOKEN_STANDARD.ICRC1 && tokenInfo.standard !== TOKEN_STANDARD.ICRC2\n                      }\n                    />\n                  </Box>\n                </Box>\n              </Box>\n\n              <Box sx={{ margin: \"24px 0 0 0\" }}>\n                <Typography sx={{ fontSize: \"16px\" }}>\n                  <Trans>Minting Account</Trans>\n                </Typography>\n\n                <Box sx={{ margin: \"12px 0 0 0\" }}>\n                  <FilledTextField border=\"none\" disabled value={mintingAccount?.owner} />\n                </Box>\n              </Box>\n\n              <Box sx={{ margin: \"24px 0 0 0\" }}>\n                <Typography sx={{ fontSize: \"16px\" }}>\n                  <Trans>Amount</Trans>\n                </Typography>\n\n                <Box sx={{ margin: \"12px 0 0 0\" }}>\n                  <NumberFilledTextField\n                    value={amount}\n                    border=\"none\"\n                    onChange={(value: string) => setAmount(value)}\n                    numericProps={{\n                      thousandSeparator: true,\n                      decimalScale: tokenInfo?.decimals ?? 18,\n                      allowNegative: false,\n                      maxLength: 20,\n                    }}\n                  />\n                </Box>\n              </Box>\n\n              <Box sx={{ margin: \"20px 0 0 0\", display: \"flex\", gap: \"0 8px\", alignItems: \"center\" }}>\n                <Typography>\n                  <Trans>Balance:</Trans>\n                  &nbsp;\n                  <Typography component=\"span\">\n                    {tokenInfo && balance ? parseTokenAmount(balance, tokenInfo.decimals).toFormat() : \"--\"}\n                  </Typography>\n                </Typography>\n                {showMax ? <MaxButton background=\"rgba(86, 105, 220, 0.50)\" onClick={handleMax} /> : null}\n              </Box>\n\n              <Box sx={{ margin: \"34px 0 0 0\" }}>\n                <AuthButton\n                  fullWidth\n                  variant=\"contained\"\n                  size=\"large\"\n                  onClick={() => setConfirmModalOpen(true)}\n                  disabled={error !== undefined}\n                >\n                  {error ?? <Trans>Burn</Trans>}\n                </AuthButton>\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n\n        <ConfirmBurnModal\n          token={tokenInfo}\n          open={confirmModalOpen}\n          onClose={() => setConfirmModalOpen(false)}\n          mintingAccount={mintingAccount}\n          amount={amount}\n          onBurnSuccess={handleBurnSuccess}\n        />\n      </MainCard>\n    </CardContent1120>\n  );\n}\n","import { useCallback } from \"react\";\nimport { isPrincipal, isAvailablePageArgs } from \"@w2e/utils\";\nimport { tokenAdapter } from \"@w2e/token-adapter\";\nimport { Principal } from \"@dfinity/principal\";\nimport type { ActorIdentity, StatusResult } from \"@w2e/types\";\n\nimport { useCallsData } from \"../useCallData\";\n\nexport async function getTokenTotalHolder(canisterId: string | undefined) {\n  return (\n    await tokenAdapter.totalHolders({\n      canisterId: canisterId!,\n    })\n  ).data;\n}\n\nexport function useTokenTotalHolder(canisterId: string | undefined, reload?: boolean) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId) return undefined;\n      return await getTokenTotalHolder(canisterId);\n    }, [canisterId]),\n    reload,\n  );\n}\n\nexport async function getTokenHolders(canisterId: string, offset: number, limit: number) {\n  return (\n    await tokenAdapter.holders({\n      canisterId,\n      params: {\n        offset: BigInt(offset),\n        limit: BigInt(limit),\n      },\n    })\n  ).data;\n}\n\nexport function useTokenHolders(canisterId: string, offset: number, limit: number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !isAvailablePageArgs(offset, limit)) return undefined;\n      return await getTokenHolders(canisterId, offset, limit);\n    }, [offset, limit, canisterId]),\n  );\n}\n\nexport interface getTokenTransactionProps {\n  canisterId: string;\n  account: string | undefined | null | Principal;\n  offset: number;\n  limit: number;\n  capId?: string;\n  witness?: boolean;\n}\n\nexport async function getTokenTransaction({\n  canisterId,\n  account,\n  offset,\n  limit,\n  capId,\n  witness,\n}: getTokenTransactionProps) {\n  return (\n    await tokenAdapter.transactions({\n      canisterId,\n      params: {\n        user: account ? (isPrincipal(account) ? { principal: account } : { address: account }) : undefined,\n        offset,\n        limit,\n        index: undefined,\n        hash: undefined,\n        capId,\n        witness,\n      },\n    })\n  ).data;\n}\n\nexport interface useTokenTransactionsProps {\n  canisterId: string;\n  account: string | undefined | null | Principal;\n  offset: number;\n  limit: number;\n  cap?: boolean;\n  capId?: string;\n  witness?: boolean;\n}\n\nexport function useTokenTransactions({\n  canisterId,\n  account,\n  offset,\n  limit,\n  capId,\n  witness,\n}: useTokenTransactionsProps) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !isAvailablePageArgs(offset, limit)) return undefined;\n\n      return getTokenTransaction({\n        canisterId,\n        account,\n        offset,\n        limit,\n        capId,\n        witness,\n      });\n    }, [offset, limit, canisterId, account, capId, witness]),\n  );\n}\n\nexport async function getTokenSupply(canisterId: string) {\n  return (await tokenAdapter.supply({ canisterId: canisterId! })).data;\n}\n\nexport function useTokenSupply(canisterId: string | undefined, reload?: boolean) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId) return undefined;\n      return await getTokenSupply(canisterId!);\n    }, [canisterId]),\n    reload,\n  );\n}\n\nexport async function getTokenMetadata(canisterId: string) {\n  return (await tokenAdapter.metadata({ canisterId })).data;\n}\n\nexport function useTokenMetadata(canisterId: string | undefined) {\n  return useCallsData(\n    useCallback(async () => await getTokenMetadata(canisterId!), [canisterId]),\n    !!canisterId,\n  );\n}\n\nexport interface Allowance {\n  canisterId: string;\n  account: Principal | string;\n  spenderCanisterId: string;\n  subaccount?: number[];\n}\n\nexport async function allowance({ canisterId, account, spenderCanisterId, subaccount }: Allowance) {\n  return (\n    await tokenAdapter.allowance({\n      canisterId,\n      params: {\n        spender: Principal.fromText(spenderCanisterId),\n        owner: isPrincipal(account) ? { principal: account } : { address: account },\n        subaccount,\n      },\n    })\n  ).data;\n}\n\nexport interface Approve {\n  canisterId: string;\n  identity: ActorIdentity;\n  spenderCanisterId: string;\n  value: number | string | bigint;\n  account: string | Principal | undefined;\n  subaccount?: number[];\n}\n\nexport async function approve({ canisterId, identity, spenderCanisterId, value, account, subaccount }: Approve) {\n  return tokenAdapter.approve({\n    canisterId,\n    identity,\n    params: {\n      spender: Principal.fromText(spenderCanisterId),\n      allowance: BigInt(value),\n      subaccount,\n      account: account!,\n    },\n  });\n}\n\nexport function useApproveCallback(): (approveParams: Approve) => Promise<StatusResult<boolean>> {\n  return useCallback(async ({ canisterId, identity, spenderCanisterId, value, account }: Approve) => {\n    if (!account)\n      return await Promise.resolve({\n        status: \"err\",\n        message: \"Invalid account\",\n      } as StatusResult<boolean>);\n\n    const allowedBalance = await allowance({\n      canisterId,\n      account,\n      spenderCanisterId,\n    });\n\n    if (!allowedBalance || allowedBalance === BigInt(0) || BigInt(value ?? 0) > allowedBalance) {\n      return await approve({\n        canisterId,\n        identity,\n        spenderCanisterId,\n        value,\n        account,\n      });\n    }\n    return await Promise.resolve({\n      status: \"ok\",\n      data: true,\n      message: \"You have approved successfully\",\n    } as StatusResult<boolean>);\n  }, []);\n}\n\nexport async function getTokenMintingAccount(canisterId: string) {\n  return (await tokenAdapter.getMintingAccount({ canisterId })).data;\n}\n\nexport function useTokenMintingAccount(canisterId: string | undefined) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId) return undefined;\n      return await getTokenMintingAccount(canisterId);\n    }, [canisterId]),\n  );\n}\n"],"names":["CardContent1120","_ref","children","_jsx","Box","sx","display","width","justifyContent","maxWidth","useStyles","makeStyles","theme","titleContainer","position","title","fontSize","fontWeight","color","detailItem","marginBottom","value","textAlign","wordBreak","closeButton","right","top","transform","cursor","colors","primaryMain","closeButton1","Modal","open","confirmText","cancelText","onClose","onConfirm","onCancel","showConfirm","showCancel","showClose","confirmDisabled","fullWidth","type","background","dialogProps","classes","useTheme","matchDownMD","useMediaQuery","breakpoints","down","down760","_jsxs","Dialog","Object","assign","padding","paddingTop","backgroundColor","palette","level2","isElement","DialogTitle","Typography","component","className","concat","XCircle","onClick","DialogContent","mt","gridTemplateColumns","gap","Button","variant","disabled","ConfirmBurnModal","token","mintingAccount","amount","onBurnSuccess","principal","useAccountPrincipal","loading","setLoading","useState","openSuccessTip","useSuccessTip","openErrorTip","useErrorTip","openLoadingTip","closeLoadingTip","useLoadingTip","i18n","_","id","flexDirection","alignItems","TokenImage","logo","size","margin","symbol","Trans","owner","BigNumber","toFormat","startIcon","CircularProgress","async","undefined","loadingKey","values","0","status","message","tokenTransfer","canisterId","to","subaccount","sub","from","toString","formatTokenAmount","decimals","ConsoleBurn","_tokenInfo$decimals","tokenId","setTokenId","setAmount","confirmModalOpen","setConfirmModalOpen","result","tokenInfo","useTokenInfo","useTokenMintingAccount","balance","useTokenBalance","error","useMemo","isEqualTo","parseTokenAmount","minus","transFee","isLessThan","showMax","isGreaterThan","Breadcrumbs","prevLabel","prevLink","currentLabel","MainCard","height","SelectToken","filled","search","fullHeight","onTokenChange","filter","standard","TOKEN_STANDARD","ICRC1","ICRC2","FilledTextField","border","NumberFilledTextField","onChange","numericProps","thousandSeparator","decimalScale","allowNegative","maxLength","MaxButton","handleMax","AuthButton","handleBurnSuccess","fulfilled","step","generator","next","e","reject","rejected","throw","done","resolve","then","apply","thisArg","_arguments","useTokenTotalHolder","reload","useCallback","__awaiter","tokenAdapter","totalHolders","data","getTokenTotalHolder","getMintingAccount","getTokenMintingAccount"],"sourceRoot":""}
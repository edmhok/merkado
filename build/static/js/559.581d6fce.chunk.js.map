{"version":3,"file":"static/js/559.581d6fce.chunk.js","mappings":"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","sources":["components/CurrencySelector/button.tsx","components/CurrencySelector/index.tsx","components/swap/SwapUIWrapper.tsx","assets/images/swap/back.tsx","components/swap/SwapFeeSelector.tsx","hooks/swap/useAddLiquidity.ts","components/swap/AddLiquiditySteps.tsx","components/swap/AddLiquidityButton.tsx","assets/images/swap/warning.tsx","components/TokenToggle/index.tsx","utils/computeSurroundingTicks.ts","hooks/swap/usePoolTickData.ts","views/swap-liquidity-v3/liquidity/AddLiquidity/PriceRangeChart/Area.tsx","views/swap-liquidity-v3/liquidity/AddLiquidity/PriceRangeChart/AxisBottom.tsx","views/swap-liquidity-v3/liquidity/AddLiquidity/PriceRangeChart/svg.tsx","views/swap-liquidity-v3/liquidity/AddLiquidity/PriceRangeChart/Brush.tsx","../packages/hooks/src/usePrevious.ts","views/swap-liquidity-v3/liquidity/AddLiquidity/PriceRangeChart/Line.tsx","assets/images/swap/zoomIn.tsx","assets/images/swap/zoomOut.tsx","views/swap-liquidity-v3/liquidity/AddLiquidity/PriceRangeChart/Zoom.tsx","views/swap-liquidity-v3/liquidity/AddLiquidity/PriceRangeChart/Chart.tsx","views/swap-liquidity-v3/liquidity/AddLiquidity/PriceRangeChart/index.tsx","hooks/swap/useDensityChartData.ts","views/swap-liquidity-v3/liquidity/AddLiquidity/SetPriceRange.tsx","views/swap-liquidity-v3/liquidity/AddLiquidity/index.tsx","../packages/hooks/src/swap/usePassCode.ts","../packages/hooks/src/swap/usePassCodeManager.ts"],"sourcesContent":["import { useCallback } from \"react\";\nimport { Grid, Typography, Box } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { KeyboardArrowDown } from \"@mui/icons-material\";\nimport { isDarkTheme } from \"utils\";\nimport Loading from \"components/Loading\";\nimport { Trans } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Token } from \"@w2e/swap-sdk\";\nimport { TokenImage } from \"components/index\";\n\nconst useStyle = (bgGray: boolean) =>\n  makeStyles((theme: Theme) => {\n    return {\n      selectButton: {\n        position: \"relative\",\n        padding: \"0 16px 0 12px\",\n        height: \"44px\",\n        color: \"#ffffff\",\n        cursor: \"pointer\",\n        backgroundColor: isDarkTheme(theme)\n          ? theme.palette.background.level2\n          : bgGray\n            ? theme.colors.lightGray200\n            : \"#ffffff\",\n        borderRadius: `${theme.radius}px`,\n      },\n      selectButtonActive: {\n        padding: \"0 16px\",\n        height: \"44px\",\n        lineHeight: \"44px\",\n        background: theme.themeOption.defaultGradient,\n        color: \"#ffffff\",\n        cursor: \"pointer\",\n        borderRadius: `${theme.radius}px`,\n      },\n      arrow: {\n        color: isDarkTheme(theme) ? \"inherit\" : \"#757575\",\n        \"&.active\": {\n          color: \"#fff\",\n        },\n      },\n    };\n  });\n\nexport interface CurrencySelectorButtonProps {\n  currency: undefined | null | Token;\n  onClick?: () => void;\n  bgGray?: boolean;\n  loading?: boolean;\n  disabled?: boolean;\n}\n\nexport default function CurrencySelectorButton({\n  currency,\n  onClick,\n  bgGray = false,\n  loading,\n  disabled,\n}: CurrencySelectorButtonProps) {\n  const classes = useStyle(bgGray)();\n\n  const handleButtonClick = useCallback(() => {\n    if (loading) return;\n    if (onClick) onClick();\n  }, [loading, onClick]);\n\n  return currency ? (\n    <Grid container className={classes.selectButton} alignItems=\"center\" onClick={handleButtonClick}>\n      <Grid item mr={1} xs>\n        <Grid container alignItems=\"center\" gap=\"0 8px\">\n          <TokenImage logo={currency.logo} size=\"28px\" tokenId={currency.address} />\n          <Typography component=\"span\">{currency.symbol}</Typography>\n        </Grid>\n      </Grid>\n      {!disabled && (\n        <KeyboardArrowDown\n          className={classes.arrow}\n          sx={{\n            fontSize: \"1rem\",\n          }}\n        />\n      )}\n      {loading && <Loading loading={loading} circularSize={20} />}\n    </Grid>\n  ) : (\n    <Box className={classes.selectButtonActive} onClick={handleButtonClick}>\n      <Grid container alignItems=\"center\">\n        <Grid container alignItems=\"center\" item xs>\n          <Trans>Select a token</Trans>\n        </Grid>\n        <KeyboardArrowDown\n          className={`${classes.arrow} active`}\n          sx={{\n            fontSize: \"1rem\",\n          }}\n        />\n      </Grid>\n    </Box>\n  );\n}\n","import { useState, useMemo } from \"react\";\nimport { TokenInfo } from \"types/token\";\nimport { Token } from \"@w2e/swap-sdk\";\nimport { useToken } from \"hooks/useCurrency\";\nimport Selector from \"./selector\";\nimport CurrencySelectButton from \"./button\";\n\nexport interface CurrencySelectorProps {\n  currencyId: string | undefined;\n  onChange: (token: TokenInfo) => void;\n  disabledCurrency?: Token[];\n  bgGray?: boolean;\n  loading?: boolean;\n  disabled?: boolean;\n  activeCurrencies?: Token[];\n  version?: \"v2\" | \"v3\";\n}\n\nexport default function CurrencySelector({\n  currencyId,\n  onChange,\n  disabledCurrency,\n  activeCurrencies,\n  bgGray = false,\n  loading,\n  disabled = false,\n}: CurrencySelectorProps) {\n  const [selectorShow, setSelectorShow] = useState(false);\n\n  const onTokenChange = (token: TokenInfo) => {\n    if (onChange) onChange(token);\n    setSelectorShow(false);\n  };\n\n  const [, token] = useToken(currencyId);\n\n  const disabledCurrencyIds = useMemo(() => {\n    if (disabledCurrency && disabledCurrency.length) {\n      return disabledCurrency.map((currency) => currency?.address);\n    }\n    return [];\n  }, [disabledCurrency]);\n\n  const activeCurrencyIds = useMemo(() => {\n    if (activeCurrencies && activeCurrencies.length) {\n      return activeCurrencies.map((currency) => currency?.address);\n    }\n    return [];\n  }, [activeCurrencies]);\n\n  return (\n    <>\n      <CurrencySelectButton\n        currency={token}\n        onClick={() => {\n          if (disabled) return;\n          setSelectorShow(true);\n        }}\n        bgGray={bgGray}\n        loading={loading}\n        disabled\n      />\n      {selectorShow && (\n        <Selector\n          open={selectorShow}\n          onClose={() => setSelectorShow(false)}\n          onChange={onTokenChange}\n          disabledCurrencyIds={disabledCurrencyIds}\n          activeCurrencyIds={activeCurrencyIds}\n          version=\"v2\"\n        />\n      )}\n    </>\n  );\n}\n","import { Box, Typography, Grid } from \"@mui/material\";\nimport { t } from \"@lingui/macro\";\nimport { Wrapper, TabPanel } from \"components/index\";\nimport React from \"react\";\n// import { INFO_URL } from \"constants/index\";\n\nfunction LinkIcon() {\n  return (\n    <svg width=\"6\" height=\"7\" viewBox=\"0 0 6 7\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.09619 1.5H0.303301V0.5H5.3033H5.8033V1V6H4.8033V2.20711L0.707107 6.3033L0 5.59619L4.09619 1.5Z\"\n        fill=\"#4F5A84\"\n      />\n    </svg>\n  );\n}\n\ntype Button = {\n  id: number | string;\n  value: React.ReactNode;\n  path?: string;\n  key: string;\n};\n\nfunction SwapWrapper({ children, buttons }: { children: React.ReactNode; buttons: Button[] }) {\n  return (\n    <Wrapper>\n      <TabPanel tabs={buttons} />\n      <Box mt={4}>{children}</Box>\n    </Wrapper>\n  );\n}\n\nexport function SwapV2Wrapper({ children }: { children: React.ReactNode }) {\n  const buttons = [\n    { id: 3, value: t`Wrap`, path: \"/swap/v2/wrap\", key: \"/wrap\" },\n    {\n      id: 2,\n      key: \"/swap/v2/liquidity\",\n      value: t`Liquidity V2`,\n      path: \"/swap/v2/liquidity\",\n    },\n    {\n      id: 4,\n      key: \"swap-v3\",\n      value: (\n        <Grid container>\n          <Typography\n            sx={{\n              fontWeight: 600,\n              \"@media (max-width: 640px)\": {\n                fontSize: \"12px\",\n              },\n            }}\n          >\n            Exchange\n          </Typography>\n          <Box sx={{ margin: \"0 0 0 3px\", position: \"relative\", top: \"-4px\" }}>\n            <LinkIcon />\n          </Box>\n        </Grid>\n      ),\n      path: \"/swap\",\n    },\n  ];\n\n  return <SwapWrapper buttons={buttons}>{children}</SwapWrapper>;\n}\n\nexport default function _SwapWrapper({ children }: { children: React.ReactNode }) {\n  const buttons = [\n    { id: 1, value: t`Swap V3`, path: \"/swap\", key: \"/swap\" },\n    {\n      id: 2,\n      key: \"/swap/liquidity\",\n      value: t`Liquidity`,\n      path: \"/swap/liquidity\",\n    },\n    // {\n    //   id: 3,\n    //   key: \"info\",\n    //   value: (\n    //     <Grid container>\n    //       <Typography>Info</Typography>\n    //       <Box sx={{ margin: \"0 0 0 3px\", position: \"relative\", top: \"-4px\" }}>\n    //         <LinkIcon />\n    //       </Box>\n    //     </Grid>\n    //   ),\n    //   link: INFO_URL,\n    // },\n  ];\n\n  return <SwapWrapper buttons={buttons}>{children}</SwapWrapper>;\n}\n","import { SvgIcon, SvgIconProps } from \"@mui/material\";\n\nexport default function BackIcon(props: SvgIconProps) {\n  return (\n    <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M14.2002 6L8.2002 12L14.2002 18L15.6102 16.59L11.0302 12L15.6102 7.41L14.2002 6Z\" />\n    </SvgIcon>\n  );\n}\n","import { useState, useMemo, useCallback, memo } from \"react\";\nimport { Grid, Box, Typography } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { usePoolsTokenAmountsFromKey } from \"hooks/swap/v3Calls\";\nimport { isDarkTheme } from \"utils\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\nimport { BigNumber } from \"@w2e/utils\";\nimport { Token, FeeAmount } from \"@w2e/swap-sdk\";\n\nexport const FEE_DESCRIPTION = {\n  [FeeAmount.LOW]: t`Best for stable pairs`,\n  [FeeAmount.MEDIUM]: t`Best for most pairs`,\n  [FeeAmount.HIGH]: t`Best for exotic pairs`,\n};\n\nconst NO_LIQUIDITY = \"NO_LIQUIDITY\";\n\nexport type LOCAL_FEE = {\n  feeTier: FeeAmount;\n  description: string;\n};\n\nconst LOCAL_FEES: LOCAL_FEE[] = [\n  {\n    feeTier: FeeAmount.LOW,\n    description: FEE_DESCRIPTION[FeeAmount.LOW],\n  },\n  {\n    feeTier: FeeAmount.MEDIUM,\n    description: FEE_DESCRIPTION[FeeAmount.MEDIUM],\n  },\n  {\n    feeTier: FeeAmount.HIGH,\n    description: FEE_DESCRIPTION[FeeAmount.HIGH],\n  },\n];\n\nexport const feeFormat = (feeValue: number) => {\n  return `${new BigNumber(feeValue).div(10000).toString()}%`;\n};\n\nconst useStyle = makeStyles((theme: Theme) => {\n  const border = \"1px solid #202020\";\n\n  return {\n    feeItem: {\n      padding: \"13px 12px\",\n      border: isDarkTheme(theme) ? border : `1px solid ${theme.colors.lightGray200BorderColor}`,\n      borderRadius: \"12px\",\n      cursor: \"pointer\",\n      backgroundColor: isDarkTheme(theme) ? \"transparent\" : \"#fff\",\n      \"&.active\": {\n        border: `2px solid #5669DC`,\n      },\n    },\n    button: {\n      width: \"auto\",\n      padding: \"7px 9px\",\n      backgroundColor: isDarkTheme(theme) ? theme.palette.background.level4 : theme.colors.lightGray200,\n      borderRadius: \"8px\",\n      cursor: \"pointer\",\n      outline: \"none\",\n      border: \"none\",\n      color: theme.themeOption.textPrimary,\n      [theme.breakpoints.down(\"sm\")]: {\n        fontSize: \"10px\",\n      },\n    },\n    feeButton: {\n      [theme.breakpoints.down(\"sm\")]: {\n        display: \"flex\",\n        alignItems: \"center\",\n        textAlign: \"center\",\n      },\n    },\n    activeFee: {\n      border: isDarkTheme(theme) ? border : `1px solid ${theme.colors.lightGray200BorderColor}`,\n      borderRadius: \"12px\",\n      backgroundColor: isDarkTheme(theme) ? \"transparent\" : \"#fff\",\n    },\n  };\n});\n\nexport type FeeItem = {\n  feeTier: FeeAmount;\n  description: string;\n  balance0?: BigNumber;\n  balance1?: BigNumber;\n};\n\nexport const FeeItemComponent = memo(\n  ({\n    fee,\n    onClick,\n    activeFee,\n    getPercentage,\n  }: {\n    fee: FeeItem;\n    onClick: (value: FeeItem) => void;\n    activeFee: FeeAmount;\n    getPercentage: (value: FeeItem) => string;\n  }) => {\n    const classes = useStyle();\n\n    const liquidityPercentage = getPercentage(fee);\n\n    return (\n      <Box\n        className={`${classes.feeItem} ${Number(fee.feeTier) === activeFee ? \"active\" : \"\"}`}\n        onClick={() => onClick(fee)}\n      >\n        <Typography variant=\"h4\" color=\"textPrimary\">\n          <Trans>{feeFormat(fee.feeTier)} fee</Trans>\n        </Typography>\n        <Box mt={1}>\n          <Typography fontSize=\"12px\" align=\"left\">\n            {fee.description}\n          </Typography>\n        </Box>\n        <Box mt={1}>\n          <Typography\n            className={`${classes.button} ${classes.feeButton}`}\n            component=\"span\"\n            color=\"textPrimary\"\n            fontSize=\"12px\"\n          >\n            {liquidityPercentage === NO_LIQUIDITY ? t`Not created` : t`${liquidityPercentage} selected`}\n          </Typography>\n        </Box>\n      </Box>\n    );\n  },\n);\n\nexport interface SwapFeeSelectorProps {\n  currencyA: Token | undefined;\n  currencyB: Token | undefined;\n  defaultActiveFee?: FeeAmount;\n  onSelect: (value: FeeAmount) => void;\n}\n\nexport default function SwapFeeSelector({\n  currencyA,\n  currencyB,\n  defaultActiveFee = FeeAmount.MEDIUM,\n}: SwapFeeSelectorProps) {\n  const classes = useStyle();\n\n  const [activeFee] = useState<FeeAmount>(defaultActiveFee);\n  // const [feeShow, setFeeToggleShow] = useState(false);\n\n  const feeAmountKeys = useMemo(() => {\n    return LOCAL_FEES.map((fee) => {\n      if (!currencyA?.address || !currencyB?.address) return undefined;\n\n      return {\n        fee: fee.feeTier,\n        token0: currencyA.address,\n        token1: currencyB.address,\n      };\n    });\n  }, [LOCAL_FEES, currencyA, currencyB]);\n\n  const { result: tvl } = usePoolsTokenAmountsFromKey(feeAmountKeys);\n\n  const fees = useMemo(() => {\n    return LOCAL_FEES.map((fee, index) => {\n      if (tvl && tvl[index]) {\n        return {\n          ...tvl[index],\n          ...fee,\n        };\n      }\n\n      return {\n        ...fee,\n      };\n    });\n  }, [tvl, LOCAL_FEES]);\n\n  const getFee = (feeValue: FeeAmount) => {\n    return fees.filter((fee) => fee.feeTier === feeValue)[0];\n  };\n\n  const activeFeeObject = getFee(activeFee);\n\n  // const handleSelectFee = (fee: LOCAL_FEE) => {\n  //   setActiveFee(fee.feeTier);\n  //   onSelect(fee.feeTier);\n  // };\n\n  // const feeToggleShow = () => {\n  //   setFeeToggleShow(!feeShow);\n  // };\n\n  const totalValueLocked = fees.reduce(\n    (accumulator, currentValue) => {\n      return [\n        new BigNumber(accumulator[0]).plus(currentValue.balance0 ?? 0),\n        new BigNumber(accumulator[1]).plus(currentValue.balance1 ?? 0),\n      ];\n    },\n    [new BigNumber(0), new BigNumber(0)],\n  );\n\n  const getPercentage = useCallback(\n    (fee: FeeItem) => {\n      if (!totalValueLocked) return \"NO_LIQUIDITY\";\n      if (new BigNumber(fee.balance0 ?? 0).isEqualTo(0)) return \"NO_LIQUIDITY\";\n\n      return `${new BigNumber(fee.balance0 ?? 0)\n        .plus(fee.balance1 ?? 0)\n        .div(new BigNumber(totalValueLocked[0]).plus(totalValueLocked[1]))\n        .multipliedBy(100)\n        .toFixed(0, 4)}%`;\n    },\n    [totalValueLocked],\n  );\n\n  const currentLiquidityPercentage = getPercentage(activeFeeObject);\n\n  return (\n    <>\n      <Grid container sx={{ p: 2 }} className={classes.activeFee}>\n        <Grid item xs={8}>\n          <Typography variant=\"h4\" color=\"textPrimary\">\n            <Trans>{feeFormat(activeFeeObject.feeTier)} fee</Trans>\n          </Typography>\n          <Box mt={1}>\n            <Typography className={classes.button} component=\"span\" color=\"textPrimary\" fontSize=\"12px\">\n              {currentLiquidityPercentage === NO_LIQUIDITY ? t`Not created` : t`${currentLiquidityPercentage} selected`}\n            </Typography>\n          </Box>\n        </Grid>\n        {/* <Grid item xs={4} container justifyContent=\"flex-end\" alignItems=\"center\">\n          <button\n            className={classes.button}\n            component=\"span\"\n            color=\"textPrimary\"\n            fontSize=\"12px\"\n            onClick={feeToggleShow}\n          >\n            {feeShow ? t`Hide` : t`Edit`}\n          </button>\n        </Grid> */}\n      </Grid>\n      {/* {feeShow && (\n        <Grid mt={2} container spacing={1}>\n          {fees.map((item) => (\n            <Grid item xs={4} key={Number(item.feeTier)}>\n              <FeeItem\n                fee={item}\n                activeFee={activeFeeObject.feeTier}\n                onClick={handleSelectFee}\n                getPercentage={getPercentage}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      )} */}\n    </>\n  );\n}\n","import { useCallback } from \"react\";\nimport { updateUserPositionPoolId, getPassCode, requestPassCode } from \"@w2e/hooks\";\nimport { Position, Token } from \"@w2e/swap-sdk\";\nimport { t } from \"@lingui/macro\";\nimport { getActorIdentity } from \"components/Identity\";\nimport { useAccountPrincipal } from \"store/auth/hooks\";\nimport { getLocaleMessage } from \"locales/services\";\nimport { useStepCalls, newStepKey, useCloseAllSteps } from \"hooks/useStepCall\";\nimport { getAddLiquidityStepDetails } from \"components/swap/AddLiquiditySteps\";\nimport { useStepContentManager } from \"store/steps/hooks\";\nimport { useSwapApprove, useSwapDeposit, useSwapTransfer } from \"hooks/swap/index\";\nimport { isUseTransfer, actualAmountToPool } from \"utils/token/index\";\nimport { createPool, mint as _mint } from \"hooks/swap/v3Calls\";\nimport { useSuccessTip, useErrorTip } from \"hooks/useTips\";\nimport { useUpdateUserPositionPools } from \"store/hooks\";\nimport { useHistory } from \"react-router-dom\";\nimport { ExternalTipArgs, OpenExternalTip } from \"types/index\";\nimport type { PCMMetadata } from \"@w2e/types\";\nimport { PassCodeManagerId } from \"constants/canister\";\nimport { Principal } from \"@dfinity/principal\";\n\nlet SwapPoolId: undefined | string;\n\ninterface AddLiquidityCallsArgs {\n  noLiquidity: boolean;\n  position: Position;\n  openExternalTip: OpenExternalTip;\n  stepKey: string;\n  pcmMetadata: PCMMetadata;\n  pcmToken: Token;\n  hasPassCode: boolean;\n  needPayForPCM: boolean;\n}\n\nfunction useAddLiquidityCalls() {\n  const principal = useAccountPrincipal();\n  const [openSuccessTip] = useSuccessTip();\n  const [openErrorTip] = useErrorTip();\n\n  const approve = useSwapApprove();\n  const deposit = useSwapDeposit();\n  const transfer = useSwapTransfer();\n\n  const updateStoreUserPositionPool = useUpdateUserPositionPools();\n\n  return useCallback(\n    ({\n      noLiquidity,\n      position,\n      pcmMetadata,\n      pcmToken,\n      hasPassCode,\n      openExternalTip,\n      stepKey,\n      needPayForPCM,\n    }: AddLiquidityCallsArgs) => {\n      const approveOrTransferPCMToken = async () => {\n        return isUseTransfer(pcmToken)\n          ? await transfer(\n              pcmToken,\n              (pcmMetadata.passcodePrice + BigInt(pcmToken.transFee)).toString(),\n              PassCodeManagerId,\n            )\n          : await approve(pcmToken, pcmMetadata.passcodePrice.toString(), PassCodeManagerId);\n      };\n\n      const depositPCMToken = async () => {\n        return await deposit(pcmToken, pcmMetadata.passcodePrice.toString(), PassCodeManagerId);\n      };\n\n      const requestPCMCode = async () => {\n        const { token0, token1, fee } = position.pool;\n\n        const { data, message } = await requestPassCode(\n          Principal.fromText(token0.address),\n          Principal.fromText(token1.address),\n          BigInt(fee),\n        );\n\n        if (data !== \"ok\") {\n          openErrorTip(message ?? t`Failed to request pcm code`);\n        }\n\n        return data === \"ok\";\n      };\n\n      const _createPool = async () => {\n        const identity = await getActorIdentity();\n\n        const { token0, token1, fee, sqrtRatioX96 } = position.pool;\n\n        const { status, message, data } = await createPool(\n          identity,\n          token0.address,\n          token1.address,\n          fee,\n          sqrtRatioX96.toString(),\n        );\n\n        if (status === \"err\" || !data) {\n          openErrorTip(message);\n          return false;\n        }\n\n        SwapPoolId = data?.canisterId.toString();\n\n        return true;\n      };\n\n      const getPoolId = () => {\n        return !noLiquidity ? position.pool.id : SwapPoolId ?? position.pool.id;\n      };\n\n      const approveToken0 = async () => {\n        if (!position || !principal) return false;\n        const poolId = getPoolId();\n\n        const amount0Desired = position.mintAmounts.amount0.toString();\n        if (amount0Desired !== \"0\") {\n          return await approve(position.pool.token0, amount0Desired, poolId);\n        }\n        return true;\n      };\n\n      const approveToken1 = async () => {\n        if (!position || !principal) return false;\n        const poolId = getPoolId();\n        const amount1Desired = position.mintAmounts.amount1.toString();\n        if (amount1Desired !== \"0\") {\n          return await approve(position.pool.token1, amount1Desired, poolId);\n        }\n        return true;\n      };\n\n      const transferToken0 = async () => {\n        if (!position || !principal) return false;\n        const poolId = getPoolId();\n\n        const amount0Desired = position.mintAmounts.amount0.toString();\n        if (amount0Desired !== \"0\") {\n          return await transfer(position.pool.token0, amount0Desired, poolId);\n        }\n        return true;\n      };\n\n      const transferToken1 = async () => {\n        if (!position || !principal) return false;\n        const poolId = getPoolId();\n\n        const amount1Desired = position.mintAmounts.amount1.toString();\n        if (amount1Desired !== \"0\") {\n          return await transfer(position.pool.token1, amount1Desired, poolId);\n        }\n        return true;\n      };\n\n      const depositToken0 = async () => {\n        if (!position || !principal) return false;\n\n        const poolId = getPoolId();\n        const amount0Desired = position.mintAmounts.amount0.toString();\n        if (amount0Desired === \"0\") return true;\n        return await deposit(position.pool.token0, amount0Desired, poolId, ({ message }: ExternalTipArgs) => {\n          openExternalTip({ message, tipKey: stepKey });\n        });\n      };\n\n      const depositToken1 = async () => {\n        if (!position || !principal) return false;\n\n        const poolId = getPoolId();\n        const amount1Desired = position.mintAmounts.amount1.toString();\n        if (amount1Desired === \"0\") return true;\n        return await deposit(position.pool.token1, amount1Desired, poolId, ({ message }: ExternalTipArgs) => {\n          openExternalTip({ message, tipKey: stepKey });\n        });\n      };\n\n      const mint = async () => {\n        if (!position || !principal) return false;\n\n        const poolId = getPoolId();\n        const identity = await getActorIdentity();\n        const { token0 } = position.pool;\n        const { token1 } = position.pool;\n        const amount0Desired = actualAmountToPool(token0, position.mintAmounts.amount0.toString());\n        const amount1Desired = actualAmountToPool(token1, position.mintAmounts.amount1.toString());\n\n        const { status, message } = await _mint(poolId, identity, {\n          token0: token0.address,\n          token1: token1.address,\n          fee: BigInt(position.pool.fee),\n          tickLower: BigInt(position.tickLower),\n          tickUpper: BigInt(position.tickUpper),\n          amount0Desired,\n          amount1Desired,\n        });\n\n        if (status === \"ok\") {\n          openSuccessTip(t`Add Liquidity Successfully`);\n\n          updateUserPositionPoolId(poolId, true);\n          updateStoreUserPositionPool([poolId]);\n\n          return true;\n        }\n        if (status === \"err\") {\n          openExternalTip({ message: getLocaleMessage(message), tipKey: stepKey });\n          return false;\n        }\n\n        return false;\n      };\n\n      return [\n        noLiquidity && !hasPassCode && needPayForPCM ? approveOrTransferPCMToken : undefined,\n        noLiquidity && !hasPassCode && needPayForPCM ? depositPCMToken : undefined,\n        noLiquidity && !hasPassCode ? requestPCMCode : undefined,\n        noLiquidity ? _createPool : undefined,\n        isUseTransfer(position?.pool.token0) ? transferToken0 : approveToken0,\n        depositToken0,\n        isUseTransfer(position?.pool.token1) ? transferToken1 : approveToken1,\n        depositToken1,\n        mint,\n      ].filter((fn) => fn !== undefined) as (() => Promise<boolean>)[];\n    },\n    [principal],\n  );\n}\n\ninterface InitialAddLiquidityStepsArgs {\n  position: Position;\n  noLiquidity: boolean;\n  retry: () => void;\n  pcmMetadata: PCMMetadata;\n  pcmToken: Token;\n  hasPassCode: boolean;\n  needPayForPCM: boolean;\n}\n\nfunction useInitialAddLiquiditySteps() {\n  const initialStepContent = useStepContentManager();\n  const history = useHistory();\n  const closeAllSteps = useCloseAllSteps();\n\n  const handleReclaim = () => {\n    history.push(\"/swap/reclaim\");\n    closeAllSteps();\n  };\n\n  const handleReclaimPCMBalance = () => {\n    history.push(\"/swap/pcm/reclaim\");\n    closeAllSteps();\n  };\n\n  return useCallback(\n    (\n      key: string,\n      { position, noLiquidity, retry, pcmMetadata, pcmToken, hasPassCode, needPayForPCM }: InitialAddLiquidityStepsArgs,\n    ) => {\n      const content = getAddLiquidityStepDetails({\n        position,\n        noLiquidity,\n        retry,\n        handleReclaim,\n        handleReclaimPCMBalance,\n        pcmMetadata,\n        pcmToken,\n        hasPassCode,\n        needPayForPCM,\n      });\n\n      initialStepContent(String(key), {\n        content,\n        title: t`Add Liquidity Details`,\n      });\n    },\n    [],\n  );\n}\n\nexport interface AddLiquidityCallProps {\n  position: Position;\n  noLiquidity: boolean;\n  openExternalTip: OpenExternalTip;\n  pcmMetadata: PCMMetadata;\n  pcmToken: Token;\n  principal: string;\n  needPayForPCM: boolean;\n}\n\nexport function useAddLiquidityCall() {\n  const getCalls = useAddLiquidityCalls();\n  const formatCall = useStepCalls();\n  const initialStepDetails = useInitialAddLiquiditySteps();\n\n  return useCallback(\n    async ({\n      position,\n      noLiquidity,\n      principal,\n      pcmMetadata,\n      pcmToken,\n      openExternalTip,\n      needPayForPCM,\n    }: AddLiquidityCallProps) => {\n      let hasPassCode = false;\n\n      if (noLiquidity) {\n        const passCode = await getPassCode(principal);\n\n        const { token0, token1, fee } = position.pool;\n        hasPassCode =\n          passCode.find(\n            (ele) =>\n              ele.token0.toString() === token0.address &&\n              ele.token1.toString() === token1.address &&\n              ele.fee === BigInt(fee),\n          ) !== undefined;\n      }\n\n      const key = newStepKey();\n      const calls = getCalls({\n        position,\n        pcmMetadata,\n        pcmToken,\n        hasPassCode,\n        openExternalTip,\n        noLiquidity,\n        stepKey: key,\n        needPayForPCM,\n      });\n      const { call, reset, retry } = formatCall(calls, key);\n\n      initialStepDetails(key, { needPayForPCM, position, noLiquidity, pcmMetadata, hasPassCode, pcmToken, retry });\n\n      return { call, reset, retry, key };\n    },\n    [getCalls, formatCall, initialStepDetails],\n  );\n}\n","import { Box, Avatar } from \"@mui/material\";\nimport { parseTokenAmount } from \"@w2e/utils\";\nimport { Position, Token } from \"@w2e/swap-sdk\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { TextButton } from \"components/index\";\nimport { toFormat } from \"utils/index\";\nimport { isUseTransfer, actualAmountToPool } from \"utils/token/index\";\nimport { StepDetails, StepContent } from \"components/Steps/types\";\nimport type { PCMMetadata } from \"@w2e/types\";\nimport { PassCodeManagerId } from \"constants/canister\";\n\nexport interface GetAddLiquidityStepDetails {\n  noLiquidity: boolean;\n  position: Position | undefined;\n  retry: () => void;\n  handleReclaim: () => void;\n  handleReclaimPCMBalance: () => void;\n  pcmMetadata: PCMMetadata;\n  pcmToken: Token;\n  hasPassCode: boolean;\n  needPayForPCM: boolean;\n}\n\nexport function getAddLiquidityStepDetails({\n  position,\n  noLiquidity,\n  retry,\n  handleReclaim,\n  handleReclaimPCMBalance,\n  pcmMetadata,\n  pcmToken,\n  hasPassCode,\n  needPayForPCM,\n}: GetAddLiquidityStepDetails) {\n  if (!position) return [];\n\n  const { token0 } = position.pool;\n  const { token1 } = position.pool;\n\n  const symbol0 = position.pool.token0.symbol;\n  const symbol1 = position.pool.token1.symbol;\n\n  const amount0 = toFormat(\n    parseTokenAmount(actualAmountToPool(token0, position.mintAmounts.amount0.toString()), token0.decimals).toString(),\n  );\n  const amount1 = toFormat(\n    parseTokenAmount(actualAmountToPool(token1, position.mintAmounts.amount1.toString()), token1.decimals).toString(),\n  );\n\n  const amount0Value = (\n    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n      <Avatar sx={{ width: \"16px\", height: \"16px\", margin: \"0 4px 0 0\" }} src={position.pool.token0.logo}>\n        &nbsp;\n      </Avatar>\n      {amount0}\n    </Box>\n  );\n\n  const amount1Value = (\n    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n      <Avatar sx={{ width: \"16px\", height: \"16px\", margin: \"0 4px 0 0\" }} src={position.pool.token1.logo}>\n        &nbsp;\n      </Avatar>\n      {amount1}\n    </Box>\n  );\n\n  const originSteps: StepContent[] = [\n    {\n      title: isUseTransfer(token0) ? `Transfer ${symbol0}` : `Approve ${symbol0}`,\n      children: [\n        { label: t`Amount`, value: amount0Value },\n        { label: t`Canister Id`, value: token0.address },\n      ],\n    },\n    {\n      title: t`Deposit ${symbol0}`,\n      children: [\n        {\n          label: t`Amount`,\n          value: amount0Value,\n        },\n        { label: t`Canister Id`, value: token0.address },\n      ],\n      errorActions: [\n        <>\n          <TextButton onClick={handleReclaim}>\n            <Trans>Reclaim</Trans>\n          </TextButton>\n        </>,\n      ],\n      errorMessage: t`Please click Reclaim your tokens if they've transferred to the swap pool.`,\n    },\n    {\n      title: isUseTransfer(token1) ? `Transfer ${symbol1}` : `Approve ${symbol1}`,\n      children: [\n        { label: t`Amount`, value: amount1Value },\n        { label: t`Canister Id`, value: token1.address },\n      ],\n    },\n    {\n      title: `Deposit ${symbol1}`,\n      children: [\n        {\n          label: t`Amount`,\n          value: amount1Value,\n        },\n        { label: t`Canister Id`, value: token1.address },\n      ],\n      errorActions: [\n        <>\n          <TextButton onClick={handleReclaim}>\n            <Trans>Reclaim</Trans>\n          </TextButton>\n        </>,\n      ],\n      errorMessage: t`Please click Reclaim your tokens if they've transferred to the swap pool.`,\n    },\n    {\n      title: `Add liquidity ${token0.symbol} and ${token1.symbol}`,\n      children: [\n        { label: symbol0, value: amount0Value },\n        { label: symbol1, value: amount1Value },\n      ],\n      errorActions: [\n        <TextButton onClick={handleReclaim}>\n          <Trans>Reclaim</Trans>\n        </TextButton>,\n        <TextButton onClick={retry}>\n          <Trans>Retry</Trans>\n        </TextButton>,\n      ],\n      errorMessage: t`Please click Reclaim your tokens if they've transferred to the swap pool.`,\n    },\n  ];\n\n  if (noLiquidity) {\n    const pcmAmount = parseTokenAmount(pcmMetadata.passcodePrice, pcmToken.decimals);\n\n    originSteps.unshift({\n      title: `Create pool ${token0.symbol} and ${token1.symbol}`,\n    });\n\n    if (!hasPassCode) {\n      originSteps.unshift({\n        title: `Confirm payment and request permission`,\n      });\n\n      if (needPayForPCM) {\n        originSteps.unshift({\n          title: `Deposit ${pcmAmount.toFormat()} ${pcmToken.symbol} for creating swap pool fee`,\n          children: [\n            { label: t`Recipient canister ID`, value: PassCodeManagerId },\n            { label: t`Deposit amount`, value: `${pcmAmount.toFormat()} ${pcmToken.symbol}` },\n          ],\n        });\n\n        originSteps.unshift({\n          title: isUseTransfer(pcmToken)\n            ? `Transfer ${pcmToken.symbol} for creating swap pool fee`\n            : `Approve ${pcmToken.symbol} for creating swap pool fee`,\n          children: [\n            { label: t`Recipient canister ID`, value: PassCodeManagerId },\n            { label: t`Amount`, value: `${pcmAmount.toFormat()} ${pcmToken.symbol}` },\n          ],\n          errorActions: [\n            <>\n              <TextButton onClick={handleReclaimPCMBalance}>\n                <Trans>Reclaim</Trans>\n              </TextButton>\n            </>,\n          ],\n          errorMessage: t`Please click Reclaim your tokens if they've transferred to the swap pool.`,\n        });\n      }\n    }\n  }\n\n  return originSteps\n    .filter((step) => step !== undefined)\n    .map((step, index) => ({ ...step, step: index }) as StepDetails);\n}\n","import Button, { ButtonConnectorProps } from \"components/authentication/ButtonConnector\";\nimport { Override } from \"@w2e/types\";\nimport { t } from \"@lingui/macro\";\n\nexport interface AddLiquidityButtonProps {\n  error: string | undefined | null;\n}\n\nexport default function AddLiquidityButton(props: Override<ButtonConnectorProps, AddLiquidityButtonProps>) {\n  const { error } = props;\n\n  return (\n    <Button\n      variant=\"contained\"\n      fullWidth\n      sx={{\n        borderRadius: \"8px\",\n      }}\n      {...props}\n    >\n      {error ?? t`Confirm`}\n    </Button>\n  );\n}\n","import { SvgIcon } from \"@mui/material\";\n\nexport default (props: any) => {\n  return (\n    <SvgIcon viewBox=\"0 0 16 16\" {...props}>\n      <path\n        d=\"M8 10.9653C8.44731 10.9653 8.82227 11.3403 8.82227 11.7876C8.82227 12.2349 8.44731 12.6099 8 12.6099C7.56914 12.6099 7.17774 12.2349 7.19748 11.8073C7.17774 11.337 7.5494 10.9653 8 10.9653Z\"\n        fill=\"#FFC107\"\n      />\n      <path\n        d=\"M0.389341 13.8794C-0.127039 12.9881 -0.130329 11.9257 0.382763 11.0376L5.53341 2.11775C6.04321 1.21984 6.96415 0.687012 7.99691 0.687012C9.02967 0.687012 9.9506 1.22313 10.4604 2.11446L15.6176 11.0442C16.1307 11.9421 16.1274 13.0111 15.6078 13.9024C15.0947 14.7839 14.177 15.3134 13.1508 15.3134H2.86271C1.83323 15.3134 0.909011 14.7773 0.389341 13.8794ZM1.50762 13.2347C1.79377 13.7281 2.30028 14.0208 2.86599 14.0208H13.1541C13.7133 14.0208 14.2165 13.7347 14.4961 13.2512C14.7789 12.7611 14.7822 12.1757 14.4994 11.6823L9.34213 2.75582C9.06256 2.26575 8.56263 1.97632 7.99691 1.97632C7.43448 1.97632 6.93126 2.26904 6.65169 2.75911L1.49775 11.6856C1.22147 12.1658 1.22476 12.7447 1.50762 13.2347Z\"\n        fill=\"#FFC107\"\n      />\n      <path\n        d=\"M8.20408 5.19314C8.59548 5.30496 8.83887 5.66018 8.83887 6.09105C8.81913 6.35088 8.80269 6.614 8.78295 6.87384C8.72704 7.86384 8.67113 8.83411 8.61521 9.82411C8.59548 10.1596 8.33564 10.403 8.00016 10.403C7.66468 10.403 7.40155 10.1432 7.38511 9.80438C7.38511 9.60046 7.38511 9.41298 7.36537 9.20577C7.32919 8.57099 7.28973 7.9362 7.25355 7.30141C7.23381 6.89028 7.19763 6.47915 7.1779 6.06802C7.1779 5.92001 7.19763 5.78845 7.25355 5.65689C7.42129 5.28852 7.81268 5.10104 8.20408 5.19314Z\"\n        fill=\"#FFC107\"\n      />\n    </SvgIcon>\n  );\n};\n","import { ButtonBase, Grid } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Token } from \"@w2e/swap-sdk\";\nimport { isDarkTheme } from \"utils\";\nimport { Theme } from \"@mui/material/styles\";\n\nconst useStyle = makeStyles((theme: Theme) => ({\n  container: {\n    background: isDarkTheme(theme) ? theme.palette.background.level3 : \"#fff\",\n    border: theme.palette.border.gray200,\n    borderRadius: \"8px\",\n    padding: \"2px\",\n  },\n  item: {\n    borderRadius: \"6px\",\n    \"&.active\": {\n      background: isDarkTheme(theme) ? theme.palette.background.level1 : \"#EFEFEF\",\n    },\n  },\n  buttonBase: {\n    lineHeight: \"20px\",\n    padding: \"2.5px 12px\",\n  },\n}));\n\nexport default function TokenToggle({\n  currencyA,\n  currencyB,\n  handleToggle,\n}: {\n  currencyA: Token | undefined;\n  currencyB: Token | undefined;\n  handleToggle: () => void;\n}) {\n  const classes = useStyle();\n\n  const isSorted = currencyA && currencyB && currencyA.sortsBefore(currencyB);\n\n  return currencyA && currencyB ? (\n    <Grid container className={classes.container} onClick={handleToggle}>\n      <Grid className={`${classes.item}${isSorted ? \" active\" : \"\"}`}>\n        <ButtonBase className={classes.buttonBase}>{isSorted ? currencyA.symbol : currencyB.symbol}</ButtonBase>\n      </Grid>\n      <Grid className={`${classes.item}${!isSorted ? \" active\" : \"\"}`}>\n        <ButtonBase className={classes.buttonBase}>{isSorted ? currencyB.symbol : currencyA.symbol}</ButtonBase>\n      </Grid>\n    </Grid>\n  ) : null;\n}\n","import { tickToPrice, Token } from \"@w2e/swap-sdk\";\nimport JSBI from \"jsbi\";\n\nconst PRICE_FIXED_DIGITS = 8;\n\nexport interface TickProcessed {\n  tickIdx: number;\n  liquidityActive: JSBI;\n  liquidityNet: JSBI;\n  price0: string;\n}\n\nexport interface TickData {\n  tickIdx: number;\n  liquidityNet: string;\n  liquidityGross: bigint;\n}\n\n// Computes the numSurroundingTicks above or below the active tick.\nexport default function computeSurroundingTicks(\n  token0: Token,\n  token1: Token,\n  activeTickProcessed: TickProcessed,\n  sortedTickData: TickData[],\n  pivot: number,\n  ascending: boolean,\n) {\n  let previousTickProcessed: TickProcessed = {\n    ...activeTickProcessed,\n  };\n  // Iterate outwards (either up or down depending on direction) from the active tick,\n  // building active liquidity for every tick.\n  let processedTicks: TickProcessed[] = [];\n\n  for (let i = pivot + (ascending ? 1 : -1); ascending ? i < sortedTickData.length : i >= 0; ascending ? i++ : i--) {\n    const tickIdx = Number(sortedTickData[i].tickIdx);\n    const currentTickProcessed = {\n      liquidityActive: previousTickProcessed.liquidityActive,\n      tickIdx,\n      liquidityNet: JSBI.BigInt(sortedTickData[i].liquidityNet),\n      price0: tickToPrice(token0, token1, tickIdx).toFixed(PRICE_FIXED_DIGITS),\n    };\n\n    // Update the active liquidity.\n    // If we are iterating ascending and we found an initialized tick we immediately apply\n    // it to the current processed tick we are building.\n    // If we are iterating descending, we don't want to apply the net liquidity until the following tick.\n    if (ascending) {\n      currentTickProcessed.liquidityActive = JSBI.add(\n        previousTickProcessed.liquidityActive,\n        JSBI.BigInt(sortedTickData[i].liquidityNet),\n      );\n    } else if (!ascending && JSBI.notEqual(previousTickProcessed.liquidityNet, JSBI.BigInt(0))) {\n      // We are iterating descending, so look at the previous tick and apply any net liquidity.\n      currentTickProcessed.liquidityActive = JSBI.subtract(\n        previousTickProcessed.liquidityActive,\n        previousTickProcessed.liquidityNet,\n      );\n    }\n\n    processedTicks.push(currentTickProcessed);\n    previousTickProcessed = currentTickProcessed;\n  }\n\n  if (!ascending) {\n    processedTicks = processedTicks.reverse();\n  }\n\n  return processedTicks;\n}\n","import { tickToPrice, TICK_SPACINGS, Token, FeeAmount, TickMath } from \"@w2e/swap-sdk\";\nimport BigNumber from \"bignumber.js\";\nimport { JSBI } from \"utils/index\";\nimport { useMemo } from \"react\";\nimport computeSurroundingTicks from \"utils/computeSurroundingTicks\";\nimport { useSwapAllTicks } from \"@w2e/hooks\";\nimport { usePoolCanisterId } from \"hooks/swap/index\";\nimport { PoolState, usePool } from \"./usePools\";\n\nconst PRICE_FIXED_DIGITS = 8;\n\nconst getActiveTick = (tickCurrent: number | undefined, feeAmount: FeeAmount) =>\n  (tickCurrent || tickCurrent === 0) && feeAmount\n    ? Math.floor(tickCurrent / TICK_SPACINGS[feeAmount]) * TICK_SPACINGS[feeAmount]\n    : undefined;\n\ntype Tick = {\n  liquidityGross: bigint;\n  liquidityNet: bigint;\n  price0: bigint;\n  price1: bigint;\n  tickIndex: bigint;\n  price0Decimal: number;\n  price1Decimal: number;\n};\n\nexport function useAllTicks(token0: Token | undefined, token1: Token | undefined, feeAmount: FeeAmount) {\n  const poolId = usePoolCanisterId(token0?.address, token1?.address, feeAmount);\n\n  const { result: allTicks, loading } = useSwapAllTicks(poolId);\n\n  const ticks = useMemo(() => {\n    const ticks: Tick[] = [];\n\n    if (allTicks) {\n      for (let i = 0; i < allTicks.length; i++) {\n        const tick = allTicks[i];\n        const sqrtRatioX = TickMath.getSqrtRatioAtTick(Number(tick.id));\n\n        const tempInfo = {\n          liquidityGross: tick.liquidityGross,\n          liquidityNet: tick.liquidityNet,\n          price0: BigInt(sqrtRatioX.toString()), // Nat.pow(sqrtRatioX, 2) * Nat.pow(10, 100);\n          price1: BigInt(JSBI.divide(JSBI.BigInt(1), sqrtRatioX).toString()), // Nat.pow(Nat.pow(10, 100) / sqrtRatioX, 2);\n          tickIndex: BigInt(tick.id),\n          price0Decimal: 1, // Nat.pow(10, 100);\n          price1Decimal: 1, // Nat.pow(Nat.pow(10, 100), 2);\n        };\n\n        ticks.push(tempInfo);\n      }\n    }\n\n    return ticks;\n  }, [allTicks]);\n\n  return { loading, result: ticks };\n}\n\nexport function usePoolActiveLiquidity(\n  currencyA: Token | undefined,\n  currencyB: Token | undefined,\n  feeAmount: FeeAmount,\n) {\n  const isSorted = currencyA && currencyB ? currencyA.wrapped.sortsBefore(currencyB.wrapped) : undefined;\n  const token0 = isSorted ? currencyA?.wrapped : currencyB?.wrapped;\n  const token1 = isSorted ? currencyB?.wrapped : currencyA?.wrapped;\n  const [poolState, pool] = usePool(currencyA, currencyB, feeAmount);\n\n  const tickCurrent = pool?.tickCurrent;\n\n  // Find nearest valid tick for pool in case tick is not initialized.\n  const activeTick = useMemo(() => getActiveTick(tickCurrent, feeAmount), [tickCurrent, feeAmount]);\n\n  const { loading: isLoading, result: ticks } = useAllTicks(token0, token1, feeAmount);\n\n  const sortedTicks = useMemo(() => {\n    if (!ticks) return [];\n\n    return ticks\n      .map((item) => {\n        const price0 = new BigNumber(String(item.price0))\n          .div(String(item.price0Decimal))\n          .toFormat({ groupSeparator: \"\" });\n        const price1 = new BigNumber(String(item.price1))\n          .div(String(item.price1Decimal))\n          .toFormat({ groupSeparator: \"\" });\n\n        return {\n          ...item,\n          price0,\n          price1,\n          tickIdx: Number(item.tickIndex),\n          _price0: item.price0,\n          _price1: item.price1,\n          liquidityNet: item.liquidityNet.toString(),\n        };\n      })\n      .sort((a, b) => {\n        if (a.tickIdx < b.tickIdx) return -1;\n        if (a.tickIdx > b.tickIdx) return 1;\n        return 0;\n      });\n  }, [ticks, isLoading]);\n\n  return useMemo(() => {\n    const isUninitialized = poolState === PoolState.NOT_EXISTS;\n\n    if (\n      !currencyA ||\n      !currencyB ||\n      !token0 ||\n      !token1 ||\n      activeTick === undefined ||\n      poolState !== PoolState.EXISTS ||\n      !sortedTicks ||\n      sortedTicks.length === 0 ||\n      isLoading\n    ) {\n      return {\n        isLoading: isLoading || poolState === PoolState.LOADING,\n        isUninitialized,\n        activeTick,\n        data: undefined,\n      };\n    }\n\n    // find where the active tick would be to partition the array\n    // if the active tick is initialized, the pivot will be an element\n    // if not, take the previous tick as pivot\n    const pivot = sortedTicks.findIndex(({ tickIdx }) => tickIdx > activeTick) - 1;\n\n    if (pivot < 0) {\n      // consider setting a local error\n      console.error(\"TickData pivot not found\");\n      return {\n        isLoading,\n        isUninitialized,\n        activeTick,\n        data: undefined,\n      };\n    }\n\n    const activeTickProcessed = {\n      liquidityActive: JSBI.BigInt(pool?.liquidity ?? 0),\n      tickIdx: activeTick,\n      liquidityNet:\n        Number(sortedTicks[pivot].tickIdx) === activeTick\n          ? JSBI.BigInt(sortedTicks[pivot].liquidityNet)\n          : JSBI.BigInt(0),\n      price0: tickToPrice(token0, token1, activeTick).toFixed(PRICE_FIXED_DIGITS),\n    };\n\n    const formatTicks = sortedTicks.map((tick) => ({\n      tickIdx: tick.tickIdx,\n      liquidityNet: tick.liquidityNet,\n      liquidityGross: tick.liquidityGross,\n    }));\n\n    const subsequentTicks = computeSurroundingTicks(token0, token1, activeTickProcessed, formatTicks, pivot, true);\n\n    const previousTicks = computeSurroundingTicks(token0, token1, activeTickProcessed, formatTicks, pivot, false);\n\n    const ticksProcessed = previousTicks.concat(activeTickProcessed).concat(subsequentTicks);\n\n    return {\n      isLoading,\n      isUninitialized,\n      activeTick,\n      data: ticksProcessed,\n      isError: ticks === undefined,\n    };\n  }, [currencyA, currencyB, activeTick, pool, sortedTicks, isLoading, poolState, ticks]);\n}\n","// @ts-nocheck\nimport { useMemo } from \"react\";\nimport { area, curveStepAfter, ScaleLinear } from \"d3\";\nimport styled from \"styled-components/macro\";\nimport inRange from \"lodash/inRange\";\n\nimport { ChartEntry } from \"./types\";\n\nconst COLOR_BLUE_2 = \"#0068FC\";\n\nconst Path = styled.path`\n  opacity: 0.5;\n  stroke: ${({ fill }) => fill ?? COLOR_BLUE_2};\n  fill: ${({ fill }) => fill ?? COLOR_BLUE_2};\n`;\n\nexport interface AreaProps {\n  series: ChartEntry[];\n  xScale: ScaleLinear<number, number>;\n  yScale: ScaleLinear<number, number>;\n  xValue: (d: ChartEntry) => number;\n  yValue: (d: ChartEntry) => number;\n  fill?: string | undefined;\n}\n\nexport const Area = ({ series, xScale, yScale, xValue, yValue, fill }: AreaProps) =>\n  useMemo(\n    () => (\n      <Path\n        fill={fill}\n        d={\n          area()\n            .curve(curveStepAfter)\n            .x((d: unknown) => xScale(xValue(d as ChartEntry)))\n            .y1((d: unknown) => yScale(yValue(d as ChartEntry)))\n            .y0(yScale(0))(\n            series.filter((d) => inRange(xScale(xValue(d)), 0, innerWidth)) as Iterable<[number, number]>,\n          ) ?? undefined\n        }\n      />\n    ),\n    [fill, series, xScale, xValue, yScale, yValue],\n  );\n","// @ts-nocheck\nimport { useMemo } from \"react\";\nimport { Axis as d3Axis, axisBottom, NumberValue, ScaleLinear, select } from \"d3\";\nimport styled from \"styled-components/macro\";\n\nconst StyledGroup = styled.g`\n  line {\n    display: none;\n  }\n  text {\n    color: ${({ theme }) => theme.text2};\n    transform: translateY(5px);\n  }\n`;\n\nconst Axis = ({ axisGenerator }: { axisGenerator: d3Axis<NumberValue> }) => {\n  const axisRef = (axis: SVGGElement) => {\n    if (axis) {\n      select(axis)\n        .call(axisGenerator)\n        .call((g) => g.select(\".domain\").remove());\n    }\n  };\n\n  return <g ref={axisRef} />;\n};\n\nexport const AxisBottom = ({\n  xScale,\n  innerHeight,\n  offset = 0,\n}: {\n  xScale: ScaleLinear<number, number>;\n  innerHeight: number;\n  offset?: number;\n}) =>\n  useMemo(\n    () => (\n      <StyledGroup transform={`translate(0, ${innerHeight + offset})`}>\n        <Axis axisGenerator={axisBottom(xScale).ticks(6)} />\n      </StyledGroup>\n    ),\n    [innerHeight, offset, xScale],\n  );\n","/*\n * Generates an SVG path for the east brush handle.\n * Apply `scale(-1, 1)` to generate west brush handle.\n *\n *    |```````\\\n *    |  | |  |\n *    |______/\n *    |\n *    |\n *    |\n *    |\n *    |\n *\n * https://medium.com/@dennismphil/one-side-rounded-rectangle-using-svg-fb31cf318d90\n */\nexport const brushHandlePath = (height: number) =>\n  [\n    // handle\n    `M 0 0`, // move to origin\n    `v ${height}`, // vertical line\n    \"m 1 0\", // move 1px to the right\n    `V 0`, // second vertical line\n    `M 0 1`, // move to origin\n\n    // head\n    \"h 12\", // horizontal line\n    \"q 2 0, 2 2\", // rounded corner\n    \"v 22\", // vertical line\n    \"q 0 2 -2 2\", // rounded corner\n    \"h -12\", // horizontal line\n    `z`, // close path\n  ].join(\" \");\n\nexport const brushHandleAccentPath = () =>\n  [\n    \"m 5 7\", // move to first accent\n    \"v 14\", // vertical line\n    \"M 0 0\", // move to origin\n    \"m 9 7\", // move to second accent\n    \"v 14\", // vertical line\n    \"z\",\n  ].join(\" \");\n\nexport const OffScreenHandle = ({\n  color,\n  size = 10,\n  margin = 10,\n}: {\n  color: string;\n  size?: number;\n  margin?: number;\n}) => (\n  <polygon\n    points={`0 0, ${size} ${size}, 0 ${size}`}\n    transform={` translate(${size + margin}, ${margin}) rotate(45) `}\n    fill={color}\n    stroke={color}\n    strokeWidth=\"4\"\n    strokeLinejoin=\"round\"\n  />\n);\n","// @ts-nocheck\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { brushX, select, ScaleLinear, BrushBehavior } from \"d3\";\nimport styled from \"styled-components/macro\";\nimport { usePrevious } from \"@w2e/hooks\";\nimport { useTheme } from \"@mui/material\";\nimport { brushHandleAccentPath, brushHandlePath, OffScreenHandle } from \"./svg\";\n\nconst Handle = styled.path<{ color: string; d: string }>`\n  cursor: ew-resize;\n  pointer-events: none;\n  stroke-width: 3;\n  stroke: ${({ color }) => color};\n  fill: ${({ color }) => color};\n`;\n\nconst HandleAccent = styled.path<{ d: string }>`\n  cursor: ew-resize;\n  pointer-events: none;\n  stroke-width: 1.5;\n  stroke: \"#ffffff\";\n  opacity: 0.6;\n`;\n\nconst LabelGroup = styled.g<{ visible: boolean; transform: string }>`\n  opacity: ${({ visible }) => (visible ? \"1\" : \"0\")};\n  transition: opacity 300ms;\n`;\n\nconst TooltipBackground = styled.rect`\n  fill: ${({ theme }) => theme.palette.background.level3};\n`;\n\nconst Tooltip = styled.text`\n  text-anchor: middle;\n  font-size: 13px;\n  fill: ${({ theme }) => theme.themeOption.textPrimary};\n`;\n\n// flips the handles draggers when close to the container edges\nconst FLIP_HANDLE_THRESHOLD_PX = 20;\n\n// margin to prevent tick snapping from putting the brush off screen\nconst BRUSH_EXTENT_MARGIN_PX = 2;\n\nconst compare = (a1: [number, number], a2: [number, number], xScale: ScaleLinear<number, number>): boolean =>\n  xScale(a1[0]) !== xScale(a2[0]) || xScale(a1[1]) !== xScale(a2[1]);\n\nexport interface BrushProps {\n  id: string;\n  xScale: ScaleLinear<number, number>;\n  interactive: boolean;\n  brushLabelValue: (d: \"w\" | \"e\", x: number) => string;\n  brushExtent: [number, number];\n  setBrushExtent: (extent: [number, number], mode: string | undefined) => void;\n  innerWidth: number;\n  innerHeight: number;\n  westHandleColor: string;\n  eastHandleColor: string;\n}\n\nexport const Brush = ({\n  id,\n  xScale,\n  interactive,\n  brushLabelValue,\n  brushExtent,\n  setBrushExtent,\n  innerWidth,\n  innerHeight,\n  westHandleColor,\n  eastHandleColor,\n}: BrushProps) => {\n  const brushRef = useRef<SVGGElement | null>(null);\n  const brushBehavior = useRef<BrushBehavior<SVGGElement> | null>(null);\n  const theme = useTheme();\n\n  // only used to drag the handles on brush for performance\n  const [localBrushExtent, setLocalBrushExtent] = useState<[number, number] | null>(brushExtent);\n  const [showLabels, setShowLabels] = useState(false);\n  const [hovering, setHovering] = useState(false);\n\n  const previousBrushExtent = usePrevious(brushExtent);\n\n  const brushed = useCallback(\n    (event) => {\n      const { type, selection, mode } = event;\n\n      if (!selection) {\n        setLocalBrushExtent(null);\n        return;\n      }\n\n      const scaled = selection.map(xScale.invert);\n\n      // avoid infinite render loop by checking for change\n      if (type === \"end\" && compare(brushExtent, scaled, xScale)) {\n        setBrushExtent(scaled, mode);\n      }\n\n      setLocalBrushExtent(scaled);\n    },\n    [xScale, brushExtent, setBrushExtent],\n  );\n\n  // keep local and external brush extent in sync\n  // i.e. snap to ticks on bruhs end\n  useEffect(() => {\n    setLocalBrushExtent(brushExtent);\n  }, [brushExtent]);\n\n  // initialize the brush\n  useEffect(() => {\n    if (!brushRef.current) return;\n\n    brushBehavior.current = brushX<SVGGElement>()\n      .extent([\n        [Math.max(0 + BRUSH_EXTENT_MARGIN_PX, xScale(0)), 0],\n        [innerWidth - BRUSH_EXTENT_MARGIN_PX, innerHeight],\n      ])\n      .handleSize(30)\n      .filter(() => interactive)\n      .on(\"brush end\", (event) => {\n        brushed(event);\n      });\n\n    brushBehavior.current(select(brushRef.current));\n\n    if (previousBrushExtent && compare(brushExtent, previousBrushExtent, xScale)) {\n      select(brushRef.current)\n        .transition()\n        .call(brushBehavior.current.move as any, brushExtent.map(xScale));\n    }\n\n    // brush linear gradient\n    select(brushRef.current)\n      .selectAll(\".selection\")\n      .attr(\"stroke\", \"none\")\n      .attr(\"fill-opacity\", \"0.1\")\n      .attr(\"fill\", `url(#${id}-gradient-selection)`);\n  }, [brushExtent, brushed, id, innerHeight, innerWidth, interactive, previousBrushExtent, xScale]);\n\n  // respond to xScale changes only\n  useEffect(() => {\n    if (!brushRef.current || !brushBehavior.current) return;\n\n    brushBehavior.current.move(select(brushRef.current) as any, brushExtent.map(xScale) as any);\n  }, [brushExtent, xScale]);\n\n  // show labels when local brush changes\n  useEffect(() => {\n    setShowLabels(true);\n    const timeout = setTimeout(() => setShowLabels(false), 1500);\n    return () => clearTimeout(timeout);\n  }, [localBrushExtent]);\n\n  // variables to help render the SVGs\n  const flipWestHandle = localBrushExtent && xScale(localBrushExtent[0]) > FLIP_HANDLE_THRESHOLD_PX;\n  const flipEastHandle = localBrushExtent && xScale(localBrushExtent[1]) > innerWidth - FLIP_HANDLE_THRESHOLD_PX;\n\n  const showWestArrow = localBrushExtent && (xScale(localBrushExtent[0]) < 0 || xScale(localBrushExtent[1]) < 0);\n  const showEastArrow =\n    localBrushExtent && (xScale(localBrushExtent[0]) > innerWidth || xScale(localBrushExtent[1]) > innerWidth);\n\n  const westHandleInView =\n    localBrushExtent && xScale(localBrushExtent[0]) >= 0 && xScale(localBrushExtent[0]) <= innerWidth;\n  const eastHandleInView =\n    localBrushExtent && xScale(localBrushExtent[1]) >= 0 && xScale(localBrushExtent[1]) <= innerWidth;\n\n  return useMemo(\n    () => (\n      <>\n        <defs>\n          <linearGradient id={`${id}-gradient-selection`} x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"100%\">\n            <stop stopColor={westHandleColor} />\n            <stop stopColor={eastHandleColor} offset=\"1\" />\n          </linearGradient>\n\n          {/* clips at exactly the svg area */}\n          <clipPath id={`${id}-brush-clip`}>\n            <rect x=\"0\" y=\"0\" width={innerWidth} height={innerHeight} />\n          </clipPath>\n        </defs>\n\n        {/* will host the d3 brush */}\n        <g\n          ref={brushRef}\n          clipPath={`url(#${id}-brush-clip)`}\n          onMouseEnter={() => setHovering(true)}\n          onMouseLeave={() => setHovering(false)}\n        />\n\n        {/* custom brush handles */}\n        {localBrushExtent && (\n          <>\n            {/* west handle */}\n            {westHandleInView ? (\n              <g\n                transform={`translate(${Math.max(0, xScale(localBrushExtent[0]))}, 0), scale(${flipWestHandle ? \"-1\" : \"1\"\n                  }, 1)`}\n              >\n                <g>\n                  <Handle color={westHandleColor} d={brushHandlePath(innerHeight)} />\n                  <HandleAccent d={brushHandleAccentPath()} theme={theme} />\n                </g>\n\n                <LabelGroup\n                  transform={`translate(50,0), scale(${flipWestHandle ? \"1\" : \"-1\"}, 1)`}\n                  visible={showLabels || hovering}\n                >\n                  <TooltipBackground y=\"0\" x=\"-30\" height=\"30\" width=\"60\" rx=\"8\" theme={theme} />\n                  <Tooltip transform=\"scale(-1, 1)\" y=\"15\" dominantBaseline=\"middle\" theme={theme}>\n                    {brushLabelValue(\"w\", localBrushExtent[0])}\n                  </Tooltip>\n                </LabelGroup>\n              </g>\n            ) : null}\n\n            {/* east handle */}\n            {eastHandleInView ? (\n              <g transform={`translate(${xScale(localBrushExtent[1])}, 0), scale(${flipEastHandle ? \"-1\" : \"1\"}, 1)`}>\n                <g>\n                  <Handle color={eastHandleColor} d={brushHandlePath(innerHeight)} />\n                  <HandleAccent d={brushHandleAccentPath()} theme={theme} />\n                </g>\n\n                <LabelGroup\n                  transform={`translate(50,0), scale(${flipEastHandle ? \"-1\" : \"1\"}, 1)`}\n                  visible={showLabels || hovering}\n                >\n                  <TooltipBackground y=\"0\" x=\"-30\" height=\"30\" width=\"60\" rx=\"8\" theme={theme} />\n                  <Tooltip y=\"15\" dominantBaseline=\"middle\" theme={theme}>\n                    {brushLabelValue(\"e\", localBrushExtent[1])}\n                  </Tooltip>\n                </LabelGroup>\n              </g>\n            ) : null}\n\n            {showWestArrow && <OffScreenHandle color={westHandleColor} />}\n\n            {showEastArrow && (\n              <g transform={`translate(${innerWidth}, 0) scale(-1, 1)`}>\n                <OffScreenHandle color={eastHandleColor} />\n              </g>\n            )}\n          </>\n        )}\n      </>\n    ),\n    [\n      brushLabelValue,\n      eastHandleColor,\n      eastHandleInView,\n      flipEastHandle,\n      flipWestHandle,\n      hovering,\n      id,\n      innerHeight,\n      innerWidth,\n      localBrushExtent,\n      showEastArrow,\n      showLabels,\n      showWestArrow,\n      westHandleColor,\n      westHandleInView,\n      xScale,\n    ],\n  );\n};\n","import { useEffect, useRef } from \"react\";\n\n// modified from https://usehooks.com/usePrevious/\nexport function usePrevious<T>(value: T) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef<T>();\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import { useMemo } from \"react\";\nimport { Box } from \"@mui/material\";\nimport { ScaleLinear } from \"d3\";\nimport { Theme } from \"@mui/material/styles\";\nimport { useTheme } from \"@mui/styles\";\n\nexport interface LineProps {\n  value: number;\n  xScale: ScaleLinear<number, number>;\n  innerHeight: number;\n}\n\nexport const Line = ({ value, xScale, innerHeight }: LineProps) => {\n  const theme = useTheme() as Theme;\n\n  return useMemo(\n    () => (\n      <Box\n        sx={{\n          opacity: 0.5,\n          strokeWidth: 2,\n          stroke: theme.colors.primaryMain,\n          fill: \"none\",\n        }}\n        component=\"line\"\n        x1={xScale(value)}\n        y1=\"0\"\n        x2={xScale(value)}\n        y2={innerHeight}\n      />\n    ),\n    [value, xScale, innerHeight],\n  );\n};\n","import { SvgIcon } from \"@mui/material\";\n\nexport default ({ fillColor = \"#BDC8F0\", ...props }) => {\n  return (\n    <SvgIcon viewBox=\"0 0 17 17\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M8.50033 12.6332C10.7831 12.6332 12.6337 10.7826 12.6337 8.49984C12.6337 6.21706 10.7831 4.3665 8.50033 4.3665C6.21755 4.3665 4.36699 6.21706 4.36699 8.49984C4.36699 10.7826 6.21755 12.6332 8.50033 12.6332ZM8.50033 13.8332C11.4458 13.8332 13.8337 11.4454 13.8337 8.49984C13.8337 5.55432 11.4458 3.1665 8.50033 3.1665C5.55481 3.1665 3.16699 5.55432 3.16699 8.49984C3.16699 11.4454 5.55481 13.8332 8.50033 13.8332Z\"\n        fill={fillColor}\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M9.03295 5.8335H7.83295V7.83349H5.83301V9.03349H7.83295V11.1668H9.03295V9.03349H11.1663V7.83349H9.03295V5.8335Z\"\n        fill={fillColor}\n      />\n      <rect\n        x=\"11.167\"\n        y=\"12.1094\"\n        width=\"1.33333\"\n        height=\"3.7233\"\n        transform=\"rotate(-45 11.167 12.1094)\"\n        fill={fillColor}\n      />\n    </SvgIcon>\n  );\n};\n","import { SvgIcon } from \"@mui/material\";\n\nexport default ({ fillColor = \"#BDC8F0\", ...props }) => {\n  return (\n    <SvgIcon viewBox=\"0 0 17 17\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M8.50033 12.6332C10.7831 12.6332 12.6337 10.7826 12.6337 8.49984C12.6337 6.21706 10.7831 4.3665 8.50033 4.3665C6.21755 4.3665 4.36699 6.21706 4.36699 8.49984C4.36699 10.7826 6.21755 12.6332 8.50033 12.6332ZM8.50033 13.8332C11.4458 13.8332 13.8337 11.4454 13.8337 8.49984C13.8337 5.55432 11.4458 3.1665 8.50033 3.1665C5.55481 3.1665 3.16699 5.55432 3.16699 8.49984C3.16699 11.4454 5.55481 13.8332 8.50033 13.8332Z\"\n        fill={fillColor}\n      />\n      <path d=\"M5.83301 7.8999H11.1663V9.0999H5.83301V7.8999Z\" fill={fillColor} />\n      <rect\n        x=\"11.167\"\n        y=\"12.1094\"\n        width=\"1.33333\"\n        height=\"3.7233\"\n        transform=\"rotate(-45 11.167 12.1094)\"\n        fill={fillColor}\n      />\n    </SvgIcon>\n  );\n};\n","import { useEffect, useMemo, useRef } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { select, zoom, zoomIdentity, ZoomTransform, ScaleLinear, ZoomBehavior } from \"d3\";\nimport { Grid, Box, Chip } from \"@mui/material\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport { Replay as ReplayIcon } from \"@mui/icons-material\";\nimport ZoomInIcon from \"assets/images/swap/zoomIn\";\nimport ZoomOutIcon from \"assets/images/swap/zoomOut\";\nimport { isDarkTheme } from \"utils\";\nimport { Theme } from \"@mui/material/styles\";\nimport { ZoomLevels } from \"./types\";\n\nexport const ZoomOverlay = styled.rect`\n  fill: transparent;\n  cursor: grab;\n\n  &:active {\n    cursor: grabbing;\n  }\n`;\n\nconst useStyle = makeStyles((theme: Theme) => {\n  return {\n    chartIcon: {\n      width: \"28px\",\n      height: \"28px\",\n      backgroundColor: theme.palette.background.level3,\n      borderRadius: \"50%\",\n      cursor: \"pointer\",\n      marginRight: \"12px\",\n      \"&:last-child\": {\n        marginRight: 0,\n      },\n      \"& .MuiSvgIcon-root\": {\n        fontSize: \"1.2rem\",\n        marginRight: \"0\",\n        marginLeft: \"0\",\n        color: isDarkTheme(theme) ? \"inherit\" : theme.colors.darkLevel2,\n      },\n      \"& .MuiChip-label\": {\n        display: \"none\",\n      },\n    },\n  };\n});\n\nexport interface ZoomProps {\n  svg: SVGElement | null;\n  xScale: ScaleLinear<number, number>;\n  setZoom: (transform: ZoomTransform) => void;\n  width: number;\n  height: number;\n  resetBrush: () => void;\n  showResetButton: boolean;\n  zoomLevels: ZoomLevels;\n}\n\nexport default function Zoom({\n  svg,\n  xScale,\n  setZoom,\n  width,\n  height,\n  resetBrush,\n  zoomLevels,\n}: {\n  svg: SVGElement | null;\n  xScale: ScaleLinear<number, number>;\n  setZoom: (transform: ZoomTransform) => void;\n  width: number;\n  height: number;\n  resetBrush: () => void;\n  showResetButton: boolean;\n  zoomLevels: ZoomLevels;\n}) {\n  const classes = useStyle();\n  const zoomBehavior = useRef<ZoomBehavior<Element, unknown>>();\n  const theme = useTheme() as Theme;\n\n  const [zoomIn, zoomOut, zoomInitial, zoomReset] = useMemo(\n    () => [\n      () =>\n        svg &&\n        zoomBehavior.current &&\n        select(svg as Element)\n          .transition()\n          .call(zoomBehavior.current.scaleBy, 2),\n      () =>\n        svg &&\n        zoomBehavior.current &&\n        select(svg as Element)\n          .transition()\n          .call(zoomBehavior.current.scaleBy, 0.5),\n      () =>\n        svg &&\n        zoomBehavior.current &&\n        select(svg as Element)\n          .transition()\n          .call(zoomBehavior.current.scaleTo, 0.5),\n      () =>\n        svg &&\n        zoomBehavior.current &&\n        select(svg as Element)\n          .call(zoomBehavior.current.transform, zoomIdentity.translate(0, 0).scale(1))\n          .transition()\n          .call(zoomBehavior.current.scaleTo, 0.5),\n    ],\n    [svg],\n  );\n\n  useEffect(() => {\n    if (!svg) return;\n\n    zoomBehavior.current = zoom()\n      .scaleExtent([zoomLevels.min, zoomLevels.max])\n      .extent([\n        [0, 0],\n        [width, height],\n      ])\n      .on(\"zoom\", ({ transform }) => setZoom(transform));\n\n    select(svg as Element).call(zoomBehavior.current);\n  }, [height, width, setZoom, svg, xScale, zoomBehavior, zoomLevels, zoomLevels.max, zoomLevels.min]);\n\n  useEffect(() => {\n    // reset zoom to initial on zoomLevel change\n    zoomInitial();\n  }, [zoomInitial, zoomLevels]);\n\n  return (\n    <Box\n      sx={{\n        position: \"absolute\",\n        top: \"0\",\n        right: \"0\",\n      }}\n    >\n      <Grid container>\n        <Grid item xs mr=\"5px\">\n          <Chip\n            className={classes.chartIcon}\n            icon={<ReplayIcon />}\n            onClick={() => {\n              resetBrush();\n              zoomReset();\n            }}\n          />\n        </Grid>\n        <Grid item xs mr=\"5px\">\n          <Chip\n            className={classes.chartIcon}\n            icon={<ZoomInIcon fillColor={isDarkTheme(theme) ? undefined : theme.colors.darkLevel2} />}\n            onClick={zoomIn}\n          />\n        </Grid>\n        <Grid item xs>\n          <Chip\n            className={classes.chartIcon}\n            icon={<ZoomOutIcon fillColor={isDarkTheme(theme) ? undefined : theme.colors.darkLevel2} />}\n            onClick={zoomOut}\n          />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n","// @ts-nocheck\nimport { max, scaleLinear, ZoomTransform } from \"d3\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Bound } from \"constants/swap\";\nimport { Area } from \"./Area\";\nimport { AxisBottom } from \"./AxisBottom\";\nimport { Brush } from \"./Brush\";\nimport { Line } from \"./Line\";\nimport Zoom, { ZoomOverlay } from \"./Zoom\";\n\nimport { ChartEntry, LiquidityChartRangeInputProps } from \"./types\";\n\nexport const xAccessor = (d: ChartEntry) => d.price0;\nexport const yAccessor = (d: ChartEntry) => d.activeLiquidity;\n\nexport function Chart({\n  id = \"liquidityChartRangeInput\",\n  data: { series, current },\n  ticksAtLimit,\n  styles,\n  dimensions: { width, height },\n  margins,\n  interactive = true,\n  brushDomain,\n  brushLabels,\n  onBrushDomainChange,\n  zoomLevels,\n}: LiquidityChartRangeInputProps) {\n  const zoomRef = useRef<SVGRectElement | null>(null);\n\n  const [zoom, setZoom] = useState<ZoomTransform | null>(null);\n\n  const [innerHeight, innerWidth] = useMemo(\n    () => [height - margins.top - margins.bottom, width - margins.left - margins.right],\n    [width, height, margins],\n  );\n\n  const { xScale, yScale } = useMemo(() => {\n    const scales = {\n      xScale: scaleLinear()\n        .domain([current * zoomLevels.initialMin, current * zoomLevels.initialMax] as number[])\n        .range([0, innerWidth]),\n      yScale: scaleLinear()\n        .domain([0, max(series, yAccessor)] as number[])\n        .range([innerHeight, 0]),\n    };\n\n    if (zoom) {\n      const newXscale = zoom.rescaleX(scales.xScale);\n      scales.xScale.domain(newXscale.domain());\n    }\n\n    return scales;\n  }, [current, zoomLevels.initialMin, zoomLevels.initialMax, innerWidth, series, innerHeight, zoom]);\n\n  useEffect(() => {\n    // reset zoom as necessary\n    setZoom(null);\n  }, [zoomLevels]);\n\n  useEffect(() => {\n    if (!brushDomain) {\n      onBrushDomainChange(xScale.domain() as [number, number], undefined);\n    }\n  }, [brushDomain, onBrushDomainChange, xScale]);\n\n  return (\n    <>\n      <Zoom\n        svg={zoomRef.current}\n        xScale={xScale}\n        setZoom={setZoom}\n        width={innerWidth}\n        height={\n          // allow zooming inside the x-axis\n          height\n        }\n        resetBrush={() => {\n          onBrushDomainChange(\n            [current * zoomLevels.initialMin, current * zoomLevels.initialMax] as [number, number],\n            \"reset\",\n          );\n        }}\n        showResetButton={Boolean(ticksAtLimit[Bound.LOWER] || ticksAtLimit[Bound.UPPER])}\n        zoomLevels={zoomLevels}\n      />\n      <svg width=\"100%\" height=\"100%\" viewBox={`0 0 ${width} ${height}`} style={{ overflow: \"visible\" }}>\n        <defs>\n          <clipPath id={`${id}-chart-clip`}>\n            <rect x=\"0\" y=\"0\" width={innerWidth} height={height} />\n          </clipPath>\n\n          {brushDomain && (\n            // mask to highlight selected area\n            <mask id={`${id}-chart-area-mask`}>\n              <rect\n                fill=\"white\"\n                x={xScale(brushDomain[0])}\n                y=\"0\"\n                width={xScale(brushDomain[1]) - xScale(brushDomain[0])}\n                height={innerHeight}\n              />\n            </mask>\n          )}\n        </defs>\n\n        <g transform={`translate(${margins.left},${margins.top})`}>\n          <g clipPath={`url(#${id}-chart-clip)`}>\n            <Area series={series} xScale={xScale} yScale={yScale} xValue={xAccessor} yValue={yAccessor} />\n\n            {brushDomain && (\n              // duplicate area chart with mask for selected area\n              <g mask={`url(#${id}-chart-area-mask)`}>\n                <Area\n                  series={series}\n                  xScale={xScale}\n                  yScale={yScale}\n                  xValue={xAccessor}\n                  yValue={yAccessor}\n                  fill={styles.area.selection}\n                />\n              </g>\n            )}\n\n            <Line value={current} xScale={xScale} innerHeight={innerHeight} />\n\n            <AxisBottom xScale={xScale} innerHeight={innerHeight} />\n          </g>\n\n          <ZoomOverlay width={innerWidth} height={height} ref={zoomRef} />\n\n          <Brush\n            id={id}\n            xScale={xScale}\n            interactive={interactive}\n            brushLabelValue={brushLabels}\n            brushExtent={brushDomain ?? (xScale.domain() as [number, number])}\n            innerWidth={innerWidth}\n            innerHeight={innerHeight}\n            setBrushExtent={onBrushDomainChange}\n            westHandleColor={styles.brush.handle.west}\n            eastHandleColor={styles.brush.handle.east}\n          />\n        </g>\n      </svg>\n    </>\n  );\n}\n","import { useCallback, useMemo, ReactNode } from \"react\";\nimport { saturate } from \"polished\";\nimport { BarChart2, Inbox, CloudOff, Loader } from \"react-feather\";\nimport { batch } from \"react-redux\";\nimport { useDensityChartData } from \"hooks/swap/useDensityChartData\";\nimport { format } from \"d3\";\nimport { Bound, FeeAmount } from \"constants/swap\";\nimport { Price, Token } from \"@w2e/swap-sdk\";\nimport { Box, Grid, Typography, useTheme } from \"@mui/material\";\nimport { t } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\nimport { ZoomLevels } from \"./types\";\nimport { Chart } from \"./Chart\";\n\nconst ZOOM_LEVELS: Record<FeeAmount, ZoomLevels> = {\n  [FeeAmount.LOW]: {\n    initialMin: 0.999,\n    initialMax: 1.001,\n    min: 0.00001,\n    max: 1.5,\n  },\n  [FeeAmount.MEDIUM]: {\n    initialMin: 0.5,\n    initialMax: 2,\n    min: 0.00001,\n    max: 20,\n  },\n  [FeeAmount.HIGH]: {\n    initialMin: 0.5,\n    initialMax: 2,\n    min: 0.00001,\n    max: 20,\n  },\n};\n\nfunction InfoBox({ message, icon }: { message?: ReactNode; icon: ReactNode }) {\n  return (\n    <Grid\n      container\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      sx={{ height: \"100%\", minHeight: \"200px\" }}\n      flexDirection=\"column\"\n    >\n      {icon}\n      {message && (\n        <Typography variant=\"h3\" color=\"textPrimary\" align=\"center\" sx={{ marginTop: \"20px\" }}>\n          {message}\n        </Typography>\n      )}\n    </Grid>\n  );\n}\n\nexport interface LiquidityChartRangeInputProps {\n  currencyA: Token | undefined;\n  currencyB: Token | undefined;\n  feeAmount?: FeeAmount;\n  ticksAtLimit: { [bound in Bound]?: boolean | undefined };\n  price: number | undefined | string;\n  priceLower?: Price<Token, Token>;\n  priceUpper?: Price<Token, Token>;\n  onLeftRangeInput: (typedValue: string) => void;\n  onRightRangeInput: (typedValue: string) => void;\n  interactive: boolean;\n}\n\nexport default function LiquidityChartRangeInput({\n  currencyA,\n  currencyB,\n  feeAmount,\n  ticksAtLimit,\n  price,\n  priceLower,\n  priceUpper,\n  onLeftRangeInput,\n  onRightRangeInput,\n  interactive,\n}: LiquidityChartRangeInputProps) {\n  const theme = useTheme() as Theme;\n\n  const tokenAColor = \"#788686\";\n  const tokenBColor = \"#bb8d00\";\n  const COLOR_BLUE = \"#0068FC\";\n\n  const isSorted = currencyA && currencyB && currencyA?.wrapped.sortsBefore(currencyB?.wrapped);\n\n  const { isLoading, isUninitialized, isError, formattedData } = useDensityChartData({\n    currencyA,\n    currencyB,\n    feeAmount: feeAmount ?? FeeAmount.MEDIUM,\n  });\n\n  const onBrushDomainChangeEnded = useCallback(\n    (domain, mode) => {\n      let leftRangeValue = Number(domain[0]);\n      const rightRangeValue = Number(domain[1]);\n      if (leftRangeValue <= 0) {\n        leftRangeValue = 1 / 10 ** 6;\n      }\n      batch(() => {\n        // simulate user input for auto-formatting and other validations\n        if (\n          (!ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER] || mode === \"handle\" || mode === \"reset\") &&\n          leftRangeValue > 0\n        ) {\n          onLeftRangeInput(leftRangeValue.toFixed(6));\n        }\n        if ((!ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER] || mode === \"reset\") && rightRangeValue > 0) {\n          // todo: remove this check. Upper bound for large numbers\n          // sometimes fails to parse to tick.\n          if (rightRangeValue < 1e35) {\n            onRightRangeInput(rightRangeValue.toFixed(6));\n          }\n        }\n      });\n    },\n    [isSorted, onLeftRangeInput, onRightRangeInput, ticksAtLimit],\n  );\n\n  const _interactive = interactive && Boolean(formattedData?.length);\n\n  const brushDomain: [number, number] | undefined = useMemo(() => {\n    const leftPrice = isSorted ? priceLower : priceUpper?.invert();\n    const rightPrice = isSorted ? priceUpper : priceLower?.invert();\n\n    return leftPrice && rightPrice\n      ? [parseFloat(leftPrice?.toSignificant(6)), parseFloat(rightPrice?.toSignificant(6))]\n      : undefined;\n  }, [isSorted, priceLower, priceUpper]);\n\n  const brushLabelValue = useCallback(\n    (d: \"w\" | \"e\", x: number) => {\n      if (!price) return \"\";\n\n      if (d === \"w\" && ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER]) return \"0\";\n      if (d === \"e\" && ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER]) return \"∞\";\n\n      const percent =\n        (x < Number(price) ? -1 : 1) *\n        ((Math.max(x, Number(price)) - Math.min(x, Number(price))) / Number(price)) *\n        100;\n\n      return price ? `${format(Math.abs(percent) > 1 ? \".2~s\" : \".2~f\")(percent)}%` : \"\";\n    },\n    [isSorted, price, ticksAtLimit],\n  );\n\n  return (\n    <Box style={{ minHeight: \"200px\" }}>\n      {isUninitialized ? (\n        <InfoBox\n          message={t`Your position will appear here.`}\n          icon={<Inbox size={56} stroke={theme.palette.background.level3} />}\n        />\n      ) : isLoading ? (\n        <InfoBox icon={<Loader size=\"40px\" stroke={theme.palette.background.level3} />} />\n      ) : isError ? (\n        <InfoBox\n          message={t`Liquidity data not available.`}\n          icon={<CloudOff size={56} stroke={theme.palette.background.level3} />}\n        />\n      ) : !formattedData || formattedData.length === 0 || !price ? (\n        <InfoBox\n          message={t`There is no liquidity data.`}\n          icon={<BarChart2 size={56} stroke={theme.palette.background.level3} />}\n        />\n      ) : (\n        <Grid container alignItems=\"center\" justifyContent=\"center\">\n          <Chart\n            data={{ series: formattedData, current: Number(price) }}\n            dimensions={{ width: 400, height: 200 }}\n            margins={{ top: 10, right: 2, bottom: 20, left: 0 }}\n            styles={{\n              area: {\n                selection: COLOR_BLUE,\n              },\n              brush: {\n                handle: {\n                  west: saturate(0.1, tokenAColor),\n                  east: saturate(0.1, tokenBColor) ?? COLOR_BLUE,\n                },\n              },\n            }}\n            interactive={_interactive}\n            brushLabels={brushLabelValue}\n            brushDomain={brushDomain}\n            onBrushDomainChange={onBrushDomainChangeEnded}\n            zoomLevels={ZOOM_LEVELS[feeAmount ?? FeeAmount.MEDIUM]}\n            ticksAtLimit={ticksAtLimit}\n          />\n        </Grid>\n      )}\n    </Box>\n  );\n}\n","import { useMemo } from \"react\";\nimport { usePoolActiveLiquidity } from \"hooks/swap/usePoolTickData\";\nimport { Token, FeeAmount } from \"@w2e/swap-sdk\";\nimport BigNumber from \"bignumber.js\";\n\nexport interface UseDensityChartDataArgs {\n  currencyA: Token | undefined;\n  currencyB: Token | undefined;\n  feeAmount: FeeAmount;\n}\n\nexport function useDensityChartData({ currencyA, currencyB, feeAmount }: UseDensityChartDataArgs) {\n  const { isLoading, isUninitialized, isError, data } = usePoolActiveLiquidity(currencyA, currencyB, feeAmount);\n\n  const formatData = useMemo(() => {\n    if (!data?.length) return undefined;\n\n    const isSorted = currencyA && currencyB ? currencyA.wrapped.sortsBefore(currencyB.wrapped) : undefined;\n\n    const newData: { activeLiquidity: number; price0: number }[] = [];\n\n    for (let i = 0; i < data.length; i++) {\n      const t = data[i];\n\n      const chartEntry = {\n        activeLiquidity: parseFloat(t.liquidityActive.toString()),\n        // convert price0 to the token0 price when is not sorted\n        price0: isSorted ? parseFloat(t.price0) : parseFloat(new BigNumber(1).div(t.price0).toString()),\n      };\n\n      if (chartEntry.activeLiquidity > 0) {\n        // when is not sorted, should converse the data array, but there use unshift to achieve it\n        if (isSorted) {\n          newData.push(chartEntry);\n        } else {\n          newData.unshift(chartEntry);\n        }\n      }\n    }\n\n    return newData;\n  }, [data, currencyA, currencyB]);\n\n  return useMemo(() => {\n    return {\n      isLoading: isLoading || !data,\n      isUninitialized,\n      isError,\n      formattedData: !isLoading && !isUninitialized ? formatData : undefined,\n    };\n  }, [isLoading, isUninitialized, isError, formatData]);\n}\n","import React, { memo, useState, useEffect, useCallback, useMemo } from \"react\";\nimport { Box, Grid, Typography, TextField, Chip, Button, ButtonBase } from \"@mui/material\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport { Add as AddIcon, Remove as RemoveIcon } from \"@mui/icons-material\";\nimport { Token, Price } from \"@w2e/swap-sdk\";\nimport WarningIcon from \"assets/images/swap/warning\";\nimport { Bound, FeeAmount } from \"constants/swap\";\nimport { MAX_SWAP_INPUT_LENGTH } from \"constants/index\";\nimport TokenToggle from \"components/TokenToggle\";\nimport { isDarkTheme, toSignificantFormatted } from \"utils\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\nimport { NumberTextField } from \"components/index\";\nimport PriceRangeChart from \"./PriceRangeChart\";\n\nconst usePriceRangeInputStyle = makeStyles((theme: Theme) => {\n  return {\n    inputContainer: {\n      border: theme.palette.border.gray200,\n      borderRadius: \"12px\",\n    },\n    input: {\n      \"& input\": {\n        fontSize: \"20px\",\n        fontWeight: 700,\n        textAlign: \"center\",\n        height: \"28px\",\n        padding: \"0 0\",\n        [theme.breakpoints.down(\"sm\")]: {\n          fontSize: \"12px\",\n        },\n      },\n      \"& input::placeholder\": {\n        fontSize: \"20px\",\n        fontWeight: 700,\n        [theme.breakpoints.down(\"sm\")]: {\n          fontSize: \"12px\",\n        },\n      },\n    },\n    chip: {\n      width: \"28px\",\n      height: \"28px\",\n      borderRadius: \"8px\",\n      \"& .MuiSvgIcon-root\": {\n        marginLeft: \"17px\",\n        color: isDarkTheme(theme) ? \"#e0e0e0\" : theme.colors.darkLevel1,\n      },\n    },\n  };\n});\n\nexport interface PriceRangeSelectorProps {\n  label: React.ReactChild;\n  value: string;\n  increment: () => string;\n  decrement: () => string;\n  onRangeInput: (value: string) => void;\n  isUpperFullRange?: boolean | undefined;\n  incrementDisabled?: boolean;\n  decrementDisabled?: boolean;\n  baseCurrency: Token | undefined;\n  quoteCurrency: Token | undefined;\n}\n\nexport function PriceRangeSelector({\n  label = t`Min Price`,\n  value,\n  increment,\n  decrement,\n  onRangeInput,\n  isUpperFullRange,\n  incrementDisabled,\n  decrementDisabled,\n  baseCurrency,\n  quoteCurrency,\n}: PriceRangeSelectorProps) {\n  const classes = usePriceRangeInputStyle();\n\n  const [localValue, setLocalValue] = useState(\"\");\n  const [useLocalValue, setUseLocalValue] = useState(false);\n\n  const handleOnFocus = useCallback(() => {\n    setUseLocalValue(true);\n  }, []);\n\n  const handleOnBlur = useCallback(() => {\n    setUseLocalValue(false);\n    onRangeInput(localValue); // trigger update on parent value\n  }, [localValue, onRangeInput]);\n\n  useEffect(() => {\n    if (localValue !== value && !useLocalValue) {\n      setTimeout(() => {\n        setLocalValue(value); // reset local value to match parent\n      }, 0);\n    }\n  }, [localValue, useLocalValue, value]);\n\n  const handleIncreasePrice = useCallback(() => {\n    setUseLocalValue(false);\n    onRangeInput(increment());\n  }, [increment, onRangeInput]);\n\n  const handleDecreasePrice = useCallback(() => {\n    setUseLocalValue(false);\n    onRangeInput(decrement());\n  }, [decrement, onRangeInput]);\n\n  return (\n    <Grid className={classes.inputContainer} container alignItems=\"center\" justifyContent=\"center\" sx={{ p: 2 }}>\n      <Typography align=\"center\" fontSize={12}>\n        {label}\n      </Typography>\n      <Grid container mt=\"12px\" mb=\"12px\">\n        <Chip\n          className={classes.chip}\n          icon={<RemoveIcon />}\n          onClick={handleDecreasePrice}\n          disabled={decrementDisabled}\n        />\n        <Grid item xs ml=\"5px\" mr=\"5px\">\n          {isUpperFullRange ? (\n            <TextField\n              fullWidth\n              value={localValue}\n              className={classes.input}\n              placeholder=\"0.0\"\n              variant=\"standard\"\n              InputProps={{\n                disableUnderline: true,\n              }}\n              onChange={(e) => setLocalValue(e.target.value)}\n              onBlur={handleOnBlur}\n              onFocus={handleOnFocus}\n            />\n          ) : (\n            <NumberTextField\n              fullWidth\n              value={localValue}\n              className={classes.input}\n              placeholder=\"0.0\"\n              variant=\"standard\"\n              numericProps={{\n                thousandSeparator: true,\n                decimalScale: 8,\n                allowNegative: false,\n                maxLength: MAX_SWAP_INPUT_LENGTH,\n              }}\n              onChange={(e) => setLocalValue(e.target.value)}\n              onBlur={handleOnBlur}\n              onFocus={handleOnFocus}\n            />\n          )}\n        </Grid>\n        <Chip className={classes.chip} icon={<AddIcon />} onClick={handleIncreasePrice} disabled={incrementDisabled} />\n      </Grid>\n      <Typography align=\"center\">\n        {baseCurrency && quoteCurrency ? `${quoteCurrency?.symbol} per ${baseCurrency?.symbol}` : \"\"}\n      </Typography>\n    </Grid>\n  );\n}\n\nconst useSetPriceStyle = makeStyles((theme: Theme) => {\n  return {\n    startPriceDescription: {\n      padding: \"16px\",\n      borderRadius: \"12px\",\n      border: `1px solid ${theme.colors.warningDark}`,\n      backgroundColor: theme.palette.background.level3,\n      \". description\": {\n        color: theme.colors.warningDark,\n        fontSize: \"12px\",\n      },\n    },\n    startPrice: {\n      border: isDarkTheme(theme) ? \"1px solid #202020\" : `1px solid ${theme.colors.lightGray200BorderColor}`,\n      background: isDarkTheme(theme) ? \"transparent\" : \"#fff\",\n      borderRadius: \"12px\",\n      height: \"51px\",\n      padding: \"0 14px\",\n    },\n    priceRangeInput: {\n      position: \"relative\",\n    },\n    fullRangeMask: {\n      position: \"absolute\",\n      top: \"0\",\n      left: \"0\",\n      width: \"100%\",\n      height: \"100%\",\n      background: \"rgba(255, 193, 7, 0.16)\",\n      border: `1px solid ${theme.colors.warningDark}`,\n      borderRadius: \"12px\",\n    },\n    fullRangeButton: {\n      borderRadius: \"12px\",\n      backgroundColor: isDarkTheme(theme) ? theme.colors.darkLevel1 : \"#ffffff\",\n      border: theme.palette.border.gray200,\n      color: isDarkTheme(theme) ? theme.palette.grey[700] : theme.colors.lightTextPrimary,\n      textTransform: \"none\",\n      \"&:hover\": {\n        backgroundColor: theme.palette.mode === \"dark\" ? theme.palette.dark.light + 20 : theme.palette.primary.light,\n        borderColor: theme.palette.mode === \"dark\" ? \"#202020\" : theme.palette.grey[100],\n      },\n    },\n    warningText: {\n      marginTop: \"13px\",\n      color: theme.colors.warningDark,\n    },\n    warningTitle: {\n      color: theme.colors.warningDark,\n      fontWeight: 700,\n      fontSize: \"16px\",\n    },\n    iUnderstand: {\n      padding: \"0 9px\",\n      backgroundColor: theme.colors.warningDark,\n      color: theme.colors.darkLevel1,\n      borderRadius: \"8px\",\n      height: \"32px\",\n      marginTop: \"16px\",\n    },\n  };\n});\n\nexport interface PriceRangeProps {\n  onStartPriceInput: (value: string) => void;\n  onLeftRangeInput: (value: string) => void;\n  onRightRangeInput: (value: string) => void;\n  startPrice: string | number | undefined;\n  noLiquidity?: boolean;\n  priceLower: Price<Token, Token> | undefined;\n  priceUpper: Price<Token, Token> | undefined;\n  baseCurrency: Token | undefined;\n  quoteCurrency: Token | undefined;\n  feeAmount: FeeAmount | undefined;\n  ticksAtLimit: {\n    [Bound.LOWER]: boolean | undefined;\n    [Bound.UPPER]: boolean | undefined;\n  };\n  price: string | number | undefined;\n  getDecrementLower: () => string;\n  getIncrementLower: () => string;\n  getDecrementUpper: () => string;\n  getIncrementUpper: () => string;\n  getSetFullRange: () => void;\n  handleTokenToggle: () => void;\n  poolLoading?: boolean;\n}\n\nconst PriceRange = memo(\n  ({\n    onStartPriceInput,\n    onLeftRangeInput,\n    onRightRangeInput,\n    startPrice,\n    noLiquidity,\n    priceLower,\n    priceUpper,\n    baseCurrency,\n    quoteCurrency,\n    feeAmount,\n    ticksAtLimit,\n    price,\n    getDecrementLower,\n    getIncrementLower,\n    getDecrementUpper,\n    getIncrementUpper,\n    getSetFullRange,\n    handleTokenToggle,\n    poolLoading,\n  }: PriceRangeProps) => {\n    const [isFullRange, setFullRange] = useState(false);\n    const classes = useSetPriceStyle();\n    const theme = useTheme() as Theme;\n\n    const tokenA = (baseCurrency ?? undefined)?.wrapped;\n    const tokenB = (quoteCurrency ?? undefined)?.wrapped;\n    const isSorted = tokenA && tokenB && tokenA.sortsBefore(tokenB);\n\n    const leftPrice = isSorted ? priceLower : priceUpper?.invert();\n    const rightPrice = isSorted ? priceUpper : priceLower?.invert();\n\n    const isRangePriceDisabled = useMemo(\n      () => (noLiquidity && !startPrice) || poolLoading,\n      [noLiquidity, startPrice, poolLoading],\n    );\n\n    const handleFullRangeClick = () => {\n      setFullRange(true);\n    };\n\n    const handleIUnderstand = () => {\n      setFullRange(false);\n      getSetFullRange();\n    };\n\n    return (\n      <>\n        {noLiquidity && (\n          <>\n            <Typography variant=\"h4\" color=\"textPrimary\">\n              <Trans>Set Starting Price</Trans>\n            </Typography>\n            <Box mt={2}>\n              <Box className={classes.startPriceDescription}>\n                <Typography color={theme.colors.warningDark} fontSize={12}>\n                  <Trans>\n                    Before you can add liquidity, this pool needs to be initialized. Creating a trading pair incurs 1\n                    ICP fee for setting up the Swap pool canister. To begin, select an initial price for the pool,\n                    determine your liquidity price range, and decide on the deposit amount. Please be aware that if the\n                    liquidity pool is being established for the first time, the creation of a new canister might require\n                    some time.\n                  </Trans>\n                </Typography>\n              </Box>\n              <Box mt={2}>\n                <NumberTextField\n                  value={startPrice}\n                  fullWidth\n                  placeholder=\"0.0\"\n                  variant=\"outlined\"\n                  numericProps={{\n                    allowNegative: false,\n                    thousandSeparator: true,\n                    decimalScale: 8,\n                    maxLength: MAX_SWAP_INPUT_LENGTH,\n                  }}\n                  onChange={(e) => onStartPriceInput(e.target.value)}\n                />\n              </Box>\n              <Grid container mt={2} mb={2} className={classes.startPrice} alignItems=\"center\">\n                <Typography sx={{ marginRight: \"8px\" }}>\n                  <Trans>Current {baseCurrency?.symbol} Price:</Trans>\n                </Typography>\n                <Grid item xs>\n                  <Grid container alignItems=\"center\">\n                    <Grid\n                      item\n                      xs\n                      sx={{\n                        overflow: \"hidden\",\n                        width: \"0px\",\n                      }}\n                    >\n                      <Typography\n                        fontWeight={600}\n                        color=\"textPrimary\"\n                        align=\"right\"\n                        sx={{\n                          overflow: \"hidden\",\n                          textOverflow: \"ellipsis\",\n                          whiteSpace: \"nowrap\",\n                        }}\n                      >\n                        {startPrice ? `${startPrice}` : \"- \"}\n                      </Typography>\n                    </Grid>\n                    <Typography\n                      fontWeight={600}\n                      color=\"textPrimary\"\n                      sx={{\n                        marginLeft: \"4px\",\n                      }}\n                    >\n                      {quoteCurrency?.symbol}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Box>\n          </>\n        )}\n        <Box>\n          <Grid container alignItems=\"center\">\n            <Grid item xs>\n              <Typography variant=\"h4\" color=\"textPrimary\">\n                <Trans>Set Price Range</Trans>\n              </Typography>\n            </Grid>\n            {baseCurrency && quoteCurrency && (\n              <Grid item>\n                <TokenToggle currencyA={baseCurrency} currencyB={quoteCurrency} handleToggle={handleTokenToggle} />\n              </Grid>\n            )}\n          </Grid>\n\n          <Box\n            sx={\n              isRangePriceDisabled\n                ? {\n                  opacity: \"0.2\",\n                  pointerEvents: \"none\",\n                }\n                : {}\n            }\n          >\n            {/* zoom position */}\n            {!noLiquidity && (\n              <Box mt={3} sx={{ position: \"relative\" }}>\n                <Grid sx={{ height: \"28px\" }} container alignItems=\"center\">\n                  <Typography color=\"textPrimary\" fontSize=\"12px\">\n                    <Trans>Current Price: </Trans> {price ? toSignificantFormatted(price) : \"--\"}\n                    <Typography component=\"span\" sx={{ marginLeft: \"5px\" }} fontSize=\"12px\">\n                      {quoteCurrency?.symbol} per {baseCurrency?.symbol}\n                    </Typography>\n                  </Typography>\n                </Grid>\n                <Box mt={3}>\n                  {/* @ts-ignore */}\n                  <PriceRangeChart\n                    priceLower={priceLower}\n                    priceUpper={priceUpper}\n                    ticksAtLimit={ticksAtLimit}\n                    onLeftRangeInput={onLeftRangeInput}\n                    onRightRangeInput={onRightRangeInput}\n                    currencyA={baseCurrency}\n                    currencyB={quoteCurrency}\n                    feeAmount={feeAmount}\n                    price={price}\n                  />\n                </Box>\n              </Box>\n            )}\n            <Box mt={4} className={classes.priceRangeInput}>\n              <Box\n                sx={{\n                  opacity: isFullRange ? 0.05 : 1,\n                }}\n              >\n                <Grid container justifyContent=\"space-between\">\n                  <Grid item sx={{ width: \"48%\" }}>\n                    <PriceRangeSelector\n                      label={t`Min Price`}\n                      value={\n                        ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER] ? \"0\" : leftPrice?.toSignificant(5) ?? \"\"\n                      }\n                      onRangeInput={onLeftRangeInput}\n                      decrement={isSorted ? getDecrementLower : getIncrementUpper}\n                      increment={isSorted ? getIncrementLower : getDecrementUpper}\n                      decrementDisabled={ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER]}\n                      incrementDisabled={ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER]}\n                      baseCurrency={baseCurrency}\n                      quoteCurrency={quoteCurrency}\n                    />\n                  </Grid>\n                  <Grid item sx={{ width: \"48%\" }}>\n                    <PriceRangeSelector\n                      label={t`Max Price`}\n                      value={\n                        ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER] ? \"∞\" : rightPrice?.toSignificant(6) ?? \"\"\n                      }\n                      onRangeInput={(value) => onRightRangeInput(value)}\n                      decrement={isSorted ? getDecrementUpper : getIncrementLower}\n                      increment={isSorted ? getIncrementUpper : getDecrementLower}\n                      isUpperFullRange={ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER]}\n                      incrementDisabled={ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER]}\n                      decrementDisabled={ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER]}\n                      baseCurrency={baseCurrency}\n                      quoteCurrency={quoteCurrency}\n                    />\n                  </Grid>\n                </Grid>\n                {!noLiquidity && (\n                  <Box mt={2}>\n                    <Button\n                      variant=\"outlined\"\n                      size=\"large\"\n                      fullWidth\n                      color=\"secondary\"\n                      className={classes.fullRangeButton}\n                      onClick={handleFullRangeClick}\n                    >\n                      <Trans>Full Range</Trans>\n                    </Button>\n                  </Box>\n                )}\n              </Box>\n              {isFullRange && (\n                <Box className={classes.fullRangeMask} sx={{ p: 3 }}>\n                  <Grid container alignItems=\"center\">\n                    <Grid item xs=\"auto\" mr=\"12px\">\n                      <Grid container>\n                        <WarningIcon />\n                      </Grid>\n                    </Grid>\n                    <Typography className={classes.warningTitle}>\n                      <Trans>Efficiency Comparison</Trans>\n                    </Typography>\n                  </Grid>\n                  <Typography className={classes.warningText}>\n                    <Trans>Full range positions may earn less fees than concentrated positions.</Trans>\n                  </Typography>\n                  <ButtonBase className={classes.iUnderstand} onClick={handleIUnderstand}>\n                    <Trans>I Understand</Trans>\n                  </ButtonBase>\n                </Box>\n              )}\n            </Box>\n          </Box>\n        </Box>\n      </>\n    );\n  },\n);\n\nexport default PriceRange;\n","/* eslint-disable prefer-const */\nimport { useState, useCallback, useMemo, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Box, Grid, Typography } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport BackIcon from \"assets/images/swap/back\";\nimport FeeSelector from \"components/swap/SwapFeeSelector\";\nimport CurrencySelector from \"components/CurrencySelector\";\nimport DepositAmount from \"components/swap/SwapDepositAmount\";\nimport SwapWrapper from \"components/swap/SwapUIWrapper\";\nimport {\n  useMintState,\n  useMintHandlers,\n  useMintInfo,\n  useRangeCallbacks,\n  useResetMintState,\n} from \"store/swap/liquidity/hooks\";\nimport { useSlippageManager } from \"store/swap/cache/hooks\";\nimport { UseCurrencyState, useToken } from \"hooks/useCurrency\";\nimport { Bound, DEFAULT_FEE, DEFAULT_SWAP_INPUT_ID, FIELD } from \"constants/swap\";\nimport ConfirmAddLiquidity from \"components/swap/AddLiquidityConfirmModal\";\nimport { useAccount } from \"store/global/hooks\";\nimport { useErrorTip, useLoadingTip } from \"hooks/useTips\";\nimport BigNumber from \"bignumber.js\";\nimport { isDarkTheme } from \"utils/index\";\nimport { maxAmountFormat } from \"utils/swap\";\nimport { Trans, t } from \"@lingui/macro\";\nimport Identity, { CallbackProps, SubmitLoadingProps } from \"components/Identity\";\nimport { Identity as TypeIdentity } from \"types/global\";\nimport { useAccountPrincipal } from \"store/auth/hooks\";\nimport { Theme } from \"@mui/material/styles\";\nimport { TokenInfo } from \"types/token\";\nimport { useAddLiquidityCall } from \"hooks/swap/useAddLiquidity\";\nimport StepViewButton from \"components/Steps/View\";\nimport AddLiquidityButton from \"components/swap/AddLiquidityButton\";\nimport { ExternalTipArgs } from \"types/index\";\nimport { ReclaimTips } from \"components/ReclaimTips\";\nimport { usePCMMetadata, useUserPCMBalance } from \"@w2e/hooks\";\nimport SetPriceRange from \"./SetPriceRange\";\n\nconst DISABLED_STYLE = {\n  opacity: 0.2,\n  pointerEvents: \"none\",\n};\n\nconst useStyle = makeStyles((theme: Theme) => {\n  return {\n    container: {\n      width: \"920px\",\n      backgroundColor: isDarkTheme(theme) ? theme.palette.background.level1 : theme.colors.lightGray50,\n      borderRadius: theme.radius,\n      padding: \"24px\",\n      \"@media(max-width: 960px)\": {\n        width: \"460px\",\n        padding: \"12px\",\n      },\n    },\n    topHeader: {\n      paddingBottom: \"12px\",\n      borderBottom: isDarkTheme(theme) ? \"1px solid #212946\" : `1px solid ${theme.colors.lightGray200BorderColor}`,\n    },\n    outerBox: {\n      paddingTop: \"24px\",\n      display: \"grid\",\n      gap: \"24px 48px\",\n      gridTemplateRows: \"max-content\",\n      gridTemplateColumns: \"1fr 1fr\",\n      gridAutoFlow: \"row\",\n      \"@media(max-width: 960px)\": {\n        gridTemplateColumns: \"1fr\",\n      },\n    },\n    priceRange: {\n      gridArea: \"1 / 2 / 3 / auto\",\n      height: \"fit-content\",\n      \"@media(max-width: 960px)\": {\n        gridArea: \"2 / 1 / 3 / auto\",\n      },\n    },\n  };\n});\n\ninterface URLParams {\n  currencyIdA: string;\n  currencyIdB: string;\n  feeAmount: string;\n}\n\nexport default function AddLiquidity() {\n  const classes = useStyle();\n  const history = useHistory();\n  const principal = useAccountPrincipal();\n\n  let { currencyIdA, currencyIdB, feeAmount: feeAmountFromUrl } = useParams<URLParams>();\n\n  if (!currencyIdA) currencyIdA = DEFAULT_SWAP_INPUT_ID;\n\n  const [confirmModalShow, setConfirmModalShow] = useState(false);\n\n  const [slippageTolerance] = useSlippageManager(\"mint\");\n\n  const feeAmount = feeAmountFromUrl ? Number(feeAmountFromUrl) : DEFAULT_FEE;\n\n  const [useCurrencyALoading, baseCurrency] = useToken(currencyIdA);\n  const [useCurrencyBLoading, currencyB] = useToken(currencyIdB);\n  const quoteCurrency = baseCurrency && currencyB && baseCurrency.equals(currencyB) ? undefined : currencyB;\n\n  const { independentField, typedValue, startPrice } = useMintState();\n\n  const {\n    ticks,\n    pricesAtTicks,\n    invalidRange,\n    dependentField,\n    parsedAmounts,\n    depositADisabled,\n    depositBDisabled,\n    ticksAtLimit,\n    errorMessage,\n    position,\n    invertPrice,\n    price,\n    pool,\n    noLiquidity,\n    currencyBalances,\n    atMaxAmounts,\n    maxAmounts,\n    poolLoading,\n  } = useMintInfo(baseCurrency ?? undefined, quoteCurrency ?? undefined, feeAmount, baseCurrency ?? undefined);\n\n  const isValid = !errorMessage && !invalidRange;\n\n  const { [Bound.LOWER]: tickLower, [Bound.UPPER]: tickUpper } = ticks;\n  const { [Bound.LOWER]: priceLower, [Bound.UPPER]: priceUpper } = pricesAtTicks;\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: parsedAmounts[dependentField]?.toExact() ?? \"\",\n  };\n\n  const { onFieldAInput, onFieldBInput, onLeftRangeInput, onRightRangeInput, onStartPriceInput } = useMintHandlers();\n\n  const resetMintState = useResetMintState();\n\n  const handleBackToPosition = useCallback(() => {\n    resetMintState();\n    history.push(\"/swap/liquidity\");\n  }, [history, resetMintState]);\n\n  const onTokenAChange = (token: TokenInfo) => {\n    const tokenId = token.canisterId.toString();\n\n    if (tokenId === currencyIdB || !currencyIdB) {\n      history.push(`/swap/liquidity/add/${tokenId}`);\n    } else {\n      history.push(`/swap/liquidity/add/${tokenId}/${currencyIdB}`);\n    }\n  };\n\n  const onTokenBChange = (token: TokenInfo) => {\n    const tokenId = token.canisterId.toString();\n\n    if (tokenId === currencyIdA || !currencyIdA) {\n      history.push(`/swap/liquidity/add/${tokenId}`);\n    } else {\n      history.push(`/swap/liquidity/add/${currencyIdA}/${tokenId}`);\n    }\n  };\n\n  const handleFeeChange = useCallback(\n    (feeValue) => {\n      if (currencyIdA && currencyIdB) {\n        history.push(`/swap/liquidity/add/${currencyIdA}/${currencyIdB}/${feeValue}`);\n      }\n    },\n    [currencyIdA, currencyIdB],\n  );\n\n  const clearAll = useCallback(() => {\n    onFieldAInput(\"\");\n    onFieldBInput(\"\");\n    onLeftRangeInput(\"\");\n    onRightRangeInput(\"\");\n    history.push(`/swap/liquidity/add`);\n  }, [history, onFieldAInput, onFieldBInput, onLeftRangeInput, onRightRangeInput]);\n\n  const { getDecrementLower, getIncrementLower, getDecrementUpper, getIncrementUpper, getSetFullRange } =\n    useRangeCallbacks(baseCurrency ?? undefined, quoteCurrency ?? undefined, feeAmount, tickLower, tickUpper, pool);\n\n  const isValidPair = currencyIdA && currencyIdB && currencyIdA !== currencyIdB;\n\n  const handleOnAdd = useCallback(() => {\n    setConfirmModalShow(true);\n  }, []);\n\n  const account = useAccount();\n\n  const [openLoadingTip, closeLoadingTip] = useLoadingTip();\n  const [openErrorTip] = useErrorTip();\n\n  const { result: pcmMetadata } = usePCMMetadata();\n  const { result: userPCMBalance } = useUserPCMBalance(principal);\n\n  const [, pcmToken] = useToken(pcmMetadata?.tokenCid.toString());\n  const getAddLiquidityCall = useAddLiquidityCall();\n\n  const handleOnConfirm = useCallback(\n    async (identity: TypeIdentity, { loading }: SubmitLoadingProps) => {\n      if (\n        !identity ||\n        loading ||\n        !position ||\n        !principal ||\n        !pcmMetadata ||\n        !pcmToken ||\n        userPCMBalance === undefined ||\n        userPCMBalance === null\n      )\n        return;\n\n      const needPayForPCM = userPCMBalance < pcmMetadata.passcodePrice;\n\n      const { call, key } = await getAddLiquidityCall({\n        noLiquidity,\n        position,\n        pcmMetadata,\n        needPayForPCM,\n        pcmToken,\n        principal: principal.toString(),\n        openExternalTip: ({ message, tipKey }: ExternalTipArgs) => {\n          openErrorTip(<ReclaimTips message={message} tipKey={tipKey} />);\n        },\n      });\n\n      const loadingTipKey = openLoadingTip(t`Add ${baseCurrency?.symbol}/${quoteCurrency?.symbol} liquidity`, {\n        extraContent: <StepViewButton step={key} />,\n      });\n\n      setConfirmModalShow(false);\n\n      const result = await call();\n\n      if (!result) {\n        closeLoadingTip(loadingTipKey);\n        return;\n      }\n\n      closeLoadingTip(loadingTipKey);\n\n      handleBackToPosition();\n    },\n    [position, slippageTolerance, account, noLiquidity],\n  );\n\n  const handleOnCancel = useCallback(() => {\n    setConfirmModalShow(false);\n  }, []);\n\n  const isDepositAmountDisabled = useMemo(\n    () =>\n      invalidRange || tickLower === undefined || tickUpper === undefined || (noLiquidity && !startPrice) || poolLoading,\n    [invalidRange, tickLower, tickUpper, startPrice, noLiquidity, poolLoading],\n  );\n\n  const handleTokenToggle = () => {\n    if (!ticksAtLimit[Bound.LOWER] && !ticksAtLimit[Bound.UPPER]) {\n      onLeftRangeInput((invertPrice ? priceLower : priceUpper?.invert())?.toSignificant(6) ?? \"\");\n      onRightRangeInput((invertPrice ? priceUpper : priceLower?.invert())?.toSignificant(6) ?? \"\");\n      onFieldAInput(formattedAmounts[FIELD.CURRENCY_B] ?? \"\");\n    }\n\n    history.push(`/swap/liquidity/add/${currencyIdB}/${currencyIdA}${feeAmount ? `/${feeAmount}` : \"\"}`);\n  };\n\n  const handleCurrencyAMax = () => {\n    const currencyAAmount = maxAmounts[FIELD.CURRENCY_A];\n\n    if (!baseCurrency || !currencyAAmount) return;\n\n    onFieldAInput(maxAmountFormat(currencyAAmount.toExact(), currencyAAmount.currency.decimals));\n  };\n\n  const handleCurrencyBMax = () => {\n    const currencyBAmount = maxAmounts[FIELD.CURRENCY_B];\n\n    if (!currencyB || !currencyBAmount) return;\n\n    onFieldBInput(maxAmountFormat(currencyBAmount.toExact(), currencyBAmount.currency.decimals));\n  };\n\n  useEffect(() => {\n    return () => {\n      resetMintState();\n    };\n  }, []);\n\n  return (\n    <Identity onSubmit={handleOnConfirm}>\n      {({ submit, loading }: CallbackProps) => (\n        <>\n          <SwapWrapper>\n            <Grid container justifyContent=\"center\">\n              <Grid item className={classes.container}>\n                <Grid container className={classes.topHeader}>\n                  <Grid item xs={3} container alignItems=\"center\">\n                    <BackIcon\n                      sx={{\n                        cursor: \"pointer\",\n                      }}\n                      onClick={handleBackToPosition}\n                    />\n                  </Grid>\n                  <Grid item xs={6} container justifyContent=\"center\" alignItems=\"center\">\n                    <Typography variant=\"h3\" color=\"textPrimary\" align=\"center\">\n                      <Trans>Add Liquidity</Trans>\n                    </Typography>\n                  </Grid>\n                  <Grid item container alignItems=\"center\" xs={3} sx={{ position: \"relative\" }}>\n                    <Grid item xs>\n                      <Grid container justifyContent=\"flex-end\">\n                        <Typography sx={{ cursor: \"pointer\" }} color=\"secondary\" component=\"span\" onClick={clearAll}>\n                          <Trans>clear all</Trans>\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Box className={classes.outerBox}>\n                  <Box>\n                    <Typography variant=\"h4\" color=\"textPrimary\">\n                      <Trans>Select Pair</Trans>\n                    </Typography>\n                    <Grid container mt={2} spacing=\"12px\">\n                      <Grid item xs={6}>\n                        <CurrencySelector\n                          currencyId={currencyIdA}\n                          onChange={onTokenAChange}\n                          loading={useCurrencyALoading === UseCurrencyState.LOADING}\n                          disabledCurrency={[...(baseCurrency ? [baseCurrency] : [])]}\n                        />\n                      </Grid>\n                      <Grid item xs={6}>\n                        <CurrencySelector\n                          currencyId={currencyIdB}\n                          onChange={onTokenBChange}\n                          loading={useCurrencyBLoading === UseCurrencyState.LOADING}\n                          disabledCurrency={[...(quoteCurrency ? [quoteCurrency] : [])]}\n                        />\n                      </Grid>\n                    </Grid>\n                    <Box mt={2} sx={!isValidPair ? DISABLED_STYLE : {}}>\n                      <FeeSelector\n                        defaultActiveFee={feeAmount}\n                        onSelect={handleFeeChange}\n                        currencyA={baseCurrency}\n                        currencyB={quoteCurrency}\n                      />\n                    </Box>\n                  </Box>\n                  <Box sx={isDepositAmountDisabled ? DISABLED_STYLE : {}}>\n                    <Typography variant=\"h4\" color=\"textPrimary\">\n                      <Trans>Deposit Amounts</Trans>\n                    </Typography>\n                    <Box mt={2}>\n                      <Box>\n                        <DepositAmount\n                          currency={baseCurrency}\n                          value={formattedAmounts[FIELD.CURRENCY_A]}\n                          onUserInput={onFieldAInput}\n                          locked={depositADisabled}\n                          currencyBalance={currencyBalances?.[FIELD.CURRENCY_A]}\n                          showMaxButton={\n                            !atMaxAmounts[FIELD.CURRENCY_A] &&\n                            new BigNumber(maxAmounts[FIELD.CURRENCY_A]?.toExact() ?? 0).isGreaterThan(0)\n                          }\n                          onMax={handleCurrencyAMax}\n                        />\n                      </Box>\n                      <Box mt={2}>\n                        <DepositAmount\n                          currency={quoteCurrency}\n                          value={formattedAmounts[FIELD.CURRENCY_B]}\n                          onUserInput={onFieldBInput}\n                          locked={depositBDisabled}\n                          currencyBalance={currencyBalances?.[FIELD.CURRENCY_B]}\n                          showMaxButton={\n                            !atMaxAmounts[FIELD.CURRENCY_B] &&\n                            new BigNumber(maxAmounts[FIELD.CURRENCY_B]?.toExact() ?? 0).isGreaterThan(0)\n                          }\n                          onMax={handleCurrencyBMax}\n                        />\n                      </Box>\n                    </Box>\n                    <Box\n                      mt={2}\n                      sx={{\n                        \"@media(max-width: 959px)\": {\n                          display: \"block\",\n                        },\n                        \"@media(min-width: 960px)\": {\n                          display: \"none\",\n                        },\n                      }}\n                    >\n                      <AddLiquidityButton size=\"large\" disabled={!isValid} error={errorMessage} onClick={handleOnAdd} />\n                    </Box>\n                  </Box>\n                  <Box className={classes.priceRange} sx={!isValidPair ? DISABLED_STYLE : {}}>\n                    <SetPriceRange\n                      poolLoading={poolLoading}\n                      startPrice={startPrice}\n                      noLiquidity={noLiquidity}\n                      onStartPriceInput={onStartPriceInput}\n                      onLeftRangeInput={onLeftRangeInput}\n                      onRightRangeInput={onRightRangeInput}\n                      getDecrementLower={getDecrementLower}\n                      getIncrementLower={getIncrementLower}\n                      getDecrementUpper={getDecrementUpper}\n                      getIncrementUpper={getIncrementUpper}\n                      getSetFullRange={getSetFullRange}\n                      handleTokenToggle={handleTokenToggle}\n                      baseCurrency={baseCurrency}\n                      quoteCurrency={quoteCurrency}\n                      ticksAtLimit={ticksAtLimit}\n                      feeAmount={feeAmount}\n                      priceLower={priceLower}\n                      priceUpper={priceUpper}\n                      price={price ? parseFloat((invertPrice ? price.invert() : price).toSignificant(8)) : undefined}\n                    />\n                    <Box\n                      mt={2}\n                      sx={{\n                        \"@media(max-width:960px)\": {\n                          display: \"none\",\n                        },\n                      }}\n                    >\n                      <AddLiquidityButton\n                        size=\"large\"\n                        disabled={!isValid || loading}\n                        error={errorMessage}\n                        onClick={handleOnAdd}\n                      />\n                    </Box>\n                  </Box>\n                </Box>\n              </Grid>\n            </Grid>\n          </SwapWrapper>\n\n          {confirmModalShow && !!position && (\n            <ConfirmAddLiquidity\n              onConfirm={submit}\n              onCancel={handleOnCancel}\n              open={confirmModalShow}\n              position={position}\n            />\n          )}\n        </>\n      )}\n    </Identity>\n  );\n}\n","import { useCallback } from \"react\";\nimport { useCallsData } from \"../useCallData\";\nimport { swapFactory } from \"@w2e/actor\";\nimport { resultFormat } from \"@w2e/utils\";\nimport { Principal } from \"@dfinity/principal\";\nimport type { PassCode } from \"@w2e/candid\";\n\nexport async function getPassCode(principal: string) {\n  return resultFormat<PassCode[]>(await (await swapFactory()).getPasscodesByPrincipal(Principal.fromText(principal)))\n    .data;\n}\n\nexport function usePassCode(principal: string | undefined, reload?: boolean) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!principal) return undefined;\n      return getPassCode(principal);\n    }, [principal]),\n    reload,\n  );\n}\n","import { useCallback } from \"react\";\nimport { passCodeManager } from \"@w2e/actor\";\nimport { resultFormat } from \"@w2e/utils\";\nimport { Principal } from \"@dfinity/principal\";\nimport { useCallsData } from \"../useCallData\";\n\nexport function usePCMMetadata() {\n  return useCallsData(\n    useCallback(async () => {\n      return resultFormat<{\n        passcodePrice: bigint;\n        tokenCid: Principal;\n        factoryCid: Principal;\n      }>(await (await passCodeManager()).metadata()).data;\n    }, []),\n  );\n}\n\nexport async function requestPassCode(token0: Principal, token1: Principal, fee: bigint) {\n  const result = await (await passCodeManager(true)).requestPasscode(token0, token1, fee);\n\n  return resultFormat<string>(result);\n}\n\nexport async function withdrawPCMBalance(amount: bigint, fee: bigint) {\n  const result = await (await passCodeManager(true)).withdraw({ fee, amount });\n  return resultFormat<bigint>(result);\n}\n\nexport async function destroyPassCode(token0: string, token1: string, fee: bigint) {\n  const result = await (\n    await passCodeManager(true)\n  ).destoryPasscode(Principal.fromText(token0), Principal.fromText(token1), fee);\n\n  return resultFormat<string>(result);\n}\n\nexport function useUserPCMBalance(principal: Principal | undefined, reload?: boolean) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!principal) return undefined;\n\n      return resultFormat<bigint>(await (await passCodeManager()).balanceOf(principal)).data;\n    }, [principal]),\n    reload,\n  );\n}\n"],"names":["useStyle","bgGray","makeStyles","theme","selectButton","position","padding","height","color","cursor","backgroundColor","isDarkTheme","palette","background","level2","colors","lightGray200","borderRadius","concat","radius","selectButtonActive","lineHeight","themeOption","defaultGradient","arrow","CurrencySelectorButton","_ref","currency","onClick","loading","disabled","classes","handleButtonClick","useCallback","_jsxs","Grid","container","className","alignItems","children","_jsx","item","mr","xs","gap","TokenImage","logo","size","tokenId","address","Typography","component","symbol","KeyboardArrowDown","sx","fontSize","Loading","circularSize","Box","Trans","id","CurrencySelector","currencyId","onChange","disabledCurrency","activeCurrencies","selectorShow","setSelectorShow","useState","token","useToken","disabledCurrencyIds","useMemo","length","map","activeCurrencyIds","_Fragment","CurrencySelectButton","Selector","open","onClose","version","LinkIcon","width","viewBox","fill","xmlns","fillRule","clipRule","d","SwapWrapper","buttons","Wrapper","TabPanel","tabs","mt","SwapV2Wrapper","_ref2","value","i18n","_","path","key","fontWeight","margin","top","_SwapWrapper","_ref3","BackIcon","props","SvgIcon","FEE_DESCRIPTION","FeeAmount","LOW","MEDIUM","HIGH","NO_LIQUIDITY","LOCAL_FEES","feeTier","description","feeFormat","feeValue","BigNumber","div","toString","border","feeItem","lightGray200BorderColor","button","level4","outline","textPrimary","breakpoints","down","feeButton","display","textAlign","activeFee","SwapFeeSelector","currencyA","currencyB","defaultActiveFee","feeAmountKeys","fee","token0","token1","result","tvl","usePoolsTokenAmountsFromKey","fees","index","activeFeeObject","filter","totalValueLocked","reduce","accumulator","currentValue","_currentValue$balance","_currentValue$balance2","plus","balance0","balance1","currentLiquidityPercentage","_fee$balance","_fee$balance2","_fee$balance3","isEqualTo","multipliedBy","toFixed","getPercentage","p","variant","values","0","SwapPoolId","useInitialAddLiquiditySteps","initialStepContent","useStepContentManager","history","useHistory","closeAllSteps","useCloseAllSteps","handleReclaim","push","handleReclaimPCMBalance","_ref4","noLiquidity","retry","pcmMetadata","pcmToken","hasPassCode","needPayForPCM","content","pool","symbol0","symbol1","amount0","toFormat","parseTokenAmount","actualAmountToPool","mintAmounts","decimals","amount1","amount0Value","Avatar","src","amount1Value","originSteps","title","isUseTransfer","label","errorActions","TextButton","errorMessage","pcmAmount","passcodePrice","unshift","PassCodeManagerId","step","undefined","getAddLiquidityStepDetails","String","useAddLiquidityCall","getCalls","principal","useAccountPrincipal","openSuccessTip","useSuccessTip","openErrorTip","useErrorTip","approve","useSwapApprove","deposit","useSwapDeposit","transfer","useSwapTransfer","updateStoreUserPositionPool","useUpdateUserPositionPools","openExternalTip","stepKey","getPoolId","_SwapPoolId","async","BigInt","transFee","data","message","requestPassCode","Principal","fromText","identity","getActorIdentity","sqrtRatioX96","status","createPool","canisterId","poolId","amount0Desired","tipKey","amount1Desired","_mint","tickLower","tickUpper","updateUserPositionPoolId","getLocaleMessage","fn","useAddLiquidityCalls","formatCall","useStepCalls","initialStepDetails","_ref5","passCode","getPassCode","find","ele","newStepKey","calls","call","reset","AddLiquidityButton","error","Button","fullWidth","level3","gray200","level1","buttonBase","TokenToggle","handleToggle","isSorted","sortsBefore","ButtonBase","PRICE_FIXED_DIGITS","computeSurroundingTicks","activeTickProcessed","sortedTickData","pivot","ascending","previousTickProcessed","processedTicks","i","tickIdx","Number","currentTickProcessed","liquidityActive","liquidityNet","JSBI","price0","tickToPrice","reverse","getActiveTick","tickCurrent","feeAmount","Math","floor","TICK_SPACINGS","usePoolActiveLiquidity","wrapped","poolState","usePool","activeTick","isLoading","ticks","usePoolCanisterId","allTicks","useSwapAllTicks","tick","sqrtRatioX","TickMath","getSqrtRatioAtTick","tempInfo","liquidityGross","price1","divide","tickIndex","price0Decimal","price1Decimal","useAllTicks","sortedTicks","groupSeparator","_price0","_price1","sort","a","b","_pool$liquidity","isUninitialized","PoolState","NOT_EXISTS","EXISTS","LOADING","findIndex","console","liquidity","formatTicks","subsequentTicks","ticksProcessed","isError","COLOR_BLUE_2","Path","styled","withConfig","displayName","componentId","Area","series","xScale","yScale","xValue","yValue","_area$curve$x$y1$y","area","curve","curveStepAfter","x","y1","y0","inRange","innerWidth","StyledGroup","g","text2","Axis","axisGenerator","ref","axis","select","remove","AxisBottom","innerHeight","offset","transform","axisBottom","brushHandlePath","join","brushHandleAccentPath","OffScreenHandle","points","stroke","strokeWidth","strokeLinejoin","Handle","HandleAccent","LabelGroup","visible","TooltipBackground","rect","Tooltip","text","compare","a1","a2","Brush","_ref6","interactive","brushLabelValue","brushExtent","setBrushExtent","westHandleColor","eastHandleColor","brushRef","useRef","brushBehavior","useTheme","localBrushExtent","setLocalBrushExtent","showLabels","setShowLabels","hovering","setHovering","previousBrushExtent","useEffect","current","usePrevious","brushed","event","type","selection","mode","scaled","invert","brushX","extent","max","handleSize","on","transition","move","selectAll","attr","timeout","setTimeout","clearTimeout","flipWestHandle","flipEastHandle","showWestArrow","showEastArrow","westHandleInView","eastHandleInView","x1","x2","y2","stopColor","y","clipPath","onMouseEnter","onMouseLeave","rx","dominantBaseline","Line","opacity","primaryMain","fillColor","ZoomOverlay","chartIcon","marginRight","marginLeft","darkLevel2","Zoom","svg","setZoom","resetBrush","zoomLevels","zoomBehavior","zoomIn","zoomOut","zoomInitial","zoomReset","scaleBy","scaleTo","zoomIdentity","translate","scale","zoom","scaleExtent","min","right","Chip","icon","ReplayIcon","ZoomInIcon","ZoomOutIcon","xAccessor","yAccessor","activeLiquidity","Chart","ticksAtLimit","styles","dimensions","margins","brushDomain","brushLabels","onBrushDomainChange","zoomRef","bottom","left","scales","scaleLinear","domain","initialMin","initialMax","range","newXscale","rescaleX","showResetButton","Boolean","Bound","LOWER","UPPER","style","overflow","mask","brush","handle","west","east","ZOOM_LEVELS","InfoBox","justifyContent","minHeight","flexDirection","align","marginTop","LiquidityChartRangeInput","_saturate","price","priceLower","priceUpper","onLeftRangeInput","onRightRangeInput","COLOR_BLUE","formattedData","formatData","newData","t","chartEntry","parseFloat","useDensityChartData","onBrushDomainChangeEnded","leftRangeValue","rightRangeValue","batch","_interactive","leftPrice","rightPrice","toSignificant","percent","format","abs","Inbox","Loader","CloudOff","saturate","BarChart2","usePriceRangeInputStyle","inputContainer","input","chip","darkLevel1","PriceRangeSelector","increment","decrement","onRangeInput","isUpperFullRange","incrementDisabled","decrementDisabled","baseCurrency","quoteCurrency","localValue","setLocalValue","useLocalValue","setUseLocalValue","handleOnFocus","handleOnBlur","handleIncreasePrice","handleDecreasePrice","mb","RemoveIcon","ml","TextField","placeholder","InputProps","disableUnderline","e","target","onBlur","onFocus","NumberTextField","numericProps","thousandSeparator","decimalScale","allowNegative","maxLength","MAX_SWAP_INPUT_LENGTH","AddIcon","useSetPriceStyle","startPriceDescription","warningDark","startPrice","priceRangeInput","fullRangeMask","fullRangeButton","grey","lightTextPrimary","textTransform","dark","light","primary","borderColor","warningText","warningTitle","iUnderstand","memo","_leftPrice$toSignific","_rightPrice$toSignifi","onStartPriceInput","getDecrementLower","getIncrementLower","getDecrementUpper","getIncrementUpper","getSetFullRange","handleTokenToggle","poolLoading","isFullRange","setFullRange","tokenA","tokenB","isRangePriceDisabled","textOverflow","whiteSpace","pointerEvents","toSignificantFormatted","PriceRangeChart","handleFullRangeClick","WarningIcon","handleIUnderstand","DISABLED_STYLE","lightGray50","topHeader","paddingBottom","borderBottom","outerBox","paddingTop","gridTemplateRows","gridTemplateColumns","gridAutoFlow","priceRange","gridArea","AddLiquidity","_parsedAmounts$depend","_parsedAmounts$depend2","currencyIdA","currencyIdB","feeAmountFromUrl","useParams","DEFAULT_SWAP_INPUT_ID","confirmModalShow","setConfirmModalShow","slippageTolerance","useSlippageManager","DEFAULT_FEE","useCurrencyALoading","useCurrencyBLoading","equals","independentField","typedValue","useMintState","pricesAtTicks","invalidRange","dependentField","parsedAmounts","depositADisabled","depositBDisabled","invertPrice","currencyBalances","atMaxAmounts","maxAmounts","useMintInfo","isValid","formattedAmounts","toExact","onFieldAInput","onFieldBInput","useMintHandlers","resetMintState","useResetMintState","handleBackToPosition","onTokenAChange","onTokenBChange","handleFeeChange","clearAll","useRangeCallbacks","isValidPair","handleOnAdd","account","useAccount","openLoadingTip","closeLoadingTip","useLoadingTip","usePCMMetadata","userPCMBalance","useUserPCMBalance","tokenCid","getAddLiquidityCall","handleOnConfirm","ReclaimTips","loadingTipKey","1","extraContent","StepViewButton","handleOnCancel","isDepositAmountDisabled","_toSignificant","_toSignificant2","_formattedAmounts$FIE","FIELD","CURRENCY_B","handleCurrencyAMax","currencyAAmount","CURRENCY_A","maxAmountFormat","handleCurrencyBMax","currencyBAmount","Identity","onSubmit","_maxAmounts$FIELD$CUR","_maxAmounts$FIELD$CUR2","_maxAmounts$FIELD$CUR3","_maxAmounts$FIELD$CUR4","submit","spacing","UseCurrencyState","FeeSelector","onSelect","DepositAmount","onUserInput","locked","currencyBalance","showMaxButton","isGreaterThan","onMax","SetPriceRange","ConfirmAddLiquidity","onConfirm","onCancel","fulfilled","generator","next","reject","rejected","throw","done","resolve","then","apply","thisArg","_arguments","__awaiter","resultFormat","swapFactory","getPasscodesByPrincipal","usePassCode","reload","useCallsData","passCodeManager","metadata","requestPasscode","withdrawPCMBalance","amount","withdraw","destroyPassCode","destoryPasscode","balanceOf"],"sourceRoot":""}
{"version":3,"file":"static/js/4287.a02f432b.chunk.js","mappings":"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","sources":["components/swap/AddLiquidityConfirmModal.tsx","hooks/swap/usePriceInvert.ts","../node_modules/.pnpm/@mui+icons-material@5.5.0_@mui+material@5.15.20_@types+react@17.0.2_react@17.0.2/node_modules/@mui/icons-material/esm/ArrowBack.js","components/swap/Header.tsx","components/swap/LiquidityInfo.tsx","components/swap/PositionRangeState.tsx","assets/images/swap/Lock.tsx","components/swap/SwapDepositAmount.tsx","hooks/swap/usePosition.ts","hooks/swap/useIncreaseLiquidity.ts","components/swap/IncreaseLiquiditySteps.tsx","views/swap-liquidity-v3/liquidity/IncreaseLiquidity/index.tsx","../node_modules/.pnpm/@mui+icons-material@5.5.0_@mui+material@5.15.20_@types+react@17.0.2_react@17.0.2/node_modules/@mui/icons-material/esm/SyncAlt.js","../packages/swap-sdk/src/utils/getPriceOrderingFromPositionForUI.ts","../packages/swap-sdk/src/utils/invert.ts"],"sourcesContent":["import { useState, useMemo } from \"react\";\nimport { Typography, Grid, Button } from \"@mui/material\";\nimport SwapModal from \"components/modal/swap\";\nimport { formatTickPrice } from \"utils/swap/formatTickPrice\";\nimport { Bound } from \"constants/swap\";\nimport { Trans } from \"@lingui/macro\";\nimport { SyncAlt as SyncAltIcon } from \"@mui/icons-material\";\nimport { Position, Token } from \"@w2e/swap-sdk\";\nimport { useTicksAtLimitInvert } from \"hooks/swap/usePriceInvert\";\n\nexport interface AddLiquidityConfirmModalProps {\n  open: boolean;\n  onCancel: () => void;\n  onConfirm: () => void;\n  position: Position;\n  baseCurrencyDefault?: Token;\n}\n\nexport default function AddLiquidityConfirmModal({\n  open,\n  onCancel,\n  onConfirm,\n  position,\n  baseCurrencyDefault,\n}: AddLiquidityConfirmModalProps) {\n  const currency0 = position?.pool?.token0;\n  const currency1 = position?.pool?.token1;\n\n  const [manuallyInverted, setManuallyInverted] = useState(false);\n\n  const baseCurrency = useMemo(() => {\n    const base = baseCurrencyDefault\n      ? baseCurrencyDefault === currency0\n        ? currency0\n        : baseCurrencyDefault === currency1\n          ? currency1\n          : currency0\n      : currency0;\n\n    if (manuallyInverted) {\n      if (base === currency0) return currency1;\n      return currency0;\n    }\n\n    return base;\n  }, [baseCurrencyDefault, currency1, currency0, manuallyInverted]);\n\n  const sorted = baseCurrency === currency0;\n  const quoteCurrency = sorted ? currency1 : currency0;\n\n  const ticksAtLimit = useTicksAtLimitInvert({\n    position,\n    inverted: manuallyInverted,\n  });\n\n  const { price, priceLower, priceUpper } = useMemo(() => {\n    const price = sorted ? position.pool.priceOf(position.pool.token0) : position.pool.priceOf(position.pool.token1);\n\n    const priceLower = sorted ? position.token0PriceLower : position.token0PriceUpper.invert();\n    const priceUpper = sorted ? position.token0PriceUpper : position.token0PriceLower.invert();\n\n    return {\n      price,\n      priceLower,\n      priceUpper,\n    };\n  }, [sorted, position]);\n\n  const onConvertClick = () => {\n    setManuallyInverted(!manuallyInverted);\n  };\n\n  return (\n    <SwapModal open={open} onClose={onCancel} title=\"Add Liquidity\">\n      <>\n        <Grid container flexDirection=\"column\" spacing={3}>\n          <Grid item container>\n            <Typography>\n              <Trans>Deposited Amount</Trans>\n            </Typography>\n            <Grid item xs container flexDirection=\"column\" justifyContent=\"flex-end\">\n              <Typography color=\"textPrimary\" align=\"right\">\n                {`${position.amount0.toSignificant(6, { groupSeparator: \",\" })} ${currency0.symbol}`}\n              </Typography>\n              <Typography\n                color=\"textPrimary\"\n                align=\"right\"\n                sx={{\n                  marginTop: \"8px\",\n                }}\n              >\n                {`${position.amount1.toSignificant(6, { groupSeparator: \",\" })} ${currency1.symbol}`}\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid item container>\n            <Typography>\n              <Trans>Current Price</Trans>\n            </Typography>\n            <Grid item xs container justifyContent=\"flex-end\">\n              <Typography color=\"textPrimary\" align=\"right\">\n                {`${price.toSignificant(5, { groupSeparator: \",\" })} ${quoteCurrency.symbol} per ${baseCurrency.symbol\n                  }`}\n              </Typography>\n              <SyncAltIcon sx={{ fontSize: \"1rem\", marginLeft: \"6px\", cursor: \"pointer\" }} onClick={onConvertClick} />\n            </Grid>\n          </Grid>\n          <Grid item container>\n            <Typography>\n              <Trans>Price Range</Trans>\n            </Typography>\n            <Grid item xs container justifyContent=\"flex-end\">\n              <Typography color=\"textPrimary\" align=\"right\">\n                {`${formatTickPrice(priceLower, ticksAtLimit, Bound.LOWER)}`} -{\" \"}\n                {`${formatTickPrice(priceUpper, ticksAtLimit, Bound.UPPER)}`}{\" \"}\n                {`${quoteCurrency?.symbol} per ${baseCurrency?.symbol}`}\n              </Typography>\n              <SyncAltIcon sx={{ fontSize: \"1rem\", marginLeft: \"6px\", cursor: \"pointer\" }} onClick={onConvertClick} />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Button variant=\"contained\" size=\"large\" fullWidth sx={{ marginTop: \"40px\" }} onClick={onConfirm}>\n          <Trans>Add</Trans>\n        </Button>\n      </>\n    </SwapModal>\n  );\n}\n","import { useMemo } from \"react\";\nimport { Position } from \"@w2e/swap-sdk\";\nimport { Bound } from \"constants/swap\";\nimport useIsTickAtLimit from \"hooks/swap/useIsTickAtLimit\";\n\nexport function useTicksAtLimitInvert({ position, inverted }: { position: Position; inverted?: boolean }) {\n  const { tickLower, tickUpper } = position || {};\n\n  const feeAmount = position?.pool.fee;\n\n  const _tickAtLimit = useIsTickAtLimit(feeAmount, tickLower, tickUpper);\n\n  const tickAtLimit = useMemo(() => {\n    if (!inverted) return _tickAtLimit;\n\n    return {\n      [Bound.LOWER]: _tickAtLimit[Bound.UPPER] ? true : undefined,\n      [Bound.UPPER]: _tickAtLimit[Bound.LOWER] ? true : undefined,\n    };\n  }, [_tickAtLimit, inverted]);\n\n  return tickAtLimit;\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');","import React, { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Grid, Typography } from \"@mui/material\";\nimport { ArrowBack as ArrowBackIcon } from \"@mui/icons-material\";\n// import SwapSettingIcon from \"components/swap/SettingIcon\";\n\nexport interface HeaderTabProps {\n  showArrow?: boolean;\n  showUserSetting?: boolean;\n  title: React.ReactChild;\n  slippageType?: string;\n  onBack?: () => void;\n}\n\nexport default function SwapHeader({ showArrow = false, title, onBack }: HeaderTabProps) {\n  const history = useHistory();\n\n  const handleBack = useCallback(() => {\n    if (onBack) {\n      onBack();\n    } else {\n      history.goBack();\n    }\n  }, [history, onBack]);\n\n  return (\n    <Grid container>\n      <Grid item xs={2} container justifyContent=\"flex-start\">\n        {showArrow && <ArrowBackIcon sx={{ cursor: \"pointer\" }} onClick={handleBack} />}\n      </Grid>\n      <Grid item xs container justifyContent=\"center\">\n        <Typography color=\"textPrimary\" variant=\"h3\">\n          {title}\n        </Typography>\n      </Grid>\n      <Grid\n        item\n        xs={2}\n        container\n        justifyContent=\"flex-start\"\n        sx={{\n          position: \"relative\",\n        }}\n      >\n        {/* {showUserSetting && <SwapSettingIcon type={slippageType} />} */}\n      </Grid>\n    </Grid>\n  );\n}\n","import { useState, useMemo } from \"react\";\nimport { Typography, Grid, Box } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { formatTickPrice } from \"utils/swap/formatTickPrice\";\nimport useIsTickAtLimit from \"hooks/swap/useIsTickAtLimit\";\nimport { Bound } from \"constants/swap\";\nimport { Position, getPriceOrderingFromPositionForUI, useInverter } from \"@w2e/swap-sdk\";\nimport { SyncAlt as SyncAltIcon } from \"@mui/icons-material\";\nimport { Trans } from \"@lingui/macro\";\nimport { Theme, createTheme } from \"@mui/material/styles\";\nimport { TokenImage } from \"components/Image/Token\";\nimport PositionRangeState from \"./PositionRangeState\";\n\nexport const customizeTheme = createTheme({\n  breakpoints: {\n    values: {\n      sm: 680,\n    },\n  },\n});\n\nconst useStyle = makeStyles((theme: Theme) => ({\n  NFTBox: {\n    marginRight: \"12px\",\n    borderRadius: \"12px\",\n    background: theme.palette.background.level2,\n    width: \"300px\",\n    height: \"332px\",\n\n    [customizeTheme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      height: \"332px\",\n      marginBottom: \"20px\",\n      marginRight: \"0px\",\n    },\n  },\n  NFTWrapper: {\n    width: \"300px\",\n    height: \"300px\",\n    position: \"relative\",\n  },\n  currentPrice: {\n    height: \"52px\",\n    borderRadius: \"12px\",\n    border: `1px solid ${theme.palette.background.level3}`,\n    background: theme.palette.background.level2,\n    padding: \"0 20px\",\n  },\n  rangeBox: {\n    height: \"112px\",\n    borderRadius: \"12px\",\n    border: `1px solid ${theme.palette.background.level3}`,\n    background: theme.palette.background.level2,\n  },\n}));\n\nexport interface LiquidityInfoProps {\n  position: Position | undefined;\n  positionId: string | number | bigint | undefined;\n  version?: \"v2\" | \"v3\";\n}\n\nfunction hasLiquidity(position: Position | undefined) {\n  return position?.liquidity?.toString() !== \"0\";\n}\n\nexport default function LiquidityInfo({ position }: LiquidityInfoProps) {\n  const classes = useStyle();\n\n  const { pool, tickLower, tickUpper } = position || {};\n  const { token0, token1, fee: feeAmount } = pool || {};\n\n  const pricesFromPosition = getPriceOrderingFromPositionForUI(position);\n  const [manuallyInverted, setManuallyInverted] = useState(false);\n\n  const { priceLower, priceUpper, base } = useInverter({\n    priceLower: pricesFromPosition.priceLower,\n    priceUpper: pricesFromPosition.priceUpper,\n    quote: pricesFromPosition.quote,\n    base: pricesFromPosition.base,\n    invert: manuallyInverted,\n  });\n\n  const inverted = token1 ? base?.equals(token1) : undefined;\n\n  const currencyQuote = inverted ? token0 : token1;\n  const currencyBase = inverted ? token1 : token0;\n\n  const _tickAtLimit = useIsTickAtLimit(feeAmount, tickLower, tickUpper);\n\n  const tickAtLimit = useMemo(() => {\n    if (!inverted) return _tickAtLimit;\n\n    return {\n      [Bound.LOWER]: _tickAtLimit[Bound.UPPER] ? true : undefined,\n      [Bound.UPPER]: _tickAtLimit[Bound.LOWER] ? true : undefined,\n    };\n  }, [_tickAtLimit, inverted]);\n\n  const pairName = useMemo(() => {\n    return !!currencyQuote && !!currencyBase ? `${currencyQuote?.symbol} per ${currencyBase?.symbol}` : \"--\";\n  }, [currencyQuote, currencyBase]);\n\n  const outOfRange =\n    pool && (tickUpper || tickUpper === 0) && (tickLower || tickLower === 0)\n      ? pool.tickCurrent < tickLower || pool.tickCurrent >= tickUpper\n      : false;\n\n  const closed = !hasLiquidity(position);\n\n  return (\n    <Grid container flexDirection=\"column\">\n      <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n        <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n          <TokenImage logo={token0?.logo} tokenId={token0?.address} />\n          <Box sx={{ width: \"32px\", height: \"32px\", position: \"relative\", left: \"-10px\" }}>\n            <TokenImage logo={token1?.logo} tokenId={token1?.address} />\n          </Box>\n\n          <Typography\n            sx={{\n              fontSize: \"28px\",\n              color: \"#fff\",\n              fontWeight: 500,\n              \"@media(max-width: 640px)\": {\n                fontSize: \"18px\",\n              },\n            }}\n          >\n            {token0?.symbol}\n          </Typography>\n          <Typography\n            sx={{\n              fontSize: \"24px\",\n              color: \"#fff\",\n              fontWeight: 500,\n              margin: \"0 10px\",\n              \"@media(max-width: 640px)\": {\n                fontSize: \"16px\",\n              },\n            }}\n          >\n            /\n          </Typography>\n          <Typography\n            sx={{\n              fontSize: \"28px\",\n              color: \"#fff\",\n              fontWeight: 500,\n              \"@media(max-width: 640px)\": {\n                fontSize: \"18px\",\n              },\n            }}\n          >\n            {token1?.symbol}\n          </Typography>\n        </Box>\n\n        <PositionRangeState outOfRange={outOfRange} closed={closed} />\n      </Grid>\n\n      <Grid item xs sx={{ margin: \"24px 0 0 0\" }}>\n        <Grid container alignItems=\"center\" className={classes.currentPrice}>\n          <Typography color=\"text.primary\">\n            <Trans>Current Price</Trans>\n          </Typography>\n          <Grid item xs>\n            <Grid container alignItems=\"center\" justifyContent=\"flex-end\">\n              <Typography\n                fontWeight=\"500\"\n                color=\"text.primary\"\n                sx={{ maxWidth: \"190px\", whiteSpace: \"nowrap\", textOverflow: \"ellipsis\", overflow: \"hidden\" }}\n              >\n                {!!token1 && !!token0\n                  ? inverted\n                    ? pool?.priceOf(token1)\n                      ? `${pool?.priceOf(token1).toSignificant(6)}`\n                      : \"--\"\n                    : pool?.priceOf(token0)\n                      ? `${pool?.priceOf(token0).toSignificant(6)}`\n                      : \"--\"\n                  : \"--\"}\n              </Typography>\n              <SyncAltIcon\n                sx={{ fontSize: \"1rem\", marginLeft: \"6px\", cursor: \"pointer\" }}\n                onClick={() => setManuallyInverted(!manuallyInverted)}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Box mt=\"20px\">\n          <Grid container alignItems=\"center\">\n            <Grid item xs>\n              <Typography color=\"text.primary\" fontWeight=\"700\">\n                Price Range\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <Box sx={{ display: \"flex\", gap: \"0 24px\" }}>\n            <Grid container justifyContent=\"center\" alignItems=\"center\" mt=\"10px\" className={classes.rangeBox}>\n              <Box>\n                <Grid container justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\n                  <Typography fontSize=\"12px\" fontWeight=\"500\">\n                    Min Price\n                  </Typography>\n                  <Typography fontSize=\"20px\" fontWeight=\"700\" color=\"text.primary\" sx={{ margin: \"6px 0\" }}>\n                    {formatTickPrice(priceLower, tickAtLimit, Bound.LOWER)}\n                  </Typography>\n                  <Typography fontSize=\"12px\" fontWeight=\"500\">\n                    {pairName}\n                  </Typography>\n                </Grid>\n              </Box>\n            </Grid>\n\n            <Grid container justifyContent=\"center\" alignItems=\"center\" mt=\"8px\" className={classes.rangeBox}>\n              <Box>\n                <Grid container justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\n                  <Typography fontSize=\"12px\" fontWeight=\"500\">\n                    Max Price\n                  </Typography>\n                  <Typography fontSize=\"20px\" fontWeight=\"700\" color=\"text.primary\" sx={{ margin: \"6px 0\" }}>\n                    {formatTickPrice(priceUpper, tickAtLimit, Bound.UPPER)}\n                  </Typography>\n                  <Typography fontSize=\"12px\" fontWeight=\"500\">\n                    {pairName}\n                  </Typography>\n                </Grid>\n              </Box>\n            </Grid>\n          </Box>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n","import { Box, Typography, SvgIcon } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Trans } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\n\nconst useStyle = makeStyles((theme: Theme) => {\n  return {\n    wrapper: {\n      display: \"flex\",\n      alignItems: \"center\",\n      height: \"24px\",\n      padding: \"0 9px\",\n      borderRadius: \"8px\",\n\n      \"& .MuiTypography-root\": {\n        fontSize: \"12px\",\n        fontWeight: 500,\n      },\n\n      \"&.inRange\": {\n        background: theme.colors.darkPrimary400,\n      },\n\n      \"&.closed\": {\n        background: theme.colors.darkPrimary400,\n      },\n\n      \"&.outOfRange\": {\n        background: \"#FFC107\",\n        \"& .MuiTypography-root\": {\n          color: theme.colors.darkLevel1,\n          marginLeft: \"3px\",\n        },\n      },\n    },\n  };\n});\n\nfunction Marker(props: any) {\n  return (\n    <SvgIcon width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" {...props}>\n      <path\n        d=\"M5.5 3.5H6.5V4.5H5.5V3.5ZM5.5 5.5H6.5V8.5H5.5V5.5ZM6 1C3.24 1 1 3.24 1 6C1 8.76 3.24 11 6 11C8.76 11 11 8.76 11 6C11 3.24 8.76 1 6 1ZM6 10C3.795 10 2 8.205 2 6C2 3.795 3.795 2 6 2C8.205 2 10 3.795 10 6C10 8.205 8.205 10 6 10Z\"\n        fill={props.color ? props.color : \"#111936\"}\n      />\n    </SvgIcon>\n  );\n}\n\nfunction Closed() {\n  const classes = useStyle();\n\n  return (\n    <Box component=\"span\" className={`${classes.wrapper} closed`}>\n      <Marker fontSize=\"12px\" color=\"#fff\" />\n\n      <Typography color=\"#ffffff\" sx={{ marginLeft: \"3px\" }}>\n        <Trans>Closed</Trans>\n      </Typography>\n    </Box>\n  );\n}\n\nfunction OutOfRange() {\n  const classes = useStyle();\n\n  return (\n    <Box className={`${classes.wrapper} outOfRange`}>\n      <Marker fontSize=\"12px\" />\n\n      <Typography>\n        <Trans>Out of range</Trans>\n      </Typography>\n    </Box>\n  );\n}\n\nfunction InRange() {\n  const classes = useStyle();\n\n  return (\n    <Box className={`${classes.wrapper} inRange`}>\n      <Box\n        component=\"span\"\n        sx={{ background: \"#54C081\", width: \"8px\", height: \"8px\", borderRadius: \"50%\", marginRight: \"8px\" }}\n      />\n      <Typography color=\"#ffffff\">\n        <Trans>In range</Trans>\n      </Typography>\n    </Box>\n  );\n}\n\nexport interface PositionRangeStateProps {\n  outOfRange?: boolean | undefined;\n  closed?: boolean | undefined;\n}\n\nexport default function PositionRangeState({ outOfRange, closed }: PositionRangeStateProps) {\n  return closed ? <Closed /> : outOfRange ? <OutOfRange /> : <InRange />;\n}\n","import { SvgIcon } from \"@mui/material\";\n\nexport default (props: any) => {\n  return (\n    <SvgIcon viewBox=\"0 0 18 20\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M14.5227 5.39601V6.92935C16.2451 7.46696 17.5 9.02614 17.5 10.8884V15.8253C17.5 18.1308 15.5886 20 13.2322 20H4.7688C2.41136 20 0.5 18.1308 0.5 15.8253V10.8884C0.5 9.02614 1.75595 7.46696 3.47729 6.92935V5.39601C3.48745 2.41479 5.95667 0 8.98476 0C12.0535 0 14.5227 2.41479 14.5227 5.39601ZM9.00508 1.73904C11.0678 1.73904 12.7445 3.37871 12.7445 5.39601V6.7137H5.25553V5.37613C5.26569 3.36878 6.94232 1.73904 9.00508 1.73904ZM9.88912 14.4549C9.88912 14.9419 9.49283 15.3294 8.99492 15.3294C8.50717 15.3294 8.11088 14.9419 8.11088 14.4549V12.2488C8.11088 11.7718 8.50717 11.3843 8.99492 11.3843C9.49283 11.3843 9.88912 11.7718 9.88912 12.2488V14.4549Z\"\n        fill=\"#111936\"\n      />\n    </SvgIcon>\n  );\n};\n","import { Box, Grid, Typography, Chip } from \"@mui/material\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport { CurrencyAmount, Token } from \"@w2e/swap-sdk\";\nimport LockIcon from \"assets/images/swap/Lock\";\nimport { NumberTextField, TokenImage } from \"components/index\";\nimport { SAFE_DECIMALS_LENGTH, MAX_SWAP_INPUT_LENGTH } from \"constants/index\";\nimport { formatCurrencyAmount } from \"utils/swap/formatCurrencyAmount\";\nimport { isDarkTheme } from \"utils\";\nimport { Trans } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\n\nconst useStyle = makeStyles((theme: Theme) => {\n  return {\n    box: {\n      position: \"relative\",\n      borderRadius: `${theme.radius}px`,\n      backgroundColor: theme.palette.background.level3,\n      border: theme.palette.border.gray200,\n    },\n    input: {\n      \"& input\": {\n        textAlign: \"right\",\n        fontSize: \"20px\",\n        fontWeight: 700,\n        // color: theme.textPrimary,\n        [theme.breakpoints.down(\"sm\")]: {\n          fontSize: \"16px\",\n        },\n      },\n      \"& input::placeholder\": {\n        fontSize: \"20px\",\n        fontWeight: 700,\n        [theme.breakpoints.down(\"sm\")]: {\n          fontSize: \"16px\",\n        },\n      },\n    },\n    chip: {\n      padding: \"0 10px\",\n      height: \"44px\",\n      backgroundColor: isDarkTheme(theme) ? theme.palette.background.level2 : theme.colors.lightGray200,\n      borderRadius: `${theme.radius}px`,\n      \"& .MuiChip-label\": {\n        paddingLeft: \"18px\",\n      },\n    },\n    maxButton: {\n      padding: \"1px 3px\",\n      cursor: \"pointer\",\n      borderRadius: \"2px\",\n      backgroundColor: theme.colors.secondaryMain,\n      color: \"#ffffff\",\n    },\n  };\n});\n\nconst LockMask = ({ type }: { type: string | undefined }) => {\n  const theme = useTheme() as Theme;\n\n  return (\n    <Box\n      sx={{\n        position: \"absolute\",\n        width: \"100%\",\n        height: \"100%\",\n        top: 0,\n        left: 0,\n      }}\n    >\n      <Box\n        sx={{\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\",\n          top: 0,\n          left: 0,\n          background: type === \"addLiquidity\" ? theme.palette.background.level2 : theme.palette.background.level1,\n          opacity: 0.9,\n          borderRadius: \"12px\",\n        }}\n      />\n      <Grid\n        container\n        sx={{\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\",\n          top: 0,\n          left: 0,\n          zIndex: 1,\n        }}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <LockIcon />\n        <Typography align=\"center\" color=\"textPrimary\">\n          <Trans>The market price is outside your specified price range. Single-asset deposit only.</Trans>\n        </Typography>\n      </Grid>\n    </Box>\n  );\n};\n\nexport interface SwapDepositAmountProps {\n  currency: Token | undefined;\n  type?: string;\n  value: string | number;\n  locked?: boolean;\n  onUserInput: (value: string) => void;\n  showMaxButton?: boolean;\n  onMax?: () => void;\n  currencyBalance: CurrencyAmount<Token> | undefined;\n}\n\nexport default function SwapDepositAmount({\n  currency,\n  value,\n  locked = false,\n  onUserInput,\n  type,\n  currencyBalance,\n  showMaxButton,\n  onMax,\n}: SwapDepositAmountProps) {\n  const classes = useStyle();\n\n  const decimals = currency?.decimals ?? SAFE_DECIMALS_LENGTH;\n\n  return (\n    <Box sx={{ p: 2 }} className={classes.box}>\n      <Grid container alignItems=\"center\">\n        <Chip\n          className={classes.chip}\n          label={currency?.symbol}\n          avatar={<TokenImage logo={currency?.logo} tokenId={currency?.wrapped.address} />}\n        />\n        <Grid item xs>\n          <NumberTextField\n            value={value}\n            fullWidth\n            className={classes.input}\n            placeholder=\"0.0\"\n            variant=\"standard\"\n            numericProps={{\n              thousandSeparator: true,\n              decimalScale: decimals > SAFE_DECIMALS_LENGTH ? SAFE_DECIMALS_LENGTH : decimals,\n              allowNegative: false,\n              maxLength: MAX_SWAP_INPUT_LENGTH,\n            }}\n            onChange={(e) => {\n              onUserInput(e.target.value);\n            }}\n          />\n        </Grid>\n      </Grid>\n      <Grid container mt={1}>\n        <Grid item mr={1}>\n          <Typography>\n            <Trans>Balance:</Trans> {currency ? formatCurrencyAmount(currencyBalance, currency.decimals) : \"--\"}\n          </Typography>\n        </Grid>\n        {showMaxButton && (\n          <Grid>\n            <Typography fontSize={12} className={classes.maxButton} onClick={onMax}>\n              <Trans>Max</Trans>\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n      {locked && <LockMask type={type} />}\n    </Box>\n  );\n}\n","import { useMemo } from \"react\";\nimport { Position, Pool } from \"@w2e/swap-sdk\";\nimport { useSwapPoolMetadata } from \"@w2e/hooks\";\nimport { usePool, PoolState } from \"hooks/swap/usePools\";\nimport { useToken } from \"hooks/useCurrency\";\n\nexport interface usePositionProps {\n  poolId: string | undefined;\n  tickLower: bigint | undefined;\n  tickUpper: bigint | undefined;\n  liquidity: bigint | undefined;\n}\n\nexport function usePosition(userPosition: usePositionProps | undefined) {\n  const { result: poolMetadata } = useSwapPoolMetadata(userPosition?.poolId);\n\n  const [, currency0] = useToken(poolMetadata?.token0.address);\n  const [, currency1] = useToken(poolMetadata?.token1.address);\n\n  const [poolState, pool] = usePool(\n    currency0 ?? undefined,\n    currency1 ?? undefined,\n    poolMetadata?.fee ? Number(poolMetadata.fee) : undefined,\n  );\n\n  let position: Position | undefined;\n\n  if (\n    pool &&\n    poolMetadata &&\n    userPosition &&\n    userPosition.tickLower !== undefined &&\n    userPosition.tickUpper !== undefined &&\n    userPosition.liquidity !== undefined\n  ) {\n    position = new Position({\n      pool,\n      liquidity: userPosition.liquidity.toString(),\n      tickLower: Number(userPosition.tickLower),\n      tickUpper: Number(userPosition.tickUpper),\n    });\n  }\n\n  return {\n    loading: poolState === PoolState.LOADING,\n    checking: poolState === PoolState.NOT_CHECK,\n    position,\n    pool: pool ?? undefined,\n  };\n}\n\nexport interface usePositionWithPoolProps {\n  pool: Pool | null | undefined;\n  liquidity: number | string | undefined;\n  tickLower: number | string | undefined;\n  tickUpper: number | string | undefined;\n}\n\nexport function usePositionWithPool({ tickLower, tickUpper, liquidity, pool }: usePositionWithPoolProps) {\n  let position: Position | undefined;\n\n  if (pool && liquidity && (tickLower || tickLower === 0) && (tickUpper || tickUpper === 0)) {\n    position = new Position({\n      pool,\n      liquidity,\n      tickLower: Number(tickLower),\n      tickUpper: Number(tickUpper),\n    });\n  }\n\n  return useMemo(() => position, [position]);\n}\n","import { useCallback } from \"react\";\nimport { Position } from \"@w2e/swap-sdk\";\nimport { t } from \"@lingui/macro\";\nimport { getActorIdentity } from \"components/Identity\";\nimport { useAccountPrincipal } from \"store/auth/hooks\";\nimport { getLocaleMessage } from \"locales/services\";\nimport { useStepCalls, newStepKey } from \"hooks/useStepCall\";\nimport { getIncreaseLiquiditySteps } from \"components/swap/IncreaseLiquiditySteps\";\nimport { useStepContentManager } from \"store/steps/hooks\";\nimport { useSwapApprove, useSwapDeposit, useSwapTransfer } from \"hooks/swap/index\";\nimport { isUseTransfer, actualAmountToPool } from \"utils/token/index\";\nimport { useSuccessTip } from \"hooks/useTips\";\nimport { increaseLiquidity } from \"hooks/swap/v3Calls\";\nimport { ExternalTipArgs, OpenExternalTip } from \"types/index\";\nimport { useReclaimCallback } from \"hooks/swap\";\n\nexport interface IncreaseLiquidityArgs {\n  positionId: bigint;\n  position: Position;\n  poolId: string;\n  openExternalTip: OpenExternalTip;\n  stepKey: string;\n}\n\nexport function useIncreaseLiquidityCalls() {\n  const principal = useAccountPrincipal();\n\n  const [openSuccessTip] = useSuccessTip();\n\n  const approve = useSwapApprove();\n  const deposit = useSwapDeposit();\n  const transfer = useSwapTransfer();\n\n  return useCallback(\n    ({ position, poolId, positionId, openExternalTip, stepKey }: IncreaseLiquidityArgs) => {\n      const approveToken0 = async () => {\n        if (!position) return false;\n        const amount0Desired = position.mintAmounts.amount0.toString();\n        if (amount0Desired !== \"0\") return await approve(position.pool.token0, amount0Desired, poolId);\n        return true;\n      };\n\n      const approveToken1 = async () => {\n        if (!position) return false;\n        const amount1Desired = position.mintAmounts.amount1.toString();\n        if (amount1Desired !== \"0\") return await approve(position.pool.token1, amount1Desired, poolId);\n        return true;\n      };\n\n      const transferToken0 = async () => {\n        if (!position) return false;\n        const amount0Desired = position.mintAmounts.amount0.toString();\n        if (amount0Desired !== \"0\") return await transfer(position.pool.token0, amount0Desired, poolId);\n        return true;\n      };\n\n      const transferToken1 = async () => {\n        if (!position) return false;\n        const amount1Desired = position.mintAmounts.amount1.toString();\n        if (amount1Desired !== \"0\") return await transfer(position.pool.token1, amount1Desired, poolId);\n        return true;\n      };\n\n      const depositToken0 = async () => {\n        if (!position) return false;\n        const amount0Desired = position.mintAmounts.amount0.toString();\n        if (amount0Desired !== \"0\") {\n          return await deposit(position.pool.token0, amount0Desired, poolId, ({ message }: ExternalTipArgs) => {\n            openExternalTip({ message, tipKey: stepKey });\n          });\n        }\n        return true;\n      };\n\n      const depositToken1 = async () => {\n        if (!position) return false;\n        const amount1Desired = position.mintAmounts.amount1.toString();\n        if (amount1Desired !== \"0\") {\n          return await deposit(position.pool.token1, amount1Desired, poolId, ({ message }: ExternalTipArgs) => {\n            openExternalTip({ message, tipKey: stepKey });\n          });\n        }\n        return true;\n      };\n\n      const _increaseLiquidity = async () => {\n        if (!position || !principal) return false;\n\n        const identity = await getActorIdentity();\n\n        const { token0 } = position.pool;\n        const { token1 } = position.pool;\n\n        const amount0Desired = actualAmountToPool(token0, position.mintAmounts.amount0.toString());\n        const amount1Desired = actualAmountToPool(token1, position.mintAmounts.amount1.toString());\n\n        const { status, message } = await increaseLiquidity(identity, poolId, {\n          positionId,\n          amount0Desired,\n          amount1Desired,\n        });\n\n        if (status === \"ok\") {\n          openSuccessTip(t`Add Liquidity Successfully`);\n        } else {\n          openExternalTip({ message: getLocaleMessage(message), tipKey: stepKey });\n          return false;\n        }\n\n        return true;\n      };\n\n      return [\n        isUseTransfer(position?.pool.token0) ? transferToken0 : approveToken0,\n        depositToken0,\n        isUseTransfer(position?.pool.token1) ? transferToken1 : approveToken1,\n        depositToken1,\n        _increaseLiquidity,\n      ];\n    },\n    [principal],\n  );\n}\n\nexport interface InitialAddLiquidityStepsArgs {\n  position: Position;\n}\n\nfunction useInitialAddLiquiditySteps() {\n  const stepContentManage = useStepContentManager();\n\n  const handleReclaim = useReclaimCallback();\n\n  return useCallback((key: string, { position }: InitialAddLiquidityStepsArgs) => {\n    const content = getIncreaseLiquiditySteps({\n      position,\n      handleReclaim,\n    });\n\n    stepContentManage(String(key), {\n      content,\n      title: t`Add Liquidity Details`,\n    });\n  }, []);\n}\n\nexport interface IncreaseLiquidityCallProps {\n  position: Position;\n  positionId: bigint;\n  poolId: string;\n  openExternalTip: OpenExternalTip;\n}\n\nexport function useIncreaseLiquidityCall() {\n  const getCalls = useIncreaseLiquidityCalls();\n  const formatCall = useStepCalls();\n  const initialSteps = useInitialAddLiquiditySteps();\n\n  return useCallback(\n    ({ position, positionId, poolId, openExternalTip }: IncreaseLiquidityCallProps) => {\n      const key = newStepKey();\n      const calls = getCalls({ position, positionId, poolId, stepKey: key, openExternalTip });\n      const { call, reset, retry } = formatCall(calls, key);\n\n      initialSteps(key, { position });\n\n      return { call, reset, retry, key };\n    },\n    [getCalls, formatCall, initialSteps],\n  );\n}\n","import { Box, Avatar } from \"@mui/material\";\nimport { Position } from \"@w2e/swap-sdk\";\nimport { parseTokenAmount, toSignificant } from \"@w2e/utils\";\nimport { t, Trans } from \"@lingui/macro\";\nimport { isUseTransfer, actualAmountToPool } from \"utils/token/index\";\nimport { StepDetails } from \"components/Steps/types\";\nimport { TextButton } from \"components/index\";\n\nexport interface IncreaseLiquidityStepsProps {\n  position: Position;\n  handleReclaim: () => void;\n  retry?: () => Promise<boolean>;\n}\n\nexport function getIncreaseLiquiditySteps({ position, handleReclaim }: IncreaseLiquidityStepsProps) {\n  const { token0 } = position.pool;\n  const { token1 } = position.pool;\n\n  const amount0 = toSignificant(\n    parseTokenAmount(\n      actualAmountToPool(token0, position.mintAmounts.amount0.toString()),\n      position.pool.token0.decimals,\n    ).toString(),\n    8,\n    { groupSeparator: \",\" },\n  );\n\n  const amount1 = toSignificant(\n    parseTokenAmount(\n      actualAmountToPool(token1, position.mintAmounts.amount1.toString()),\n      position.pool.token1.decimals,\n    ).toString(),\n    8,\n    { groupSeparator: \",\" },\n  );\n\n  const symbol0 = token0.symbol;\n  const symbol1 = token1.symbol;\n\n  const isToken0UseTransfer = isUseTransfer(token0);\n  const isToken1UseTransfer = isUseTransfer(token1);\n\n  const amount0Value = (\n    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n      <Avatar sx={{ width: \"16px\", height: \"16px\", margin: \"0 4px 0 0\" }} src={position.pool.token0.logo}>\n        &nbsp;\n      </Avatar>\n      {amount0}\n    </Box>\n  );\n\n  const amount1Value = (\n    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n      <Avatar sx={{ width: \"16px\", height: \"16px\", margin: \"0 4px 0 0\" }} src={position.pool.token1.logo}>\n        &nbsp;\n      </Avatar>\n      {amount1}\n    </Box>\n  );\n\n  return [\n    {\n      title: isToken0UseTransfer ? `Transfer ${symbol0}` : `Approve ${symbol0}`,\n      step: 0,\n      children: [\n        { label: t`Amount`, value: amount0Value },\n        { label: t`Canister Id`, value: position.pool.token0.address },\n      ],\n    },\n    {\n      title: t`Deposit ${symbol0}`,\n      step: 1,\n      children: [\n        {\n          label: t`Amount`,\n          value: amount0Value,\n        },\n        { label: t`Canister Id`, value: position.pool.token0.address },\n      ],\n      errorActions: [\n        <>\n          <TextButton onClick={handleReclaim}>\n            <Trans>Reclaim</Trans>\n          </TextButton>\n        </>,\n      ],\n      errorMessage: t`Please click Reclaim your tokens if they've transferred to the swap pool.`,\n    },\n    {\n      title: isToken1UseTransfer ? t`Transfer ${symbol1}` : t`Approve ${symbol1}`,\n      step: 2,\n      children: [\n        { label: t`Amount`, value: amount1Value },\n        { label: t`Canister Id`, value: position.pool.token1.address },\n      ],\n    },\n    {\n      title: t`Deposit ${symbol1}`,\n      step: 3,\n      children: [\n        {\n          label: t`Amount`,\n          value: amount1Value,\n        },\n        { label: t`Canister Id`, value: position.pool.token1.address },\n      ],\n      errorActions: [\n        <>\n          <TextButton onClick={handleReclaim}>\n            <Trans>Reclaim</Trans>\n          </TextButton>\n        </>,\n      ],\n      errorMessage: t`Please click Reclaim your tokens if they've transferred to the swap pool.`,\n    },\n    {\n      title: t`Increase liquidity ${position.pool.token0.symbol} and ${position.pool.token1.symbol}`,\n      step: 4,\n      children: [\n        { label: symbol0, value: amount0Value },\n        { label: symbol1, value: amount1Value },\n      ],\n      errorActions: [\n        <>\n          <TextButton onClick={handleReclaim}>\n            <Trans>Reclaim</Trans>\n          </TextButton>\n        </>,\n      ],\n      errorMessage: t`Please click Reclaim your tokens if they've transferred to the swap pool.`,\n    },\n  ] as StepDetails[];\n}\n","import { ReactChild, useMemo, useCallback, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Grid, Typography, Box } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { MainCard } from \"components/index\";\nimport HeaderTab from \"components/swap/Header\";\nimport DepositAmount from \"components/swap/SwapDepositAmount\";\nimport { FIELD } from \"constants/swap\";\nimport { useMintState, useMintHandlers, useMintInfo, useResetMintState } from \"store/swap/liquidity/hooks\";\nimport { usePosition } from \"hooks/swap/usePosition\";\nimport ConfirmAddLiquidity from \"components/swap/AddLiquidityConfirmModal\";\nimport { useLoadingTip, useErrorTip } from \"hooks/useTips\";\nimport { NONE_TOKEN_SYMBOL } from \"constants/index\";\nimport Loading from \"components/Loading/Static\";\nimport { parseTokenAmount } from \"@w2e/utils\";\nimport BigNumber from \"bignumber.js\";\nimport { Token } from \"@w2e/swap-sdk\";\nimport { isDarkTheme, toSignificantFormatted } from \"utils/index\";\nimport { Trans, t } from \"@lingui/macro\";\nimport Identity, { CallbackProps } from \"components/Identity\";\nimport { useAccountPrincipal } from \"store/auth/hooks\";\nimport { Theme } from \"@mui/material/styles\";\nimport LiquidityInfo from \"components/swap/LiquidityInfo\";\nimport Button from \"components/authentication/ButtonConnector\";\nimport { usePositionDetailsFromId } from \"hooks/swap/v3Calls\";\nimport { actualAmountToPool } from \"utils/token/index\";\nimport { useIncreaseLiquidityCall } from \"hooks/swap/useIncreaseLiquidity\";\nimport StepViewButton from \"components/Steps/View\";\nimport { ExternalTipArgs } from \"types/index\";\nimport { ReclaimTips } from \"components/ReclaimTips\";\nimport { maxAmountFormat } from \"utils/swap\";\n\nconst useStyle = makeStyles((theme: Theme) => {\n  return {\n    container: {\n      width: \"100%\",\n      maxWidth: \"720px\",\n    },\n    currentPrice: {\n      padding: \"16px 20px\",\n      border: theme.palette.border.gray200,\n      backgroundColor: isDarkTheme(theme) ? theme.palette.background.level1 : \"#fff\",\n      borderRadius: \"12px\",\n      marginTop: \"20px\",\n    },\n    range: {\n      width: \"48%\",\n      padding: \"16px 0\",\n      borderRadius: \"12px\",\n      backgroundColor: isDarkTheme(theme) ? theme.palette.background.level2 : \"#fff\",\n    },\n    inputBox: {\n      backgroundColor: theme.palette.background.level3,\n      borderRadius: \"12px\",\n      padding: \"16px 24px 16px 12px\",\n    },\n    input: {\n      \"& input\": {\n        fontSize: \"20px\",\n        fontWeight: 700,\n        textAlign: \"right\",\n        height: \"28px\",\n        padding: \"0 0\",\n      },\n      \"& input::placeholder\": {\n        fontSize: \"20px\",\n        fontWeight: 700,\n      },\n    },\n  };\n});\n\nexport function PriceRange({\n  label,\n  value,\n  currencyA,\n  currencyB,\n}: {\n  label: ReactChild;\n  value: ReactChild;\n  currencyA: Token | undefined;\n  currencyB: Token | undefined;\n}) {\n  const classes = useStyle();\n\n  return (\n    <Grid item container className={classes.range} alignItems=\"center\" flexDirection=\"column\">\n      <Typography fontSize=\"12px\">{label}</Typography>\n      <Box mt=\"12px\">\n        <Typography variant=\"h3\" color=\"textPrimary\">\n          {value}\n        </Typography>\n      </Box>\n      <Box mt=\"12px\">\n        <Typography fontSize=\"12px\">\n          {!!currencyB?.symbol && !!currencyA?.symbol\n            ? `${currencyB?.symbol} per ${currencyA?.symbol}`\n            : NONE_TOKEN_SYMBOL}\n        </Typography>\n      </Box>\n    </Grid>\n  );\n}\n\nexport default function IncreaseLiquidity() {\n  const classes = useStyle();\n  const history = useHistory();\n  const { positionId: _positionId, pool: poolId } = useParams<{ positionId: string; pool: string }>();\n  const positionId = BigInt(_positionId);\n  const { result: _position, loading: positionRequestLoading } = usePositionDetailsFromId(poolId, _positionId);\n  const { position: existingPosition, loading: usePositionLoading } = usePosition({\n    poolId,\n    tickLower: _position?.tickLower,\n    tickUpper: _position?.tickUpper,\n    liquidity: _position?.liquidity,\n  });\n\n  const principal = useAccountPrincipal();\n  const positionLoading = usePositionLoading || positionRequestLoading;\n\n  const currency0 = existingPosition?.pool.token0;\n  const currency1 = existingPosition?.pool.token1;\n\n  const baseCurrency = useMemo(() => currency0, [currency0]);\n  const isSorted = currency0 ? baseCurrency?.equals(currency0) : false;\n  const quoteCurrency = isSorted ? currency1 : currency0;\n\n  const { independentField, typedValue } = useMintState();\n  const {\n    dependentField,\n    parsedAmounts,\n    currencyBalances,\n    position,\n    errorMessage,\n    invalidRange,\n    depositADisabled,\n    depositBDisabled,\n    atMaxAmounts,\n    maxAmounts,\n  } = useMintInfo(\n    baseCurrency ?? undefined,\n    quoteCurrency ?? undefined,\n    existingPosition?.pool.fee,\n    baseCurrency ?? undefined,\n    existingPosition,\n  );\n\n  const { onFieldAInput, onFieldBInput } = useMintHandlers();\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: parsedAmounts[dependentField]?.toSignificant(6) ?? \"\",\n  };\n\n  const isValid = !errorMessage && !invalidRange;\n\n  const [confirmModalShow, setConfirmModalShow] = useState(false);\n\n  const handleIncreaseLiquidity = useCallback(() => {\n    setConfirmModalShow(true);\n  }, [setConfirmModalShow]);\n\n  const handleCancel = useCallback(() => {\n    setConfirmModalShow(false);\n  }, [setConfirmModalShow]);\n\n  const [openLoadingTip, closeLoadingTip] = useLoadingTip();\n  const [openErrorTip] = useErrorTip();\n\n  const resetMintState = useResetMintState();\n\n  const loadLiquidityPage = useCallback(() => {\n    resetMintState();\n    history.push(\"/swap/liquidity\");\n  }, [history, resetMintState]);\n\n  const increaseLiquidityCall = useIncreaseLiquidityCall();\n\n  const handleConfirm = useCallback(async () => {\n    if (!principal) return;\n\n    if (position) {\n      const { call, key } = increaseLiquidityCall({\n        poolId,\n        position,\n        positionId,\n        openExternalTip: ({ message, tipKey }: ExternalTipArgs) => {\n          openErrorTip(<ReclaimTips message={message} tipKey={tipKey} />);\n        },\n      });\n\n      setConfirmModalShow(false);\n\n      const { token0 } = position.pool;\n      const { token1 } = position.pool;\n\n      const amount0Desired = actualAmountToPool(token0, position.mintAmounts.amount0.toString());\n      const amount1Desired = actualAmountToPool(token1, position.mintAmounts.amount1.toString());\n\n      const loadingTipKey = openLoadingTip(\n        t`Add ${toSignificantFormatted(\n          parseTokenAmount(amount0Desired, position.pool.token0.decimals).toString(),\n          8,\n        )} ${position.pool.token0.symbol} and ${toSignificantFormatted(\n          parseTokenAmount(amount1Desired, position.pool.token1.decimals).toString(),\n          8,\n        )} ${position.pool.token1.symbol}`,\n        {\n          extraContent: <StepViewButton step={key} />,\n        },\n      );\n\n      const result = await call();\n\n      if (result) {\n        loadLiquidityPage();\n      }\n\n      closeLoadingTip(loadingTipKey);\n    }\n  }, [position, poolId, positionId]);\n\n  const handleCurrencyAMax = () => {\n    const currencyAAmount = maxAmounts[FIELD.CURRENCY_A];\n    if (!currencyAAmount) return;\n    onFieldAInput(maxAmountFormat(currencyAAmount.toExact(), currencyAAmount.currency.decimals));\n  };\n\n  const handleCurrencyBMax = () => {\n    const currencyAmount = maxAmounts[FIELD.CURRENCY_B];\n    if (!currencyAmount) return;\n    onFieldBInput(maxAmountFormat(currencyAmount.toExact(), currencyAmount.currency.decimals));\n  };\n\n  return (\n    <Identity onSubmit={handleConfirm}>\n      {({ submit, loading }: CallbackProps) => (\n        <Box sx={{ position: \"relative\" }}>\n          <Grid container justifyContent=\"center\">\n            <Box sx={{ width: \"100%\", maxWidth: \"612px\", position: \"relative\" }}>\n              <MainCard level={1} className={`${classes.container} lightGray200`}>\n                <HeaderTab\n                  title=\"Add Liquidity\"\n                  showArrow\n                  showUserSetting\n                  slippageType=\"mint\"\n                  onBack={loadLiquidityPage}\n                />\n\n                <Box mt=\"20px\">\n                  <LiquidityInfo position={existingPosition} positionId={positionId} />\n                </Box>\n\n                <Box mt={3}>\n                  <Typography variant=\"h5\" color=\"textPrimary\">\n                    <Trans>Add more liquidity</Trans>\n                  </Typography>\n                  <Box mt=\"12px\">\n                    <DepositAmount\n                      currency={baseCurrency ?? undefined}\n                      onUserInput={onFieldAInput}\n                      value={formattedAmounts[FIELD.CURRENCY_A]}\n                      locked={depositADisabled}\n                      type=\"addLiquidity\"\n                      currencyBalance={currencyBalances?.[FIELD.CURRENCY_A]}\n                      showMaxButton={\n                        !atMaxAmounts[FIELD.CURRENCY_A] &&\n                        new BigNumber(maxAmounts[FIELD.CURRENCY_A]?.toExact() ?? 0).isGreaterThan(0)\n                      }\n                      onMax={handleCurrencyAMax}\n                    />\n                    <Box mt=\"16px\">\n                      <DepositAmount\n                        currency={quoteCurrency ?? undefined}\n                        onUserInput={onFieldBInput}\n                        value={formattedAmounts[FIELD.CURRENCY_B]}\n                        locked={depositBDisabled}\n                        type=\"addLiquidity\"\n                        currencyBalance={currencyBalances?.[FIELD.CURRENCY_B]}\n                        showMaxButton={\n                          !atMaxAmounts[FIELD.CURRENCY_B] &&\n                          new BigNumber(maxAmounts[FIELD.CURRENCY_B]?.toExact() ?? 0).isGreaterThan(0)\n                        }\n                        onMax={handleCurrencyBMax}\n                      />\n                    </Box>\n                  </Box>\n                </Box>\n                <Box mt={5}>\n                  <Button\n                    fullWidth\n                    variant=\"contained\"\n                    disabled={!isValid || loading}\n                    size=\"large\"\n                    onClick={handleIncreaseLiquidity}\n                  >\n                    {isValid ? t`Add` : errorMessage}\n                  </Button>\n                </Box>\n              </MainCard>\n              {positionLoading && (\n                <Box sx={{ position: \"absolute\", top: 0, left: 0, width: \"100%\", height: \"100%\" }}>\n                  <Loading loading={positionLoading} mask />\n                </Box>\n              )}\n            </Box>\n          </Grid>\n\n          {confirmModalShow && !!position && (\n            <ConfirmAddLiquidity\n              onConfirm={submit}\n              onCancel={handleCancel}\n              open={confirmModalShow}\n              position={position}\n            />\n          )}\n        </Box>\n      )}\n    </Identity>\n  );\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m18 12 4-4-4-4v3H3v2h15zM6 12l-4 4 4 4v-3h15v-2H6z\"\n}), 'SyncAlt');","import { Position } from \"../entities/position\";\n\nexport function getPriceOrderingFromPositionForUI(position: Position | undefined) {\n  if (!position) return {};\n\n  const token0 = position.amount0.currency;\n  const token1 = position.amount1.currency;\n\n  // if both prices are below 1, invert\n  if (position.token0PriceUpper.lessThan(1)) {\n    return {\n      priceLower: position.token0PriceUpper.invert(),\n      priceUpper: position.token0PriceLower.invert(),\n      quote: token0,\n      base: token1,\n    };\n  }\n\n  // otherwise, just return the default\n  return {\n    priceLower: position.token0PriceLower,\n    priceUpper: position.token0PriceUpper,\n    quote: token1,\n    base: token0,\n  };\n}\n","import { Token } from \"../core/entities/token\";\nimport { Price } from \"../core/entities/fractions/price\";\n\ninterface useInverterProps {\n  priceLower: Price<Token, Token> | undefined;\n  priceUpper: Price<Token, Token> | undefined;\n  quote: Token | undefined;\n  base: Token | undefined;\n  invert: boolean;\n}\n\nexport function useInverter({ priceLower, priceUpper, quote, base, invert }: useInverterProps) {\n  return {\n    priceUpper: invert ? priceLower?.invert() : priceUpper,\n    priceLower: invert ? priceUpper?.invert() : priceLower,\n    quote: invert ? base : quote,\n    base: invert ? quote : base,\n  };\n}\n"],"names":["AddLiquidityConfirmModal","_ref","_position$pool","_position$pool2","open","onCancel","onConfirm","position","baseCurrencyDefault","currency0","pool","token0","currency1","token1","manuallyInverted","setManuallyInverted","useState","baseCurrency","useMemo","base","sorted","quoteCurrency","ticksAtLimit","inverted","tickLower","tickUpper","feeAmount","fee","_tickAtLimit","useIsTickAtLimit","Bound","LOWER","UPPER","undefined","useTicksAtLimitInvert","price","priceLower","priceUpper","priceOf","token0PriceLower","token0PriceUpper","invert","onConvertClick","_jsx","SwapModal","onClose","title","children","_jsxs","_Fragment","Grid","container","flexDirection","spacing","item","Typography","Trans","id","xs","justifyContent","color","align","concat","amount0","toSignificant","groupSeparator","symbol","sx","marginTop","amount1","SyncAltIcon","fontSize","marginLeft","cursor","onClick","formatTickPrice","Button","variant","size","fullWidth","createSvgIcon","d","SwapHeader","showArrow","onBack","history","useHistory","handleBack","useCallback","goBack","ArrowBackIcon","customizeTheme","createTheme","breakpoints","values","sm","useStyle","makeStyles","theme","NFTBox","marginRight","borderRadius","background","palette","level2","width","height","down","marginBottom","NFTWrapper","currentPrice","border","level3","padding","rangeBox","LiquidityInfo","classes","pricesFromPosition","getPriceOrderingFromPositionForUI","useInverter","quote","equals","currencyQuote","currencyBase","tickAtLimit","pairName","outOfRange","tickCurrent","closed","_position$liquidity","liquidity","toString","hasLiquidity","alignItems","Box","display","TokenImage","logo","tokenId","address","left","fontWeight","margin","PositionRangeState","className","maxWidth","whiteSpace","textOverflow","overflow","mt","gap","wrapper","colors","darkPrimary400","darkLevel1","Marker","props","SvgIcon","viewBox","fill","Closed","component","OutOfRange","InRange","fillRule","clipRule","box","radius","backgroundColor","gray200","input","textAlign","chip","isDarkTheme","lightGray200","paddingLeft","maxButton","secondaryMain","LockMask","type","useTheme","top","level1","opacity","zIndex","LockIcon","SwapDepositAmount","_ref2","_currency$decimals","currency","value","locked","onUserInput","currencyBalance","showMaxButton","onMax","decimals","SAFE_DECIMALS_LENGTH","p","Chip","label","avatar","wrapped","NumberTextField","placeholder","numericProps","thousandSeparator","decimalScale","allowNegative","maxLength","MAX_SWAP_INPUT_LENGTH","onChange","e","target","mr","formatCurrencyAmount","usePosition","userPosition","result","poolMetadata","useSwapPoolMetadata","poolId","useToken","poolState","usePool","Number","Position","loading","PoolState","LOADING","checking","NOT_CHECK","useInitialAddLiquiditySteps","stepContentManage","useStepContentManager","handleReclaim","useReclaimCallback","key","_ref4","content","parseTokenAmount","actualAmountToPool","mintAmounts","symbol0","symbol1","isToken0UseTransfer","isUseTransfer","isToken1UseTransfer","amount0Value","Avatar","src","amount1Value","step","i18n","_","errorActions","TextButton","errorMessage","0","1","getIncreaseLiquiditySteps","String","useIncreaseLiquidityCall","getCalls","principal","useAccountPrincipal","openSuccessTip","useSuccessTip","approve","useSwapApprove","deposit","useSwapDeposit","transfer","useSwapTransfer","positionId","openExternalTip","stepKey","async","amount0Desired","message","tipKey","amount1Desired","_ref3","identity","getActorIdentity","status","increaseLiquidity","getLocaleMessage","useIncreaseLiquidityCalls","formatCall","useStepCalls","initialSteps","_ref5","newStepKey","calls","call","reset","retry","range","inputBox","PriceRange","currencyA","currencyB","NONE_TOKEN_SYMBOL","IncreaseLiquidity","_parsedAmounts$depend","_parsedAmounts$depend2","_positionId","useParams","BigInt","_position","positionRequestLoading","usePositionDetailsFromId","existingPosition","usePositionLoading","positionLoading","independentField","typedValue","useMintState","dependentField","parsedAmounts","currencyBalances","invalidRange","depositADisabled","depositBDisabled","atMaxAmounts","maxAmounts","useMintInfo","onFieldAInput","onFieldBInput","useMintHandlers","formattedAmounts","isValid","confirmModalShow","setConfirmModalShow","handleIncreaseLiquidity","handleCancel","openLoadingTip","closeLoadingTip","useLoadingTip","openErrorTip","useErrorTip","resetMintState","useResetMintState","loadLiquidityPage","push","increaseLiquidityCall","handleConfirm","ReclaimTips","loadingTipKey","toSignificantFormatted","2","3","extraContent","StepViewButton","handleCurrencyAMax","currencyAAmount","FIELD","CURRENCY_A","maxAmountFormat","toExact","handleCurrencyBMax","currencyAmount","CURRENCY_B","Identity","onSubmit","_maxAmounts$FIELD$CUR","_maxAmounts$FIELD$CUR2","_maxAmounts$FIELD$CUR3","_maxAmounts$FIELD$CUR4","submit","MainCard","level","HeaderTab","showUserSetting","slippageType","DepositAmount","BigNumber","isGreaterThan","disabled","Loading","mask","ConfirmAddLiquidity","lessThan"],"sourceRoot":""}
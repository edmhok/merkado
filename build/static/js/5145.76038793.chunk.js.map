{"version":3,"file":"static/js/5145.76038793.chunk.js","mappings":"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","sources":["views/voting/index.tsx","../packages/hooks/src/token/calls.ts","../packages/hooks/src/voting/index.ts"],"sourcesContent":["import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Grid, Typography, Avatar, Box, useMediaQuery } from \"@mui/material\";\nimport { useTheme } from \"@mui/styles\";\nimport { formatAmount, pageArgsFormat } from \"@w2e/utils\";\nimport { Wrapper, MainCard, Pagination, PaginationType, NoData, StaticLoading } from \"components/index\";\nimport { Trans } from \"@lingui/macro\";\nimport { ProjectInfo } from \"@w2e/types\";\nimport { useTokenTotalHolder, useVotingProjects } from \"@w2e/hooks\";\nimport { Theme } from \"@mui/material/styles\";\n\nexport interface VoteItemProps {\n  project: ProjectInfo;\n}\n\nexport function VoteItem({ project }: VoteItemProps) {\n  const theme = useTheme() as Theme;\n  const history = useHistory();\n\n  const handleEnter = () => {\n    history.push(`/voting/${project.projectCid}`);\n  };\n\n  const { result: totalHolder } = useTokenTotalHolder(project.tokenCid);\n\n  return (\n    <MainCard level={4}>\n      <Grid container justifyContent=\"center\" mb=\"20px\">\n        <Avatar src={project.logo} sx={{ marginRight: \"12px\", width: \"100px\", height: \"100px\" }}>\n          &nbsp;\n        </Avatar>\n      </Grid>\n      <Box mt=\"20px\">\n        <Typography color=\"text.primary\" fontSize=\"24px\" fontWeight={500} align=\"center\">\n          {project.name}\n        </Typography>\n      </Box>\n      <Box mt=\"10px\">\n        <Typography fontSize=\"14px\" align=\"center\">\n          {totalHolder !== undefined ? formatAmount(Number(totalHolder), 0) : \"--\"} holders\n        </Typography>\n      </Box>\n      <Grid container justifyContent=\"center\" mt=\"40px\" mb=\"20px\">\n        <Box\n          sx={{\n            border: `1px solid ${theme.colors.darkSecondaryMain}`,\n            borderRadius: \"300px\",\n            padding: \"14px 50px\",\n            cursor: \"pointer\",\n            \"&:hover\": {\n              background: \"linear-gradient(89.44deg, #365E32 -0.31%, #059212 91.14%)\",\n              border: \"1px solid transparent\",\n            },\n          }}\n          onClick={handleEnter}\n        >\n          <Typography color=\"text.primary\" fontSize=\"14px\" fontWeight={500} component=\"span\">\n            <Trans>Enter</Trans>\n          </Typography>\n        </Box>\n      </Grid>\n    </MainCard>\n  );\n}\n\nexport default function Voting() {\n  const [pagination, setPagination] = useState({ pageNum: 1, pageSize: 10 });\n  const [offset] = pageArgsFormat(pagination.pageNum, pagination.pageSize);\n\n  const handlePageChange = (pagination: PaginationType) => {\n    setPagination(pagination);\n  };\n\n  const { result, loading } = useVotingProjects(offset, pagination.pageSize);\n  const { content: list, totalElements } = result ?? { content: [] as ProjectInfo[], totalElements: BigInt(0) };\n\n  const matchDown1160 = useMediaQuery(\"(max-width:1160px)\");\n  const matchDown760 = useMediaQuery(\"(max-width:760px)\");\n  const matchDown640 = useMediaQuery(\"(max-width:640px)\");\n\n  return (\n    <Wrapper>\n      <MainCard>\n        <Grid container alignItems=\"center\">\n          <Grid item xs>\n            <Typography variant=\"h3\">\n              <Trans>Voting</Trans>\n            </Typography>\n          </Grid>\n        </Grid>\n\n        <Box mt=\"20px\" sx={{ position: \"relative\" }}>\n          <Box\n            sx={{\n              display: \"grid\",\n              gridTemplateColumns: matchDown640\n                ? \"1fr\"\n                : matchDown760\n                  ? \"repeat(2, 1fr)\"\n                  : matchDown1160\n                    ? \"repeat(3, 1fr)\"\n                    : \"repeat(4, 1fr)\",\n              gap: \"20px 20px\",\n              ...(loading ? { minHeight: \"300px\" } : {}),\n            }}\n          >\n            {list.map((ele) => (\n              <VoteItem key={ele.tokenCid} project={ele} />\n            ))}\n          </Box>\n\n          {loading ? (\n            <Box\n              sx={{\n                position: \"absolute\",\n                width: \"100%\",\n                top: \"0\",\n                left: 0,\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <StaticLoading loading={loading} />\n            </Box>\n          ) : null}\n\n          {list.length === 0 && !loading ? <NoData /> : null}\n        </Box>\n\n        {Number(totalElements) > 0 ? (\n          <Pagination\n            count={Number(totalElements)}\n            defaultPageSize={pagination.pageSize}\n            onPageChange={handlePageChange}\n          />\n        ) : null}\n      </MainCard>\n    </Wrapper>\n  );\n}\n","import { useCallback } from \"react\";\nimport { isPrincipal, isAvailablePageArgs } from \"@w2e/utils\";\nimport { tokenAdapter } from \"@w2e/token-adapter\";\nimport { Principal } from \"@dfinity/principal\";\nimport type { ActorIdentity, StatusResult } from \"@w2e/types\";\n\nimport { useCallsData } from \"../useCallData\";\n\nexport async function getTokenTotalHolder(canisterId: string | undefined) {\n  return (\n    await tokenAdapter.totalHolders({\n      canisterId: canisterId!,\n    })\n  ).data;\n}\n\nexport function useTokenTotalHolder(canisterId: string | undefined, reload?: boolean) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId) return undefined;\n      return await getTokenTotalHolder(canisterId);\n    }, [canisterId]),\n    reload,\n  );\n}\n\nexport async function getTokenHolders(canisterId: string, offset: number, limit: number) {\n  return (\n    await tokenAdapter.holders({\n      canisterId,\n      params: {\n        offset: BigInt(offset),\n        limit: BigInt(limit),\n      },\n    })\n  ).data;\n}\n\nexport function useTokenHolders(canisterId: string, offset: number, limit: number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !isAvailablePageArgs(offset, limit)) return undefined;\n      return await getTokenHolders(canisterId, offset, limit);\n    }, [offset, limit, canisterId]),\n  );\n}\n\nexport interface getTokenTransactionProps {\n  canisterId: string;\n  account: string | undefined | null | Principal;\n  offset: number;\n  limit: number;\n  capId?: string;\n  witness?: boolean;\n}\n\nexport async function getTokenTransaction({\n  canisterId,\n  account,\n  offset,\n  limit,\n  capId,\n  witness,\n}: getTokenTransactionProps) {\n  return (\n    await tokenAdapter.transactions({\n      canisterId,\n      params: {\n        user: account ? (isPrincipal(account) ? { principal: account } : { address: account }) : undefined,\n        offset,\n        limit,\n        index: undefined,\n        hash: undefined,\n        capId,\n        witness,\n      },\n    })\n  ).data;\n}\n\nexport interface useTokenTransactionsProps {\n  canisterId: string;\n  account: string | undefined | null | Principal;\n  offset: number;\n  limit: number;\n  cap?: boolean;\n  capId?: string;\n  witness?: boolean;\n}\n\nexport function useTokenTransactions({\n  canisterId,\n  account,\n  offset,\n  limit,\n  capId,\n  witness,\n}: useTokenTransactionsProps) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !isAvailablePageArgs(offset, limit)) return undefined;\n\n      return getTokenTransaction({\n        canisterId,\n        account,\n        offset,\n        limit,\n        capId,\n        witness,\n      });\n    }, [offset, limit, canisterId, account, capId, witness]),\n  );\n}\n\nexport async function getTokenSupply(canisterId: string) {\n  return (await tokenAdapter.supply({ canisterId: canisterId! })).data;\n}\n\nexport function useTokenSupply(canisterId: string | undefined, reload?: boolean) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId) return undefined;\n      return await getTokenSupply(canisterId!);\n    }, [canisterId]),\n    reload,\n  );\n}\n\nexport async function getTokenMetadata(canisterId: string) {\n  return (await tokenAdapter.metadata({ canisterId })).data;\n}\n\nexport function useTokenMetadata(canisterId: string | undefined) {\n  return useCallsData(\n    useCallback(async () => await getTokenMetadata(canisterId!), [canisterId]),\n    !!canisterId,\n  );\n}\n\nexport interface Allowance {\n  canisterId: string;\n  account: Principal | string;\n  spenderCanisterId: string;\n  subaccount?: number[];\n}\n\nexport async function allowance({ canisterId, account, spenderCanisterId, subaccount }: Allowance) {\n  return (\n    await tokenAdapter.allowance({\n      canisterId,\n      params: {\n        spender: Principal.fromText(spenderCanisterId),\n        owner: isPrincipal(account) ? { principal: account } : { address: account },\n        subaccount,\n      },\n    })\n  ).data;\n}\n\nexport interface Approve {\n  canisterId: string;\n  identity: ActorIdentity;\n  spenderCanisterId: string;\n  value: number | string | bigint;\n  account: string | Principal | undefined;\n  subaccount?: number[];\n}\n\nexport async function approve({ canisterId, identity, spenderCanisterId, value, account, subaccount }: Approve) {\n  return tokenAdapter.approve({\n    canisterId,\n    identity,\n    params: {\n      spender: Principal.fromText(spenderCanisterId),\n      allowance: BigInt(value),\n      subaccount,\n      account: account!,\n    },\n  });\n}\n\nexport function useApproveCallback(): (approveParams: Approve) => Promise<StatusResult<boolean>> {\n  return useCallback(async ({ canisterId, identity, spenderCanisterId, value, account }: Approve) => {\n    if (!account)\n      return await Promise.resolve({\n        status: \"err\",\n        message: \"Invalid account\",\n      } as StatusResult<boolean>);\n\n    const allowedBalance = await allowance({\n      canisterId,\n      account,\n      spenderCanisterId,\n    });\n\n    if (!allowedBalance || allowedBalance === BigInt(0) || BigInt(value ?? 0) > allowedBalance) {\n      return await approve({\n        canisterId,\n        identity,\n        spenderCanisterId,\n        value,\n        account,\n      });\n    }\n    return await Promise.resolve({\n      status: \"ok\",\n      data: true,\n      message: \"You have approved successfully\",\n    } as StatusResult<boolean>);\n  }, []);\n}\n\nexport async function getTokenMintingAccount(canisterId: string) {\n  return (await tokenAdapter.getMintingAccount({ canisterId })).data;\n}\n\nexport function useTokenMintingAccount(canisterId: string | undefined) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId) return undefined;\n      return await getTokenMintingAccount(canisterId);\n    }, [canisterId]),\n  );\n}\n","import { useCallback } from \"react\";\nimport { isAvailablePageArgs, availableArgsNull, resultFormat } from \"@w2e/utils\";\nimport { votingCanister, votingController, votingFile } from \"@w2e/actor\";\nimport type {\n  ActorIdentity,\n  PaginationResult,\n  ProjectInfo,\n  ProposalInfo,\n  UserVotePowersInfo,\n  UserVoteRecord,\n  VotingFileChunk,\n  CommitBatchArgs,\n  ProposalCreateInfo,\n} from \"@w2e/types\";\nimport { Principal } from \"@dfinity/principal\";\nimport { useCallsData } from \"../useCallData\";\n\nexport async function createVotingCanister(identity: ActorIdentity, args: ProjectInfo) {\n  return resultFormat<boolean>(await (await votingController(identity)).create(args));\n}\n\nexport async function getVotingProjects(offset: number, limit: number) {\n  return resultFormat<PaginationResult<ProjectInfo>>(\n    await (await votingController()).findProjectPage(BigInt(offset), BigInt(limit)),\n  ).data;\n}\n\nexport function useVotingProjects(offset: number, limit: number) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!isAvailablePageArgs(offset, limit)) return undefined;\n      return await getVotingProjects(offset, limit);\n    }, [offset, limit]),\n  );\n}\n\nexport async function getVotingProjectDetails(canisterId: string) {\n  return resultFormat<ProjectInfo>(await (await votingCanister(canisterId)).getProject()).data;\n}\n\nexport function useVotingProjectDetails(canisterId: string | undefined) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId) return undefined;\n      return await getVotingProjectDetails(canisterId);\n    }, [canisterId]),\n  );\n}\n\nexport async function createVotingProposal(identity: ActorIdentity, canisterId: string, args: ProposalCreateInfo) {\n  return resultFormat<string>(await (await votingCanister(canisterId, identity)).create(args));\n}\n\nexport async function deleteVotingProposal(identity: ActorIdentity, canisterId: string, proposalId: string) {\n  return resultFormat<boolean>(await (await votingCanister(canisterId, identity)).deleteProposal(proposalId));\n}\n\nexport async function getVotingProposal(canisterId: string, proposalId: string) {\n  return resultFormat<ProposalInfo>(await (await votingCanister(canisterId)).getProposal(proposalId)).data;\n}\n\nexport function useVotingProposal(canisterId: string | undefined, proposalId: string | undefined, reload?: boolean) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !proposalId) return undefined;\n      return await getVotingProposal(canisterId, proposalId);\n    }, [proposalId, canisterId]),\n    reload,\n  );\n}\n\nexport async function getVotingProposals(\n  canisterId: string,\n  address: string | undefined,\n  state: number | undefined,\n  offset: number,\n  limit: number,\n) {\n  return resultFormat<PaginationResult<ProposalInfo>>(\n    await (\n      await votingCanister(canisterId)\n    ).findPage(\n      availableArgsNull<string>(address),\n      availableArgsNull<bigint>(!!state || state === 0 ? BigInt(state) : undefined),\n      BigInt(offset),\n      BigInt(limit),\n    ),\n  ).data;\n}\n\nexport function useVotingProposals(\n  canisterId: string | undefined,\n  address: string | undefined,\n  state: number | undefined,\n  offset: number,\n  limit: number,\n) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !isAvailablePageArgs(offset, limit)) return undefined;\n\n      return await getVotingProposals(canisterId, address, state, offset, limit);\n    }, [canisterId, address, state, offset, limit]),\n  );\n}\n\nexport async function setVotingProposalState(\n  identity: ActorIdentity,\n  canisterId: string,\n  proposalId: string,\n  state: number,\n) {\n  return resultFormat<boolean>(await (await votingCanister(canisterId, identity)).setState(proposalId, BigInt(state)));\n}\n\nexport async function setVotingProposalPowers(\n  identity: ActorIdentity,\n  canisterId: string,\n  proposalId: string,\n  powers: UserVotePowersInfo[],\n) {\n  return resultFormat<boolean>(await (await votingCanister(canisterId, identity)).setVotePower(proposalId, powers));\n}\n\nexport async function voting(\n  identity: ActorIdentity,\n  canisterId: string,\n  proposalId: string,\n  value: string,\n  powers: number,\n) {\n  return resultFormat<boolean>(\n    await (await votingCanister(canisterId, identity)).vote(proposalId, value, BigInt(powers)),\n  );\n}\n\nexport async function getVotingTransactions(canisterId: string, proposalId: string, offset: number, limit: number) {\n  return resultFormat<PaginationResult<UserVoteRecord>>(\n    await (await votingCanister(canisterId)).findRecordPage(proposalId, BigInt(offset), BigInt(limit)),\n  ).data;\n}\n\nexport function useVotingTransactions(\n  canisterId: string | undefined,\n  proposalId: string | undefined,\n  offset: number,\n  limit: number,\n) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!isAvailablePageArgs(offset, limit) || !canisterId || !proposalId) return undefined;\n\n      return await getVotingTransactions(canisterId!, proposalId!, offset, limit);\n    }, [offset, limit, proposalId, canisterId]),\n  );\n}\n\nexport async function getUserVotingPowers(\n  canisterId: string,\n  proposalId: string | undefined,\n  address: string | undefined,\n  offset: number,\n  limit: number,\n) {\n  return resultFormat<PaginationResult<UserVotePowersInfo>>(\n    await (\n      await votingCanister(canisterId)\n    ).findVotePower(\n      availableArgsNull<string>(proposalId),\n      availableArgsNull<string>(address),\n      BigInt(offset),\n      BigInt(limit),\n    ),\n  ).data;\n}\n\nexport function useUserVotingPowers(\n  canisterId: string | undefined,\n  proposalId: string | undefined,\n  address: string | undefined,\n  offset: number,\n  limit: number,\n  reload?: boolean,\n) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !isAvailablePageArgs(offset, limit)) return undefined;\n\n      return await getUserVotingPowers(canisterId!, proposalId, address, offset, limit);\n    }, [canisterId, address, proposalId, offset, limit]),\n    reload,\n  );\n}\n\nexport async function addVotingAuthorityUsers(identity: ActorIdentity, canisterId: string, user: Principal) {\n  return resultFormat<boolean>(await (await votingCanister(canisterId, identity)).addAdmin(user));\n}\n\nexport async function deleteVotingAuthorityUsers(identity: ActorIdentity, canisterId: string, user: Principal) {\n  return resultFormat<boolean>(await (await votingCanister(canisterId, identity)).deleteAdmin(user));\n}\n\nexport async function getVotingAuthorityUsers(canisterId: string, offset: number, limit: number) {\n  return resultFormat<PaginationResult<Principal>>(\n    await (await votingCanister(canisterId)).getAdminList(BigInt(offset), BigInt(limit)),\n  ).data;\n}\n\nexport function useVotingAuthorityUsers(\n  canisterId: string | undefined,\n  offset: number,\n  limit: number,\n  reload?: boolean,\n) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !isAvailablePageArgs(offset, limit)) return undefined;\n      return await getVotingAuthorityUsers(canisterId!, offset, limit);\n    }, [canisterId, offset, limit]),\n    reload,\n  );\n}\n\n// -------------- Voting file --------------\n\nexport async function createVotingBatch(identity: ActorIdentity, canisterId: string, projectId: string) {\n  return resultFormat<{\n    batch_id: bigint;\n  }>(await (await votingFile(canisterId, identity)).create_batch(projectId));\n}\n\nexport async function createVotingChunk(\n  identity: ActorIdentity,\n  canisterId: string,\n  chunk: VotingFileChunk,\n  projectId: string,\n) {\n  return resultFormat<{\n    chunk_id: bigint;\n  }>(await (await votingFile(canisterId, identity)).create_chunk(chunk, projectId));\n}\n\nexport async function commitVotingChunk(\n  identity: ActorIdentity,\n  canisterId: string,\n  args: CommitBatchArgs,\n  projectId: string,\n) {\n  const result = await (await votingFile(canisterId, identity)).commit_batch(args, projectId);\n\n  return resultFormat<boolean>(result === undefined);\n}\n\n// -------------- Voting file --------------\n"],"names":["VoteItem","_ref","project","theme","useTheme","history","useHistory","result","totalHolder","useTokenTotalHolder","tokenCid","_jsxs","MainCard","level","children","_jsx","Grid","container","justifyContent","mb","Avatar","src","logo","sx","marginRight","width","height","Box","mt","Typography","color","fontSize","fontWeight","align","name","undefined","formatAmount","Number","border","concat","colors","darkSecondaryMain","borderRadius","padding","cursor","background","onClick","handleEnter","push","projectCid","component","Trans","id","Voting","pagination","setPagination","useState","pageNum","pageSize","offset","pageArgsFormat","loading","useVotingProjects","content","list","totalElements","BigInt","matchDown1160","useMediaQuery","matchDown760","matchDown640","Wrapper","alignItems","item","xs","variant","position","display","gridTemplateColumns","gap","minHeight","map","ele","top","left","StaticLoading","length","NoData","Pagination","count","defaultPageSize","onPageChange","fulfilled","value","step","generator","next","e","reject","rejected","throw","done","resolve","then","apply","thisArg","_arguments","canisterId","reload","useCallback","__awaiter","tokenAdapter","totalHolders","data","getTokenTotalHolder","useTokenMintingAccount","getMintingAccount","getTokenMintingAccount","createVotingCanister","identity","args","resultFormat","votingController","create","limit","useCallsData","isAvailablePageArgs","findProjectPage","getVotingProjects","useVotingProjectDetails","votingCanister","getProject","getVotingProjectDetails","createVotingProposal","deleteVotingProposal","proposalId","deleteProposal","useVotingProposal","getProposal","getVotingProposal","useVotingProposals","address","state","findPage","availableArgsNull","getVotingProposals","setVotingProposalPowers","powers","setVotePower","voting","vote","getVotingTransactions","findRecordPage","getUserVotingPowers","findVotePower","useUserVotingPowers","addVotingAuthorityUsers","user","addAdmin","deleteVotingAuthorityUsers","deleteAdmin","useVotingAuthorityUsers","getAdminList","getVotingAuthorityUsers","createVotingBatch","projectId","votingFile","create_batch","createVotingChunk","chunk","create_chunk","commitVotingChunk","commit_batch"],"sourceRoot":""}
{"version":3,"file":"static/js/5918.b7c6b808.chunk.js","mappings":"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","sources":["candid/swap-v2/SwapPositionManager.did.ts","candid/swap-v1/SwapPositionManager.did.ts","candid/swap-v2/SwapFactory.did.ts","candid/swap-v2/SwapPool.did.ts","candid/swap-v2/InfoPools.did.ts","actor/swapV2.ts"],"sourcesContent":["export const idlFactory = ({ IDL }: any) => {\n  const BoolResult__1 = IDL.Variant({ ok: IDL.Bool, err: IDL.Text });\n  const ResultAmount = IDL.Record({ amount0: IDL.Nat, amount1: IDL.Nat });\n  const ResponseResult_1 = IDL.Variant({\n    ok: ResultAmount,\n    err: IDL.Text,\n  });\n  const CollectParams = IDL.Record({\n    tokenId: IDL.Nat,\n    internalCall: IDL.Bool,\n    recipient: IDL.Principal,\n    amount0Max: IDL.Text,\n    amount1Max: IDL.Text,\n  });\n  const Address = IDL.Text;\n  const ResponseResult_9 = IDL.Variant({ ok: Address, err: IDL.Text });\n  const NatResult = IDL.Variant({ ok: IDL.Nat, err: IDL.Text });\n  const DecreaseLiquidityParams = IDL.Record({\n    tokenId: IDL.Nat,\n    liquidity: IDL.Text,\n    recipient: IDL.Principal,\n    amount0Min: IDL.Text,\n    amount1Min: IDL.Text,\n    deadline: IDL.Nat,\n  });\n  const ResponseResult_10 = IDL.Variant({\n    ok: IDL.Vec(IDL.Text),\n    err: IDL.Text,\n  });\n  const Address__1 = IDL.Text;\n  const PoolKey = IDL.Record({\n    fee: IDL.Nat,\n    token0: Address__1,\n    token1: Address__1,\n  });\n  const TVLResult = IDL.Record({\n    token0TVL: IDL.Nat,\n    token1TVL: IDL.Nat,\n  });\n  const ResponseResult_8 = IDL.Variant({\n    ok: IDL.Vec(TVLResult),\n    err: IDL.Text,\n  });\n  const Position = IDL.Record({\n    tickUpper: IDL.Int,\n    tokensOwed0: IDL.Nat,\n    tokensOwed1: IDL.Nat,\n    operator: Address__1,\n    feeGrowthInside1LastX128: IDL.Nat,\n    liquidity: IDL.Nat,\n    feeGrowthInside0LastX128: IDL.Nat,\n    nonce: IDL.Nat,\n    tickLower: IDL.Int,\n    poolId: IDL.Nat,\n  });\n  const TickLiquidityInfo = IDL.Record({\n    tickIndex: IDL.Int,\n    price0Decimal: IDL.Nat,\n    liquidityNet: IDL.Int,\n    price0: IDL.Nat,\n    price1: IDL.Nat,\n    liquidityGross: IDL.Nat,\n    price1Decimal: IDL.Nat,\n  });\n  const ResponseResult_7 = IDL.Variant({\n    ok: IDL.Vec(TickLiquidityInfo),\n    err: IDL.Text,\n  });\n  const VolumeMapType = IDL.Record({ tokenA: IDL.Nat, tokenB: IDL.Nat });\n  const ResponseResult_6 = IDL.Variant({\n    ok: VolumeMapType,\n    err: IDL.Text,\n  });\n  const IncreaseLiquidityParams = IDL.Record({\n    tokenId: IDL.Nat,\n    recipient: IDL.Principal,\n    amount0Min: IDL.Text,\n    amount1Min: IDL.Text,\n    deadline: IDL.Nat,\n    amount0Desired: IDL.Text,\n    amount1Desired: IDL.Text,\n  });\n  const LiquidityType = IDL.Record({\n    liquidity: IDL.Nat,\n    amount0: IDL.Nat,\n    amount1: IDL.Nat,\n  });\n  const ResponseResult_5 = IDL.Variant({\n    ok: LiquidityType,\n    err: IDL.Text,\n  });\n  const QueryPositionResult = IDL.Record({\n    fee: IDL.Nat,\n    tickUpper: IDL.Int,\n    tokensOwed0: IDL.Nat,\n    tokensOwed1: IDL.Nat,\n    operator: Address__1,\n    feeGrowthInside1LastX128: IDL.Nat,\n    liquidity: IDL.Nat,\n    feeGrowthInside0LastX128: IDL.Nat,\n    token0: Address__1,\n    token1: Address__1,\n    nonce: IDL.Nat,\n    tickLower: IDL.Int,\n    poolId: IDL.Nat,\n  });\n  const ResponseResult_2 = IDL.Variant({\n    ok: QueryPositionResult,\n    err: IDL.Text,\n  });\n  const MintParams = IDL.Record({\n    fee: IDL.Nat,\n    tickUpper: IDL.Int,\n    recipient: IDL.Principal,\n    amount0Min: IDL.Text,\n    amount1Min: IDL.Text,\n    deadline: IDL.Nat,\n    token0: Address__1,\n    token1: Address__1,\n    amount0Desired: IDL.Text,\n    amount1Desired: IDL.Text,\n    tickLower: IDL.Int,\n  });\n  const MintResult = IDL.Record({\n    tokenId: IDL.Nat,\n    liquidity: IDL.Nat,\n    amount0: IDL.Nat,\n    amount1: IDL.Nat,\n  });\n  const ResponseResult_4 = IDL.Variant({ ok: MintResult, err: IDL.Text });\n  const ResponseResult_3 = IDL.Variant({\n    ok: IDL.Vec(IDL.Nat),\n    err: IDL.Text,\n  });\n  const BoolResult = IDL.Variant({ ok: IDL.Bool, err: IDL.Text });\n  const ResponseResult = IDL.Variant({ ok: IDL.Text, err: IDL.Text });\n  return IDL.Service({\n    addAdmin: IDL.Func([IDL.Text], [BoolResult__1], []),\n    burn: IDL.Func([IDL.Nat], [ResponseResult_1], []),\n    collect: IDL.Func([CollectParams], [ResponseResult_1], []),\n    collectInInvalidPosition: IDL.Func([CollectParams], [ResponseResult_1], []),\n    createAndInitializePoolIfNecessary: IDL.Func(\n      [Address, IDL.Text, Address, IDL.Text, IDL.Nat, IDL.Text],\n      [ResponseResult_9],\n      [],\n    ),\n    cycleAvailable: IDL.Func([], [NatResult], []),\n    cycleBalance: IDL.Func([], [NatResult], [\"query\"]),\n    decreaseLiquidity: IDL.Func([DecreaseLiquidityParams], [ResponseResult_1], []),\n    decreaseLiquidityInInvalidPosition: IDL.Func([DecreaseLiquidityParams], [ResponseResult_1], []),\n    getAdminList: IDL.Func([], [ResponseResult_10], [\"query\"]),\n    getApproved: IDL.Func([IDL.Nat], [ResponseResult_9], [\"query\"]),\n    getBaseDataStructureCanister: IDL.Func([IDL.Text], [IDL.Text], [\"query\"]),\n    getPoolTVL: IDL.Func([IDL.Vec(PoolKey)], [ResponseResult_8], []),\n    getPositionByPoolAddress: IDL.Func([Address], [IDL.Vec(Position)], [\"query\"]),\n    getTickInfos: IDL.Func([IDL.Text], [ResponseResult_7], []),\n    getTotalVolume: IDL.Func([IDL.Text], [ResponseResult_6], []),\n    increaseLiquidity: IDL.Func([IncreaseLiquidityParams], [ResponseResult_5], []),\n    invalidPositions: IDL.Func([IDL.Nat], [ResponseResult_2], [\"query\"]),\n    mint: IDL.Func([MintParams], [ResponseResult_4], []),\n    ownerInvalidTokens: IDL.Func([IDL.Text], [ResponseResult_3], [\"query\"]),\n    ownerTokens: IDL.Func([IDL.Text], [ResponseResult_3], [\"query\"]),\n    positions: IDL.Func([IDL.Nat], [ResponseResult_2], [\"query\"]),\n    refreshIncome: IDL.Func([IDL.Nat], [ResponseResult_1], []),\n    refreshInvalidIncome: IDL.Func([IDL.Nat], [ResponseResult_1], []),\n    removeAdmin: IDL.Func([IDL.Text], [BoolResult__1], []),\n    removeSwapPool: IDL.Func([Address], [BoolResult], []),\n    setBaseDataStructureCanister: IDL.Func([IDL.Text], [], []),\n    setLockServerCanisterId: IDL.Func([IDL.Text], [], []),\n    setSwapNFTCanisterId: IDL.Func([IDL.Text], [], [\"oneway\"]),\n    swapNFTCanisterId: IDL.Func([], [IDL.Text], [\"query\"]),\n    tokenURI: IDL.Func([IDL.Nat], [ResponseResult], []),\n    transfer: IDL.Func([IDL.Nat, IDL.Text], [ResponseResult], []),\n  });\n};\n","export const idlFactory = ({ IDL }: any) => {\n  const BoolResult__1 = IDL.Variant({ ok: IDL.Bool, err: IDL.Text });\n  const ResultAmount = IDL.Record({ amount0: IDL.Nat, amount1: IDL.Nat });\n  const ResponseResult_1 = IDL.Variant({\n    ok: ResultAmount,\n    err: IDL.Text,\n  });\n  const CollectParams = IDL.Record({\n    tokenId: IDL.Nat,\n    internalCall: IDL.Bool,\n    recipient: IDL.Principal,\n    amount0Max: IDL.Text,\n    amount1Max: IDL.Text,\n  });\n  const Address = IDL.Text;\n  const ResponseResult_9 = IDL.Variant({ ok: Address, err: IDL.Text });\n  const NatResult = IDL.Variant({ ok: IDL.Nat, err: IDL.Text });\n  const DecreaseLiquidityParams = IDL.Record({\n    tokenId: IDL.Nat,\n    liquidity: IDL.Text,\n    recipient: IDL.Principal,\n    amount0Min: IDL.Text,\n    amount1Min: IDL.Text,\n    deadline: IDL.Nat,\n  });\n  const ResponseResult_10 = IDL.Variant({\n    ok: IDL.Vec(IDL.Text),\n    err: IDL.Text,\n  });\n  const Address__1 = IDL.Text;\n  const PoolKey = IDL.Record({\n    fee: IDL.Nat,\n    token0: Address__1,\n    token1: Address__1,\n  });\n  const TVLResult = IDL.Record({\n    token0TVL: IDL.Nat,\n    token1TVL: IDL.Nat,\n  });\n  const ResponseResult_8 = IDL.Variant({\n    ok: IDL.Vec(TVLResult),\n    err: IDL.Text,\n  });\n  const Position = IDL.Record({\n    tickUpper: IDL.Int,\n    tokensOwed0: IDL.Nat,\n    tokensOwed1: IDL.Nat,\n    operator: Address__1,\n    feeGrowthInside1LastX128: IDL.Nat,\n    liquidity: IDL.Nat,\n    feeGrowthInside0LastX128: IDL.Nat,\n    nonce: IDL.Nat,\n    tickLower: IDL.Int,\n    poolId: IDL.Nat,\n  });\n  const TickLiquidityInfo = IDL.Record({\n    tickIndex: IDL.Int,\n    price0Decimal: IDL.Nat,\n    liquidityNet: IDL.Int,\n    price0: IDL.Nat,\n    price1: IDL.Nat,\n    liquidityGross: IDL.Nat,\n    price1Decimal: IDL.Nat,\n  });\n  const ResponseResult_7 = IDL.Variant({\n    ok: IDL.Vec(TickLiquidityInfo),\n    err: IDL.Text,\n  });\n  const VolumeMapType = IDL.Record({ tokenA: IDL.Nat, tokenB: IDL.Nat });\n  const ResponseResult_6 = IDL.Variant({\n    ok: VolumeMapType,\n    err: IDL.Text,\n  });\n  const IncreaseLiquidityParams = IDL.Record({\n    tokenId: IDL.Nat,\n    recipient: IDL.Principal,\n    amount0Min: IDL.Text,\n    amount1Min: IDL.Text,\n    deadline: IDL.Nat,\n    amount0Desired: IDL.Text,\n    amount1Desired: IDL.Text,\n  });\n  const LiquidityType = IDL.Record({\n    liquidity: IDL.Nat,\n    amount0: IDL.Nat,\n    amount1: IDL.Nat,\n  });\n  const ResponseResult_5 = IDL.Variant({\n    ok: LiquidityType,\n    err: IDL.Text,\n  });\n  const QueryPositionResult = IDL.Record({\n    fee: IDL.Nat,\n    tickUpper: IDL.Int,\n    tokensOwed0: IDL.Nat,\n    tokensOwed1: IDL.Nat,\n    operator: Address__1,\n    feeGrowthInside1LastX128: IDL.Nat,\n    liquidity: IDL.Nat,\n    feeGrowthInside0LastX128: IDL.Nat,\n    token0: Address__1,\n    token1: Address__1,\n    nonce: IDL.Nat,\n    tickLower: IDL.Int,\n    poolId: IDL.Nat,\n  });\n  const ResponseResult_2 = IDL.Variant({\n    ok: QueryPositionResult,\n    err: IDL.Text,\n  });\n  const MintParams = IDL.Record({\n    fee: IDL.Nat,\n    tickUpper: IDL.Int,\n    recipient: IDL.Principal,\n    amount0Min: IDL.Text,\n    amount1Min: IDL.Text,\n    deadline: IDL.Nat,\n    token0: Address__1,\n    token1: Address__1,\n    amount0Desired: IDL.Text,\n    amount1Desired: IDL.Text,\n    tickLower: IDL.Int,\n  });\n  const MintResult = IDL.Record({\n    tokenId: IDL.Nat,\n    liquidity: IDL.Nat,\n    amount0: IDL.Nat,\n    amount1: IDL.Nat,\n  });\n  const ResponseResult_4 = IDL.Variant({ ok: MintResult, err: IDL.Text });\n  const ResponseResult_3 = IDL.Variant({\n    ok: IDL.Vec(IDL.Nat),\n    err: IDL.Text,\n  });\n  const BoolResult = IDL.Variant({ ok: IDL.Bool, err: IDL.Text });\n  const ResponseResult = IDL.Variant({ ok: IDL.Text, err: IDL.Text });\n  return IDL.Service({\n    addAdmin: IDL.Func([IDL.Text], [BoolResult__1], []),\n    burn: IDL.Func([IDL.Nat], [ResponseResult_1], []),\n    collect: IDL.Func([CollectParams], [ResponseResult_1], []),\n    collectInInvalidPosition: IDL.Func([CollectParams], [ResponseResult_1], []),\n    createAndInitializePoolIfNecessary: IDL.Func(\n      [Address, IDL.Text, Address, IDL.Text, IDL.Nat, IDL.Text],\n      [ResponseResult_9],\n      [],\n    ),\n    cycleAvailable: IDL.Func([], [NatResult], []),\n    cycleBalance: IDL.Func([], [NatResult], [\"query\"]),\n    decreaseLiquidity: IDL.Func([DecreaseLiquidityParams], [ResponseResult_1], []),\n    decreaseLiquidityInInvalidPosition: IDL.Func([DecreaseLiquidityParams], [ResponseResult_1], []),\n    getAdminList: IDL.Func([], [ResponseResult_10], [\"query\"]),\n    getApproved: IDL.Func([IDL.Nat], [ResponseResult_9], [\"query\"]),\n    getBaseDataStructureCanister: IDL.Func([IDL.Text], [IDL.Text], [\"query\"]),\n    getPoolTVL: IDL.Func([IDL.Vec(PoolKey)], [ResponseResult_8], []),\n    getPositionByPoolAddress: IDL.Func([Address], [IDL.Vec(Position)], [\"query\"]),\n    getTickInfos: IDL.Func([IDL.Text], [ResponseResult_7], []),\n    getTotalVolume: IDL.Func([IDL.Text], [ResponseResult_6], []),\n    increaseLiquidity: IDL.Func([IncreaseLiquidityParams], [ResponseResult_5], []),\n    invalidPositions: IDL.Func([IDL.Nat], [ResponseResult_2], [\"query\"]),\n    mint: IDL.Func([MintParams], [ResponseResult_4], []),\n    ownerInvalidTokens: IDL.Func([IDL.Text], [ResponseResult_3], [\"query\"]),\n    ownerTokens: IDL.Func([IDL.Text], [ResponseResult_3], [\"query\"]),\n    positions: IDL.Func([IDL.Nat], [ResponseResult_2], [\"query\"]),\n    refreshIncome: IDL.Func([IDL.Nat], [ResponseResult_1], []),\n    refreshInvalidIncome: IDL.Func([IDL.Nat], [ResponseResult_1], []),\n    removeAdmin: IDL.Func([IDL.Text], [BoolResult__1], []),\n    removeSwapPool: IDL.Func([Address], [BoolResult], []),\n    setBaseDataStructureCanister: IDL.Func([IDL.Text], [], []),\n    setLockServerCanisterId: IDL.Func([IDL.Text], [], []),\n    setSwapNFTCanisterId: IDL.Func([IDL.Text], [], [\"oneway\"]),\n    swapNFTCanisterId: IDL.Func([], [IDL.Text], [\"query\"]),\n    tokenURI: IDL.Func([IDL.Nat], [ResponseResult], []),\n    transfer: IDL.Func([IDL.Nat, IDL.Text], [ResponseResult], []),\n  });\n};\n","export const idlFactory = ({ IDL }: any) => {\n  const Pool = IDL.Record({\n    fee: IDL.Nat,\n    ticks: IDL.Vec(IDL.Int),\n    liquidity: IDL.Nat,\n    tickCurrent: IDL.Int,\n    token0: IDL.Text,\n    token1: IDL.Text,\n    sqrtRatioX96: IDL.Nat,\n  });\n  const Address = IDL.Text;\n  const PrincipalText = IDL.Text;\n  const TextResult = IDL.Variant({ ok: IDL.Text, err: IDL.Text });\n  const TradeOverview = IDL.Record({\n    tvl: IDL.Nat,\n    tradeUserNum: IDL.Nat,\n    volume: IDL.Nat,\n    tradeSymbolNum: IDL.Nat,\n  });\n  const PoolInfo = IDL.Record({\n    fee: IDL.Nat,\n    ticks: IDL.Vec(IDL.Int),\n    pool: IDL.Text,\n    liquidity: IDL.Nat,\n    tickCurrent: IDL.Int,\n    token0: IDL.Text,\n    token1: IDL.Text,\n    sqrtRatioX96: IDL.Nat,\n    balance0: IDL.Nat,\n    balance1: IDL.Nat,\n  });\n  const Page = IDL.Record({\n    content: IDL.Vec(PoolInfo),\n    offset: IDL.Nat,\n    limit: IDL.Nat,\n    totalElements: IDL.Nat,\n  });\n  return IDL.Service({\n    _getPool: IDL.Func([IDL.Text], [Pool], []),\n    addAdmin: IDL.Func([IDL.Text], [IDL.Bool], []),\n    createPool: IDL.Func([Address, IDL.Text, Address, IDL.Text, IDL.Nat], [PrincipalText], []),\n    cycleAvailable: IDL.Func([], [IDL.Nat], []),\n    cycleBalance: IDL.Func([], [IDL.Nat], [\"query\"]),\n    enableFeeAmount: IDL.Func([IDL.Nat, IDL.Nat], [TextResult], []),\n    getAdminList: IDL.Func([], [IDL.Vec(IDL.Text)], [\"query\"]),\n    getInvalidPool: IDL.Func([IDL.Text], [PrincipalText], [\"query\"]),\n    getOverview: IDL.Func([], [TradeOverview], []),\n    getPool: IDL.Func([IDL.Text], [PrincipalText], [\"query\"]),\n    getPoolIds: IDL.Func([], [IDL.Vec(IDL.Text)], [\"query\"]),\n    getPoolList: IDL.Func([], [IDL.Vec(PoolInfo)], []),\n    getPoolListByPage: IDL.Func([IDL.Nat, IDL.Nat], [Page], []),\n    getPools: IDL.Func([IDL.Vec(IDL.Text)], [IDL.Vec(Pool)], []),\n    removeAdmin: IDL.Func([IDL.Text], [IDL.Bool], []),\n    removePool: IDL.Func([Address], [], [\"oneway\"]),\n    setBaseDataStructureCanister: IDL.Func([IDL.Text], [], []),\n  });\n};\n","export const idlFactory = ({ IDL }: any) => {\n  const NatResult = IDL.Variant({ ok: IDL.Nat, err: IDL.Text });\n  const AmountAndCycleResult = IDL.Record({\n    cycles: IDL.Nat,\n    amount0: IDL.Nat,\n    amount1: IDL.Nat,\n  });\n  const ResponseResult_2 = IDL.Variant({\n    ok: AmountAndCycleResult,\n    err: IDL.Text,\n  });\n  const ResultAmount = IDL.Record({ amount0: IDL.Nat, amount1: IDL.Nat });\n  const ResponseResult_4 = IDL.Variant({\n    ok: ResultAmount,\n    err: IDL.Text,\n  });\n  const TextResult = IDL.Variant({ ok: IDL.Text, err: IDL.Text });\n  const VolumeMapType = IDL.Record({ tokenA: IDL.Nat, tokenB: IDL.Nat });\n  const ResponseResult_3 = IDL.Variant({\n    ok: IDL.Vec(IDL.Text),\n    err: IDL.Text,\n  });\n  const PositionInfo = IDL.Record({\n    tokensOwed0: IDL.Nat,\n    tokensOwed1: IDL.Nat,\n    feeGrowthInside1LastX128: IDL.Nat,\n    liquidity: IDL.Nat,\n    feeGrowthInside0LastX128: IDL.Nat,\n  });\n  const SharedSlot0 = IDL.Record({\n    observationCardinalityNext: IDL.Nat,\n    sqrtPriceX96: IDL.Nat,\n    observationIndex: IDL.Nat,\n    feeProtocol: IDL.Nat,\n    tick: IDL.Int,\n    unlocked: IDL.Bool,\n    observationCardinality: IDL.Nat,\n  });\n  const TickLiquidityInfo = IDL.Record({\n    tickIndex: IDL.Int,\n    price0Decimal: IDL.Nat,\n    liquidityNet: IDL.Int,\n    price0: IDL.Nat,\n    price1: IDL.Nat,\n    liquidityGross: IDL.Nat,\n    price1Decimal: IDL.Nat,\n  });\n  const Address__1 = IDL.Text;\n  const Type__3 = IDL.Nat;\n  const PoolInfo = IDL.Record({\n    fee: IDL.Nat,\n    ticks: IDL.Vec(IDL.Int),\n    pool: IDL.Text,\n    liquidity: IDL.Nat,\n    tickCurrent: IDL.Int,\n    token0: IDL.Text,\n    token1: IDL.Text,\n    sqrtRatioX96: IDL.Nat,\n    balance0: IDL.Nat,\n    balance1: IDL.Nat,\n  });\n  const Address = IDL.Text;\n  const InitParameters = IDL.Record({\n    fee: IDL.Nat,\n    tickSpacing: IDL.Nat,\n    token1Standard: IDL.Text,\n    token0: Address,\n    token1: Address,\n    factory: Address,\n    token0Standard: IDL.Text,\n    canisterId: IDL.Text,\n  });\n  const Type__2 = IDL.Nat;\n  const Type = IDL.Int;\n  const Type__1 = IDL.Nat;\n  const ResponseResult_1 = IDL.Variant({\n    ok: IDL.Record({\n      cycles: IDL.Nat,\n      amount0: IDL.Int,\n      amount1: IDL.Int,\n    }),\n    err: IDL.Text,\n  });\n  const PaymentEntry = IDL.Record({\n    token: Address,\n    value: IDL.Nat,\n    tokenStandard: IDL.Text,\n    recipient: IDL.Principal,\n    payer: IDL.Principal,\n  });\n  const SnapshotCumulativesInsideResult = IDL.Record({\n    tickCumulativeInside: IDL.Int,\n    secondsPerLiquidityInsideX128: IDL.Nat,\n    secondsInside: IDL.Nat,\n  });\n  const SwapResult = IDL.Record({\n    feeAmount: IDL.Int,\n    cycles: IDL.Nat,\n    amount0: IDL.Int,\n    amount1: IDL.Int,\n  });\n  const ResponseResult = IDL.Variant({ ok: SwapResult, err: IDL.Text });\n  const SwapPool = IDL.Service({\n    balance: IDL.Func([IDL.Text], [NatResult], []),\n    balance0: IDL.Func([], [NatResult], []),\n    balance1: IDL.Func([], [NatResult], []),\n    burn: IDL.Func([IDL.Int, IDL.Int, IDL.Nat], [ResponseResult_2], []),\n    claimSwapFeeRepurchase: IDL.Func([], [], []),\n    collect: IDL.Func([IDL.Principal, IDL.Int, IDL.Int, IDL.Nat, IDL.Nat], [ResponseResult_2], []),\n    collectProtocol: IDL.Func([IDL.Principal, IDL.Nat, IDL.Nat], [ResponseResult_4], []),\n    cycleAvailable: IDL.Func([], [IDL.Nat], []),\n    cycleBalance: IDL.Func([], [IDL.Nat], [\"query\"]),\n    flash: IDL.Func([IDL.Principal, IDL.Nat, IDL.Nat, IDL.Text], [TextResult], []),\n    get24HVolume: IDL.Func([], [VolumeMapType], [\"query\"]),\n    getAdminList: IDL.Func([], [ResponseResult_3], [\"query\"]),\n    getPosition: IDL.Func([IDL.Text], [PositionInfo], [\"query\"]),\n    getSlot0: IDL.Func([], [SharedSlot0], [\"query\"]),\n    getStandard: IDL.Func([IDL.Text], [IDL.Text], [\"query\"]),\n    getSwapFeeRepurchase: IDL.Func([], [IDL.Record({ amount0: IDL.Nat, amount1: IDL.Nat })], [\"query\"]),\n    getSwapTokenMap: IDL.Func([IDL.Text], [IDL.Int], [\"query\"]),\n    getTickInfos: IDL.Func([], [IDL.Vec(TickLiquidityInfo)], [\"query\"]),\n    getTickSpacing: IDL.Func([], [IDL.Int], [\"query\"]),\n    getTotalVolume: IDL.Func([], [VolumeMapType], [\"query\"]),\n    getWalletAddress: IDL.Func([], [Address__1], []),\n    increaseObservationCardinalityNext: IDL.Func([Type__3], [TextResult], []),\n    info: IDL.Func([], [PoolInfo], []),\n    infoWithNoBalance: IDL.Func([], [PoolInfo], [\"query\"]),\n    init: IDL.Func([InitParameters], [], []),\n    initAdminList: IDL.Func([IDL.Vec(IDL.Text)], [], []),\n    initialize: IDL.Func([Type__2], [], []),\n    lockPool: IDL.Func([], [], []),\n    mint: IDL.Func([IDL.Principal, Type, Type, Type__1, IDL.Nat, IDL.Nat], [ResponseResult_2], []),\n    quoter: IDL.Func([IDL.Int, IDL.Nat, IDL.Bool, IDL.Nat, IDL.Nat], [ResponseResult_1], [\"query\"]),\n    rollBackData: IDL.Func([], [], []),\n    rollBackTransfer: IDL.Func([], [IDL.Vec(PaymentEntry)], []),\n    setFeeProtocol: IDL.Func([IDL.Nat, IDL.Nat], [TextResult], []),\n    setLockServerCanisterId: IDL.Func([IDL.Text], [], []),\n    setSwapFeeHolderCanisterId: IDL.Func([IDL.Principal], [], []),\n    setSwapFeeRepurchase: IDL.Func([IDL.Nat, IDL.Nat], [], []),\n    setTransFeeCache: IDL.Func([], [], []),\n    snapshotCumulativesInside: IDL.Func([Type, Type], [SnapshotCumulativesInsideResult], [\"query\"]),\n    swap: IDL.Func([IDL.Principal, IDL.Int, IDL.Nat, IDL.Bool, IDL.Nat, IDL.Nat], [ResponseResult], []),\n    transFee: IDL.Func([IDL.Text], [NatResult], []),\n    transFee0: IDL.Func([], [NatResult], []),\n    transFee0Cache: IDL.Func([], [NatResult], [\"query\"]),\n    transFee1: IDL.Func([], [NatResult], []),\n    transFee1Cache: IDL.Func([], [NatResult], [\"query\"]),\n    transFeeCache: IDL.Func([IDL.Text], [NatResult], [\"query\"]),\n    unlockPool: IDL.Func([], [], []),\n  });\n  return SwapPool;\n};\n","export const idlFactory = ({ IDL }: any) => {\n  const NatResult = IDL.Variant({ ok: IDL.Nat, err: IDL.Text });\n  const PublicPoolOverView = IDL.Record({\n    id: IDL.Nat,\n    token0Id: IDL.Text,\n    token1Id: IDL.Text,\n    totalVolumeUSD: IDL.Float64,\n    sqrtPrice: IDL.Float64,\n    tvlToken0: IDL.Float64,\n    tvlToken1: IDL.Float64,\n    pool: IDL.Text,\n    tick: IDL.Int,\n    liquidity: IDL.Nat,\n    token1Price: IDL.Float64,\n    feeTier: IDL.Nat,\n    volumeUSD: IDL.Float64,\n    token1Standard: IDL.Text,\n    tvlUSD: IDL.Float64,\n    volumeUSDWeek: IDL.Float64,\n    txCount: IDL.Nat,\n    token1Decimals: IDL.Float64,\n    token0Standard: IDL.Text,\n    token0Symbol: IDL.Text,\n    volumeUSDChange: IDL.Float64,\n    tvlUSDChange: IDL.Float64,\n    token0Decimals: IDL.Float64,\n    token0Price: IDL.Float64,\n    token1Symbol: IDL.Text,\n    volumeUSDWeekChange: IDL.Float64,\n  });\n  const _TransactionType = IDL.Variant({\n    fee: IDL.Null,\n    burn: IDL.Null,\n    claim: IDL.Null,\n    mint: IDL.Null,\n    swap: IDL.Null,\n    addLiquidity: IDL.Null,\n    removeLiquidity: IDL.Null,\n    refreshIncome: IDL.Null,\n    transfer: IDL.Null,\n    collect: IDL.Null,\n  });\n  const TransactionsType = IDL.Record({\n    to: IDL.Text,\n    action: _TransactionType,\n    token0Id: IDL.Text,\n    token1Id: IDL.Text,\n    liquidityTotal: IDL.Nat,\n    from: IDL.Text,\n    exchangePrice: IDL.Float64,\n    hash: IDL.Text,\n    tick: IDL.Int,\n    token1Price: IDL.Float64,\n    recipient: IDL.Text,\n    token0ChangeAmount: IDL.Float64,\n    sender: IDL.Text,\n    exchangeRate: IDL.Float64,\n    liquidityChange: IDL.Nat,\n    token1Standard: IDL.Text,\n    token0Fee: IDL.Float64,\n    token1Fee: IDL.Float64,\n    timestamp: IDL.Int,\n    token1ChangeAmount: IDL.Float64,\n    token1Decimals: IDL.Float64,\n    token0Standard: IDL.Text,\n    amountUSD: IDL.Float64,\n    amountToken0: IDL.Float64,\n    amountToken1: IDL.Float64,\n    poolFee: IDL.Nat,\n    token0Symbol: IDL.Text,\n    token0Decimals: IDL.Float64,\n    token0Price: IDL.Float64,\n    token1Symbol: IDL.Text,\n    poolId: IDL.Text,\n  });\n  const PublicSwapChartDayData = IDL.Record({\n    id: IDL.Int,\n    feeUSD: IDL.Float64,\n    volumeUSD: IDL.Float64,\n    tvlUSD: IDL.Float64,\n    timestamp: IDL.Int,\n    txCount: IDL.Int,\n  });\n  return IDL.Service({\n    cycleAvailable: IDL.Func([], [NatResult], []),\n    cycleBalance: IDL.Func([], [NatResult], []),\n    getAllPools: IDL.Func([IDL.Opt(IDL.Nat)], [IDL.Vec(PublicPoolOverView)], [\"query\"]),\n    getAllTransactions: IDL.Func([IDL.Nat, IDL.Nat], [IDL.Vec(TransactionsType)], [\"query\"]),\n    getPool: IDL.Func([IDL.Text], [PublicPoolOverView], [\"query\"]),\n    getPoolChartData: IDL.Func([IDL.Text, IDL.Nat, IDL.Nat], [IDL.Vec(PublicSwapChartDayData)], [\"query\"]),\n    getPoolTransactions: IDL.Func([IDL.Text, IDL.Nat, IDL.Nat], [IDL.Vec(TransactionsType)], [\"query\"]),\n    getRollIndex: IDL.Func([], [IDL.Nat], [\"query\"]),\n    getTvlRecord: IDL.Func([], [IDL.Text], []),\n    reset: IDL.Func([], [], []),\n    resetNowTimeTVL: IDL.Func([], [], []),\n    rollBackData: IDL.Func([IDL.Vec(TransactionsType)], [], []),\n    saveTransactions: IDL.Func([TransactionsType, IDL.Bool], [], []),\n  });\n};\n","import { actor } from \"@w2e/actor\";\nimport { Identity } from \"types/index\";\n\nimport { _SERVICE as SWAP_POSITION_SERVICE } from \"candid/swap-v2/SwapPositionManager\";\nimport { idlFactory as SwapPositionInterface } from \"candid/swap-v2/SwapPositionManager.did\";\nimport { _SERVICE as V1SWAP_POSITION_SERVICE } from \"candid/swap-v1/SwapPositionManager\";\nimport { idlFactory as V1SwapPositionInterface } from \"candid/swap-v1/SwapPositionManager.did\";\n\nimport { _SERVICE as SWAP_FACTORY_SERVICE } from \"candid/swap-v2/SwapFactory\";\nimport { idlFactory as SwapFactoryInterface } from \"candid/swap-v2/SwapFactory.did\";\n\nimport { _SERVICE as SWAP_ROUTER_SERVICE } from \"candid/swap-v2/SwapRouter\";\nimport { idlFactory as SwapRouterInterface } from \"candid/swap-v2/SwapRouter.did\";\n\nimport { _SERVICE as SWAP_POOL_SERVICE } from \"candid/swap-v2/SwapPool\";\nimport { idlFactory as SwapPoolInterface } from \"candid/swap-v2/SwapPool.did\";\n\nimport { _SERVICE as BaseDataStructure } from \"candid/swap-v2/InfoBase\";\nimport { idlFactory as BaseDataStructureIdl } from \"candid/swap-v2/InfoBase.did\";\n\nimport { _SERVICE as INFO_POOLS_SERVICE } from \"candid/swap-v2/InfoPools\";\nimport { idlFactory as InfoPoolsInterface } from \"candid/swap-v2/InfoPools.did\";\n\nimport { _SERVICE as SWAP_NFT_SERVICE } from \"candid/swap-v2/SwapNFT\";\nimport { idlFactory as SwapNFTInterface } from \"candid/swap-v2/SwapNFT.did\";\n\nimport ids from \"constants/swap-v2-ids.json\";\n\nexport const swapPositionManager = (identity?: Identity) =>\n  actor.create<SWAP_POSITION_SERVICE>({\n    canisterId: ids.SwapPositionManager.ic,\n    identity,\n    idlFactory: SwapPositionInterface,\n  });\n\nexport const swapFactory = (identity?: Identity) =>\n  actor.create<SWAP_FACTORY_SERVICE>({\n    canisterId: ids.SwapFactory.ic,\n    identity,\n    idlFactory: SwapFactoryInterface,\n  });\n\nexport const swapRouter = (identity?: Identity) =>\n  actor.create<SWAP_ROUTER_SERVICE>({\n    canisterId: ids.SwapRouter.ic,\n    identity,\n    idlFactory: SwapRouterInterface,\n  });\n\nexport const v2SwapNFT = (identity?: Identity) =>\n  actor.create<SWAP_NFT_SERVICE>({\n    identity,\n    canisterId: ids.V3SwapNFTCanister.ic,\n    idlFactory: SwapNFTInterface,\n  });\n\nexport const swapRecord = (identity?: Identity) =>\n  actor.create<BaseDataStructure>({\n    canisterId: ids.BaseDataStructure.ic,\n    identity,\n    idlFactory: BaseDataStructureIdl,\n  });\n\nexport const swapPool = (canisterId: string, identity?: Identity) =>\n  actor.create<SWAP_POOL_SERVICE>({\n    identity,\n    canisterId,\n    idlFactory: SwapPoolInterface,\n  });\n\nexport const swapGraphPool = () =>\n  actor.create<INFO_POOLS_SERVICE>({\n    canisterId: ids.Pools.ic,\n    idlFactory: InfoPoolsInterface,\n  });\n\nexport const swapPositionManagerV1 = (identity?: Identity) =>\n  actor.create<V1SWAP_POSITION_SERVICE>({\n    canisterId: \"eknb4-raaaa-aaaan-qanpa-cai\",\n    identity,\n    idlFactory: V1SwapPositionInterface,\n  });\n\nexport const swapFactoryV1 = (identity?: Identity) =>\n  actor.create<SWAP_FACTORY_SERVICE>({\n    identity,\n    canisterId: \"eepmu-kqaaa-aaaan-qanoa-cai\",\n    idlFactory: SwapFactoryInterface,\n  });\n"],"names":["idlFactory","_ref","IDL","BoolResult__1","Variant","ok","Bool","err","Text","ResultAmount","Record","amount0","Nat","amount1","ResponseResult_1","CollectParams","tokenId","internalCall","recipient","Principal","amount0Max","amount1Max","Address","ResponseResult_9","NatResult","DecreaseLiquidityParams","liquidity","amount0Min","amount1Min","deadline","ResponseResult_10","Vec","Address__1","PoolKey","fee","token0","token1","TVLResult","token0TVL","token1TVL","ResponseResult_8","Position","tickUpper","Int","tokensOwed0","tokensOwed1","operator","feeGrowthInside1LastX128","feeGrowthInside0LastX128","nonce","tickLower","poolId","TickLiquidityInfo","tickIndex","price0Decimal","liquidityNet","price0","price1","liquidityGross","price1Decimal","ResponseResult_7","VolumeMapType","tokenA","tokenB","ResponseResult_6","IncreaseLiquidityParams","amount0Desired","amount1Desired","LiquidityType","ResponseResult_5","QueryPositionResult","ResponseResult_2","MintParams","MintResult","ResponseResult_4","ResponseResult_3","BoolResult","ResponseResult","Service","addAdmin","Func","burn","collect","collectInInvalidPosition","createAndInitializePoolIfNecessary","cycleAvailable","cycleBalance","decreaseLiquidity","decreaseLiquidityInInvalidPosition","getAdminList","getApproved","getBaseDataStructureCanister","getPoolTVL","getPositionByPoolAddress","getTickInfos","getTotalVolume","increaseLiquidity","invalidPositions","mint","ownerInvalidTokens","ownerTokens","positions","refreshIncome","refreshInvalidIncome","removeAdmin","removeSwapPool","setBaseDataStructureCanister","setLockServerCanisterId","setSwapNFTCanisterId","swapNFTCanisterId","tokenURI","transfer","Pool","ticks","tickCurrent","sqrtRatioX96","PrincipalText","TextResult","TradeOverview","tvl","tradeUserNum","volume","tradeSymbolNum","PoolInfo","pool","balance0","balance1","Page","content","offset","limit","totalElements","_getPool","createPool","enableFeeAmount","getInvalidPool","getOverview","getPool","getPoolIds","getPoolList","getPoolListByPage","getPools","removePool","AmountAndCycleResult","cycles","PositionInfo","SharedSlot0","observationCardinalityNext","sqrtPriceX96","observationIndex","feeProtocol","tick","unlocked","observationCardinality","Type__3","InitParameters","tickSpacing","token1Standard","factory","token0Standard","canisterId","Type__2","Type","Type__1","PaymentEntry","token","value","tokenStandard","payer","SnapshotCumulativesInsideResult","tickCumulativeInside","secondsPerLiquidityInsideX128","secondsInside","SwapResult","feeAmount","balance","claimSwapFeeRepurchase","collectProtocol","flash","get24HVolume","getPosition","getSlot0","getStandard","getSwapFeeRepurchase","getSwapTokenMap","getTickSpacing","getWalletAddress","increaseObservationCardinalityNext","info","infoWithNoBalance","init","initAdminList","initialize","lockPool","quoter","rollBackData","rollBackTransfer","setFeeProtocol","setSwapFeeHolderCanisterId","setSwapFeeRepurchase","setTransFeeCache","snapshotCumulativesInside","swap","transFee","transFee0","transFee0Cache","transFee1","transFee1Cache","transFeeCache","unlockPool","PublicPoolOverView","id","token0Id","token1Id","totalVolumeUSD","Float64","sqrtPrice","tvlToken0","tvlToken1","token1Price","feeTier","volumeUSD","tvlUSD","volumeUSDWeek","txCount","token1Decimals","token0Symbol","volumeUSDChange","tvlUSDChange","token0Decimals","token0Price","token1Symbol","volumeUSDWeekChange","_TransactionType","Null","claim","addLiquidity","removeLiquidity","TransactionsType","to","action","liquidityTotal","from","exchangePrice","hash","token0ChangeAmount","sender","exchangeRate","liquidityChange","token0Fee","token1Fee","timestamp","token1ChangeAmount","amountUSD","amountToken0","amountToken1","poolFee","PublicSwapChartDayData","feeUSD","getAllPools","Opt","getAllTransactions","getPoolChartData","getPoolTransactions","getRollIndex","getTvlRecord","reset","resetNowTimeTVL","saveTransactions","swapPositionManager","identity","actor","create","ids","SwapPositionInterface","swapFactory","SwapFactoryInterface","swapPool","SwapPoolInterface","swapGraphPool","InfoPoolsInterface","swapPositionManagerV1","V1SwapPositionInterface","swapFactoryV1"],"sourceRoot":""}
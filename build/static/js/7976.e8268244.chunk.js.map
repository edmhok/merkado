{"version":3,"file":"static/js/7976.e8268244.chunk.js","mappings":"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","sources":["components/ConnectWallet.tsx","components/MaxButton.tsx","components/qrcode/index.tsx","assets/icons/Copy.svg","components/Wallet/WalletAccount.tsx","components/Wallet/context.ts","components/TokenTransfer/index.tsx","components/XTCTopup/index.tsx","hooks/token/dip20.ts","components/Wallet/NFIDTransfer.tsx","components/Wallet/Receive.tsx","components/Wallet/TokenListTable.tsx","assets/icons/add.svg","components/Wallet/AddToken/modal.tsx","components/Wallet/AddToken/index.tsx","components/Wallet/PageToggle.tsx","components/Wallet/TokenListHeader.tsx","components/Wallet/TokenList.tsx","views/wallet/index.tsx","../node_modules/.pnpm/@mui+icons-material@5.5.0_@mui+material@5.15.20_@types+react@17.0.2_react@17.0.2/node_modules/@mui/icons-material/Add.js","../node_modules/.pnpm/@mui+icons-material@5.5.0_@mui+material@5.15.20_@types+react@17.0.2_react@17.0.2/node_modules/@mui/icons-material/HorizontalRule.js","../packages/utils/src/isValidAccount.ts"],"sourcesContent":["import { Grid, Box, Typography, Button } from \"@mui/material\";\nimport { MainCard } from \"components/index\";\nimport NoData from \"components/no-data\";\nimport { useWalletConnectorManager } from \"store/auth/hooks\";\nimport { Trans } from \"@lingui/macro\";\n\nexport default function ConnectWallet() {\n  const [, walletManager] = useWalletConnectorManager();\n\n  return (\n    <Grid container justifyContent=\"center\">\n      <Box sx={{ maxWidth: \"1400px\", width: \"100%\" }}>\n        <MainCard level={3}>\n          <Grid container alignItems=\"center\" flexDirection=\"column\" sx={{ height: \"250px\" }}>\n            <NoData />\n            <Typography color=\"text.primary\">\n              <Trans>Connect wallet to view</Trans>\n            </Typography>\n            <Button\n              variant=\"contained\"\n              onClick={() => walletManager(true)}\n              sx={{ width: \"100%\", maxWidth: \"522px\", marginTop: \"23px\" }}\n              size=\"large\"\n            >\n              <Trans>Connect Wallet</Trans>\n            </Button>\n          </Grid>\n        </MainCard>\n      </Box>\n    </Grid>\n  );\n}\n","import { Typography, TypographyProps } from \"@mui/material\";\nimport { useTheme } from \"@mui/styles\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Trans } from \"@lingui/macro\";\n\nexport default function MaxButton(props: TypographyProps) {\n  const theme = useTheme() as Theme;\n\n  return (\n    <Typography\n      {...props}\n      sx={{\n        padding: \"1px 3px\",\n        cursor: \"pointer\",\n        borderRadius: \"2px\",\n        backgroundColor: theme.colors.secondaryMain,\n        color: \"#ffffff\",\n        fontSize: \"12px\",\n        ...(props.sx ?? {}),\n      }}\n    >\n      <Trans>Max</Trans>\n    </Typography>\n  );\n}\n","import QRCode from \"qrcode.react\";\n\nexport interface QRCodeProps {\n  width?: number;\n  height?: number;\n  value: string;\n}\n\nexport default ({ value, ...props }: QRCodeProps) => {\n  return <QRCode value={value} {...props} />;\n};\n","var _path, _path2;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgCopy(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 12,\n    viewBox: \"0 0 12 12\",\n    fill: \"currentColor\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M8 4H2V10H8V4ZM2 3C1.44772 3 1 3.44772 1 4V10C1 10.5523 1.44772 11 2 11H8C8.55228 11 9 10.5523 9 10V4C9 3.44772 8.55228 3 8 3H2Z\",\n    fill: \"currentColor\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M10 9L10 2L3 2L3 0.999999L10 1C10.5523 1 11 1.44772 11 2L11 9L10 9Z\",\n    fill: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopy);\nexport default __webpack_public_path__ + \"static/media/Copy.351d8604b102850f77eb6e2d05b49bb6.svg\";\nexport { ForwardRef as ReactComponent };","import { useRef } from \"react\";\nimport { Box, Grid, Typography } from \"@mui/material\";\n// import { formatDollarAmount } from \"@w2e/utils\";\n// import { Trans } from \"@lingui/macro\";\n// import { useSuccessTip } from \"hooks/useTips\";\n// import { useICPPrice } from \"hooks/useUSDPrice\";\nimport { ReactComponent as CopyIcon } from \"assets/icons/Copy.svg\";\nimport Copy, { CopyRef } from \"components/Copy\";\n// import { ReactComponent as RefreshIcon } from \"assets/icons/refresh.svg\";\n// import WalletContext from \"./context\";\n\nexport interface AddressWrapperProps {\n  address: string | undefined;\n  label: string;\n}\n\nexport function AddressWrapper({ address, label }: AddressWrapperProps) {\n  const copyRef = useRef<CopyRef>(null);\n\n  const handleCopy = () => {\n    if (copyRef) {\n      copyRef?.current?.copy();\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        maxWidth: \"286px\",\n        borderRadius: \"8px\",\n        padding: \"5px\",\n        border: \"1px solid #29314F\",\n        height: \"fit-content\",\n        \"@media(max-width: 640px)\": {\n          maxWidth: \"100%\",\n        },\n      }}\n    >\n      <Box\n        sx={{\n          width: \"70px\",\n          height: \"20px\",\n          borderRadius: \"30px\",\n          background: \"#29314F\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Typography sx={{ fontSize: \"12px\", transform: \"scale(0.9)\" }}>{label}</Typography>\n      </Box>\n\n      <Box sx={{ margin: \"8px 0 0 0\", wordBreak: \"break-all\" }}>\n        <Typography\n          sx={{ fontSize: \"10px\", whiteSpace: \"break-spaces\", cursor: \"pointer\", userSelect: \"none\" }}\n          component=\"span\"\n          onClick={handleCopy}\n        >\n          {address}\n        </Typography>\n        <Box component=\"span\" sx={{ cursor: \"pointer\", margin: \"0 0 0 4px\", color: \"#5669DC\" }} onClick={handleCopy}>\n          <CopyIcon />\n        </Box>\n      </Box>\n\n      <Copy content={address ?? \"\"} hide ref={copyRef} />\n    </Box>\n  );\n}\n\nexport default function WalletAccount() {\n  // const icpPrice = useICPPrice();\n\n  // const [openSuccessTip] = useSuccessTip();\n\n  // const {\n  //   refreshTotalBalance,\n  //   setRefreshTotalBalance,\n  //   refreshCounter,\n  //   setRefreshCounter,\n  //   totalValue,\n  //   totalUSDBeforeChange,\n  // } = useContext(WalletContext);\n\n  // const useTotalICPValue = useMemo(() => {\n  //   if (icpPrice) return totalValue.dividedBy(icpPrice);\n  //   return undefined;\n  // }, [totalValue, icpPrice]);\n\n  // const usdChange = useMemo(() => {\n  //   if (totalValue.isEqualTo(0) || totalUSDBeforeChange.isEqualTo(0)) return undefined;\n  //   return `${totalValue.minus(totalUSDBeforeChange).dividedBy(totalUSDBeforeChange).multipliedBy(100).toFixed(2)}%`;\n  // }, [totalUSDBeforeChange, totalValue]);\n\n  // const usdChangeType = usdChange && usdChange.includes(\"-\") ? \"down\" : \"up\";\n  // const USDChangeColor = usdChangeType === \"up\" ? \"#54C081\" : \"#D3625B\";\n\n  // const handleRefreshBalance = () => {\n  //   if (setRefreshTotalBalance) setRefreshTotalBalance(!refreshTotalBalance);\n  //   setRefreshCounter(refreshCounter + 1);\n  //   openSuccessTip(\"Refresh Success\");\n  // };\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        width: \"100%\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        padding: \"0 0 30px 0\",\n        borderBottom: \"1px solid #29314F\",\n        \"@media(max-width: 286px)\": {\n          gap: \"20px 0\",\n        },\n      }}\n    >\n      {/* <Box sx={{ paddingBottom: \"10px\" }}>\n        <Box sx={{ display: \"flex\", gap: \"0 8px\", alignItems: \"center\" }}>\n          <Typography sx={{ width: \"100%\", \"@media(max-width: 640px)\": { textAlign: \"center\" } }}>\n            <Trans>Wallet Balance</Trans>\n          </Typography>\n\n          <RefreshIcon style={{ cursor: \"pointer\" }} onClick={handleRefreshBalance} />\n        </Box>\n\n        <Box sx={{ margin: \"10px 0 0 0\" }}>\n          <Typography component=\"span\" sx={{ fontSize: \"32px\", fontWeight: 600 }} color=\"text.primary\">\n            ≈{formatDollarAmount(totalValue.toString(), 2)}\n            {totalValue && ( // Conditionally render Peso amount\n              <>\n                &nbsp;/&nbsp;\n                ≈{formatPesoAmount(totalValue.toString(), 2)}\n              </>\n            )}\n          </Typography>\n        </Box>\n\n        <Box sx={{ margin: \"6px 0 0 0\", display: \"flex\", gap: \"0 8px\" }}>\n          <Typography>≈{useTotalICPValue ? useTotalICPValue.toFormat(4) : 0}&nbsp;ICP</Typography>\n          <Typography sx={{ color: USDChangeColor }} component=\"span\">\n            {usdChange ? `${usdChangeType === \"down\" ? \"\" : \"+\"}${usdChange}` : \"--\"}\n          </Typography>\n        </Box>\n      </Box> */}\n\n      <Grid container justifyContent=\"center\" sx={{ gap: \"5px\" }}>\n        <Typography sx={{\n          width: \"100%\",\n          \"@media(max-width: 640px)\": { textAlign: \"center\" }\n        }}>Add our Canister Token under ICRC-2\n        </Typography>\n        <Box\n          sx={{\n            minWidth: \"100px\",\n          }}\n        >\n          <AddressWrapper\n            address=\"n6j6v-cqaaa-aaaam-acjma-cai\"\n            label=\"W2E\"\n          />\n        </Box>\n        <Box\n          sx={{\n            minWidth: \"100px\",\n          }}\n        >\n          <AddressWrapper\n            address=\"mbbnc-biaaa-aaaam-acjiq-cai\"\n            label=\"wPlastic\"\n          />\n        </Box>\n        <Box\n          sx={{\n            minWidth: \"100px\",\n          }}\n        >\n          <AddressWrapper\n            address=\"mpdak-2yaaa-aaaam-acjjq-cai\"\n            label=\"wPaper\"\n          />\n        </Box>\n        <Box\n          sx={{\n            minWidth: \"100px\",\n          }}\n        >\n          <AddressWrapper\n            address=\"mug4p-aaaaa-aaaam-acjla-cai\"\n            label=\"wOrganic\"\n          />\n        </Box>\n        <Box\n          sx={{\n            minWidth: \"100px\",\n          }}\n        >\n          <AddressWrapper\n            address=\"m2erh-3qaaa-aaaam-acjka-cai\"\n            label=\"wMetal\"\n          />\n        </Box>\n        <Box\n          sx={{\n            minWidth: \"100px\",\n          }}\n        >\n          <AddressWrapper\n            address=\"m5fxt-wiaaa-aaaam-acjkq-cai\"\n            label=\"wGlass\"\n          />\n        </Box>\n        <Box\n          sx={{\n            minWidth: \"100px\",\n          }}\n        >\n          <AddressWrapper\n            address=\"mth23-nyaaa-aaaam-acjlq-cai\"\n            label=\"eWaste\"\n          />\n        </Box>\n      </Grid>\n\n    </Box>\n  );\n}\n","import { createContext } from \"react\";\nimport BigNumber from \"bignumber.js\";\n\nexport type TokenBalance = { [tokenId: string]: BigNumber };\n\nexport type Page = \"token\";\n\nexport interface WalletContextProps {\n  refreshTotalBalance?: boolean;\n  setRefreshTotalBalance?: (refreshTotalBalance: boolean) => void;\n  refreshCounter: number;\n  setRefreshCounter: (refreshCounter: number) => void;\n  totalValue: BigNumber;\n  setTotalValue: (tokenId: string, value: BigNumber) => void;\n  transferTo: string;\n  setTransferTo: (transferTo: string) => void;\n  transferAmount: BigNumber;\n  setTransferAmount: (transferAmount: BigNumber) => void;\n  page: Page;\n  setPage: (page: Page) => void;\n  totalUSDBeforeChange: BigNumber;\n  setTotalUSDBeforeChange: (tokenId: string, value: BigNumber) => void;\n}\n\nexport default createContext<WalletContextProps>({} as WalletContextProps);\n","import React, { useState, useContext, useMemo } from \"react\";\nimport {\n  parseTokenAmount,\n  formatTokenAmount,\n  isValidAccount,\n  isValidPrincipal,\n  toSignificantWithGroupSeparator,\n} from \"@w2e/utils\";\nimport BigNumber from \"bignumber.js\";\nimport { useErrorTip, useSuccessTip } from \"hooks/useTips\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Button, Grid, Typography, Box, InputAdornment } from \"@mui/material\";\nimport Identity, { CallbackProps, SubmitLoadingProps } from \"components/Identity/index\";\nimport { ICP, W2E } from \"constants/tokens\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { tokenTransfer } from \"hooks/token/calls\";\nimport { useTokenBalance } from \"hooks/token/useTokenBalance\";\nimport { getLocaleMessage } from \"locales/services\";\nimport { Theme } from \"@mui/material/styles\";\nimport { TokenInfo } from \"types/token\";\nimport { Identity as CallIdentity } from \"types/index\";\nimport { useAccountPrincipalString, useAccount, useAccountPrincipal } from \"store/auth/hooks\";\nimport WalletContext from \"components/Wallet/context\";\nimport { Modal, FilledTextField, NumberFilledTextField } from \"components/index\";\nimport { Principal } from \"@dfinity/principal\";\nimport MaxButton from \"components/MaxButton\";\nimport { useUSDPriceById } from \"hooks/useUSDPrice\";\n\n// import QrCodeScannerIcon from '@mui/icons-material/QrCodeScanner';\n// import QrReader from \"./QrReader\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return {\n    warningText: {\n      color: theme.palette.warning.dark,\n    },\n  };\n});\n\nexport type Values = {\n  to: string;\n  weight: string;\n  amount: number;\n};\n\nfunction usePrincipalStandard(tokenId: string, standard: string) {\n  return (standard.includes(\"DIP20\") || standard.includes(\"ICRC\")) && tokenId !== ICP.address;\n}\n\nfunction useAccountStandard(tokenId: string, standard: string) {\n  return !usePrincipalStandard(tokenId, standard);\n}\n\nexport interface TransferModalProps {\n  open: boolean;\n  onClose: () => void;\n  onTransferSuccess?: () => void;\n  token: TokenInfo;\n  transferTo?: string;\n}\n\nexport default function TransferModal({ open, onClose, onTransferSuccess, token, transferTo }: TransferModalProps) {\n  const [principalFromState] = React.useState(\"\");\n  // const [qrReaderOpen, setQrReaderOpen] = useState(false);\n  // const [newAccount, setNewAccount] = useState<string | null>(null);\n\n  const classes = useStyles();\n  const account = useAccount();\n  const principalString = useAccountPrincipalString();\n  const principal = useAccountPrincipal() || principalFromState;\n  const [openErrorTip] = useErrorTip();\n  const [openSuccessTip] = useSuccessTip();\n  const { refreshTotalBalance, setRefreshTotalBalance } = useContext(WalletContext);\n  const { result: balance } = useTokenBalance(token.canisterId, principal);\n  const tokenUSDPrice = useUSDPriceById(token.canisterId);\n\n  const initialValues = {\n    to: transferTo ?? \"\",\n    weight: \"\",\n    amount: 0,\n  };\n\n  const [values, setValues] = useState<Values>(initialValues);\n\n  const handleFieldChange = (value: string, field: string) => {\n    setValues({\n      ...values,\n      [field]: value,\n    });\n  };\n\n  // const handleQrResult = (qrValue: string, to: string) => {\n  //   const p = qrValue as any;\n  //   if (p?.text) {\n  //     setPrincipalFromState(p.text);\n  //     handleFieldChange(p.text, to);\n  //   }\n  //   return newAccount;\n  // };\n\n  const getErrorMessage = () => {\n    if (!values.to) return t`Enter transfer to`;\n\n    if (usePrincipalStandard(token.canisterId, token.standardType)) {\n      try {\n        Principal.fromText(values.to);\n      } catch (error) {\n        return t`Invalid principal ID`;\n      }\n    } else if (!isValidAccount(values.to) && !isValidPrincipal(values.to)) return t`Invalid account ID or principal ID`;\n\n    if (!values.amount) return t`Enter an amount`;\n    if (\n      values.amount &&\n      new BigNumber(values.amount ?? 0).isGreaterThan(parseTokenAmount(balance ?? 0, token.decimals))\n    )\n      return t`Insufficient balance`;\n    if (!new BigNumber(values.amount).minus(parseTokenAmount(token.transFee, token.decimals)).isGreaterThan(0))\n      return t`Must be greater than trans fee`;\n\n    return undefined;\n  };\n\n  const handleSubmit = async (_identity: CallIdentity, { loading, closeLoading }: SubmitLoadingProps) => {\n    try {\n      if (loading || !account) return;\n\n      // Calculate the actual transfer amount considering weight\n      const weight = new BigNumber(values.weight ?? 0);\n      const amount = new BigNumber(values.amount ?? 0).multipliedBy(weight);\n\n      const actualTransferAmount = amount.minus(parseTokenAmount(token.transFee, token.decimals));\n\n      if (actualTransferAmount.isLessThanOrEqualTo(0)) {\n        openErrorTip(t`Transfer amount must be greater than transaction fee.`);\n        return;\n      }\n\n      const { status, message } = await tokenTransfer({\n        canisterId: token.canisterId.toString(),\n        to: values.to,\n        amount: formatTokenAmount(\n          new BigNumber(values.amount).minus(parseTokenAmount(token.transFee, token.decimals)),\n          token.decimals,\n        ),\n        from: account,\n        fee: token.transFee,\n        decimals: token.decimals,\n      });\n\n      if (status === \"ok\") {\n        openSuccessTip(t`Transferred successfully`);\n        setValues(initialValues);\n        if (onTransferSuccess) onTransferSuccess();\n        if (token.canisterId.toString() === ICP.address || token.canisterId.toString() === W2E.address) {\n          if (setRefreshTotalBalance) setRefreshTotalBalance(!refreshTotalBalance);\n        }\n      } else {\n        openErrorTip(getLocaleMessage(message) ?? t`Failed to transfer`);\n      }\n\n      closeLoading();\n    } catch (error) {\n      console.error(error);\n      closeLoading();\n    }\n  };\n\n  const actualTransferAmount = useMemo(() => {\n    const weight = new BigNumber(values.weight ?? 0);\n    const amount = new BigNumber(values.amount ?? 0).multipliedBy(weight);\n    return amount.isGreaterThan(0) ? amount.minus(parseTokenAmount(token.transFee, token.decimals)).toString() : \"0\";\n  }, [values, token]);\n\n  const addressHelpText = () => {\n    if (\n      (usePrincipalStandard(token.canisterId, token.standardType) && principalString === values.to) ||\n      (useAccountStandard(token.canisterId, token.standardType) && account === values.to) ||\n      (useAccountStandard(token.canisterId, token.standardType) &&\n        isValidPrincipal(values.to) &&\n        principalString === values.to)\n    ) {\n      return (\n        <span className={classes.warningText}>\n          <Trans>Be careful, you are transferring tokens to your own address!</Trans>\n        </span>\n      );\n    }\n  };\n\n  const errorMessage = getErrorMessage();\n\n  const handleMax = (event: React.MouseEvent<HTMLParagraphElement>) => {\n    event.stopPropagation();\n\n    if (balance) {\n      handleFieldChange(parseTokenAmount(balance, token.decimals).toString(), \"amount\");\n    }\n  };\n\n  return (\n    <Modal open={open} onClose={onClose} title={t`Transfer`}>\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: \"24px 0\" }}>\n        <FilledTextField value={token.symbol} fullWidth />\n        <FilledTextField\n          value={values.to} // Use principal if available, else use 'to' field value\n          placeholder={\n            usePrincipalStandard(token.canisterId, token.standardType)\n              ? t`Enter the principal ID`\n              : t`Enter the account ID or principal ID`\n          }\n          onChange={(value: string) => handleFieldChange(value, \"to\")}\n          helperText={addressHelpText()}\n          fullWidth\n          autoComplete=\"To\"\n          multiline\n        />\n\n        {/* {!qrReaderOpen && (\n          <FilledTextField\n            value={values.to}\n            placeholder={\n              usePrincipalStandard(token.canisterId, token.standardType)\n                ? t`Scan the Receive QR to get the principal ID`\n                : t`Enter the account ID or principal ID`\n            }\n            onChange={(value: string) => handleQrResult(value, \"to\")}\n            helperText={addressHelpText()}\n            fullWidth\n            autoComplete=\"To\"\n            multiline\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={() => setQrReaderOpen(true)}>\n                    <QrCodeScannerIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n        )}\n        <QrReader\n          qrView={qrReaderOpen}\n          setQRview={setQrReaderOpen}\n          onSuccess={(value: string) => {\n            setNewAccount(value);\n            setQrReaderOpen(false)\n            navigator.clipboard.writeText(value);\n          }}\n        /> */}\n\n        <NumberFilledTextField\n          placeholder=\"Enter weight in kilogram\"\n          value={values.weight}\n          onChange={(value: string) => handleFieldChange(value, \"weight\")}\n          fullWidth\n          numericProps={{\n            allowNegative: false,\n          }}\n          autoComplete=\"off\"\n        />\n        <NumberFilledTextField\n          placeholder=\"Enter the amount\"\n          value={values.amount}\n          onChange={(value: string) => handleFieldChange(value, \"amount\")}\n          fullWidth\n          numericProps={{\n            allowNegative: false,\n            decimalScale: token.decimals,\n          }}\n          autoComplete=\"off\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <Typography color=\"text.primary\">\n                  {tokenUSDPrice && values.amount\n                    ? `~$${toSignificantWithGroupSeparator(\n                      new BigNumber(values.amount).multipliedBy(tokenUSDPrice).toString(),\n                      4,\n                    )}`\n                    : \"--\"}\n                </Typography>\n              </InputAdornment>\n            ),\n          }}\n        />\n\n        <Grid container alignItems=\"center\">\n          <Typography>\n            <Trans>\n              Balance:{\" \"}\n              {`${balance\n                ? new BigNumber(\n                  parseTokenAmount(balance, token.decimals).toFixed(token.decimals > 8 ? 8 : token.decimals),\n                ).toFormat()\n                : \"--\"\n                }`}\n            </Trans>\n          </Typography>\n          <MaxButton\n            sx={{\n              marginLeft: \"6px\",\n            }}\n            onClick={handleMax}\n          />\n        </Grid>\n        <Typography>\n          <Trans>Fee:</Trans> {parseTokenAmount(token?.transFee?.toString(), token.decimals).toFormat()}\n          &nbsp;{token.symbol}&nbsp;(\n          {tokenUSDPrice && token\n            ? `$${toSignificantWithGroupSeparator(\n              parseTokenAmount(token.transFee.toString(), token.decimals).multipliedBy(tokenUSDPrice).toString(),\n              4,\n            )}`\n            : \"--\"}\n          )\n        </Typography>\n        <Typography>\n          <Trans>Actually: </Trans> {toSignificantWithGroupSeparator(actualTransferAmount, 18)}\n          &nbsp;{token.symbol}&nbsp;(\n          {tokenUSDPrice && token\n            ? `$${toSignificantWithGroupSeparator(\n              new BigNumber(actualTransferAmount).multipliedBy(tokenUSDPrice).toString(),\n              4,\n            )}`\n            : \"--\"}\n          )\n        </Typography>\n        <Typography color=\"text.warning\">\n          <Trans>Please ensure that the receiving address supports this Token/NFT!</Trans>\n        </Typography>\n        <Identity onSubmit={handleSubmit} fullScreenLoading>\n          {({ submit, loading }: CallbackProps) => (\n            <Button\n              variant=\"contained\"\n              fullWidth\n              color=\"primary\"\n              size=\"large\"\n              disabled={loading || !!errorMessage}\n              onClick={submit}\n            >\n              {errorMessage || (!loading ? <Trans>Confirm</Trans> : <CircularProgress size={26} color=\"inherit\" />)}\n            </Button>\n          )}\n        </Identity>\n      </Box>\n    </Modal>\n  );\n}\n","import { useState } from \"react\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { FilledTextField, Modal, TextFieldNumberComponent, MaxButton } from \"components/index\";\nimport { Box, Button, Typography, Grid } from \"@mui/material\";\nimport { useTokenBalance } from \"hooks/token/useTokenBalance\";\nimport { useAccountPrincipal } from \"store/auth/hooks\";\nimport { XTC } from \"constants/tokens\";\nimport { useTokenInfo } from \"hooks/token/useTokenInfo\";\nimport { parseTokenAmount, formatTokenAmount, numberToString, isValidPrincipal } from \"@w2e/utils\";\nimport BigNumber from \"bignumber.js\";\nimport Identity, { CallbackProps, SubmitLoadingProps } from \"components/Identity\";\nimport { Identity as CallIdentity } from \"types/global\";\nimport { useTips, TIP_LOADING, TIP_SUCCESS, TIP_ERROR } from \"hooks/useTips\";\nimport { useXTCTopUp } from \"hooks/token/dip20\";\nimport { getLocaleMessage } from \"locales/services\";\nimport { ResultStatus } from \"constants/index\";\n\nexport interface XTCTopUpProps {\n  open: boolean;\n  onClose: () => void;\n  onTopUpSuccess?: () => void;\n}\n\nexport interface Values {\n  amount: string | number;\n  canisterId: string;\n}\n\nexport default function XTCTopUp({ open, onClose, onTopUpSuccess }: XTCTopUpProps) {\n  const principal = useAccountPrincipal();\n  const { result: token } = useTokenInfo(XTC.address);\n  const { result: balance, loading } = useTokenBalance(XTC.address, principal);\n\n  const defaultValues = {\n    canisterId: \"\",\n    amount: \"\",\n  };\n\n  const [values, setValues] = useState<Values>(defaultValues);\n  const [openTip, closeTip] = useTips();\n\n  const onFieldChange = (value: any, field: string) => {\n    setValues((prevState) => ({\n      ...prevState,\n      [field]: value,\n    }));\n  };\n\n  const XTCTopUp = useXTCTopUp();\n\n  const handleTopUp = async (identity: CallIdentity, { loading }: SubmitLoadingProps) => {\n    if (loading || !token) return;\n\n    onClose();\n    setValues(defaultValues);\n\n    const loadingTipKey = openTip(t`Top-up ${values.amount} XTC to canister ${values.canisterId}`, TIP_LOADING);\n\n    const { status, message } = await XTCTopUp({\n      identity,\n      canisterId: values.canisterId,\n      amount: BigInt(numberToString(formatTokenAmount(values.amount, token.decimals).minus(Number(token.transFee)))),\n    });\n\n    closeTip(loadingTipKey);\n\n    if (status === ResultStatus.OK) {\n      openTip(t`Top-up successfully`, TIP_SUCCESS);\n      if (onTopUpSuccess) onTopUpSuccess();\n    } else {\n      openTip(getLocaleMessage(message) ?? message, TIP_ERROR);\n    }\n  };\n\n  const handleMax = () => {\n    if (balance && token) {\n      setValues((prevState) => ({\n        ...prevState,\n        amount: parseTokenAmount(balance, token.decimals).toNumber(),\n      }));\n    }\n  };\n\n  let errorMessage = \"\";\n  if (\n    values.amount &&\n    token &&\n    new BigNumber(Number(values.amount)).isGreaterThan(parseTokenAmount(balance ?? 0, token.decimals))\n  )\n    errorMessage = t`Insufficient balance`;\n  if (!values.amount) errorMessage = t`Enter top-up XTC amount`;\n  if (values.canisterId && !isValidPrincipal(values.canisterId)) errorMessage = t`Invalid canister id`;\n  if (!values.canisterId) errorMessage = t`Enter top-up canister id`;\n\n  return (\n    <Modal open={open} title={t`Top-up a Canister by XTC`} onClose={onClose}>\n      <Box>\n        <FilledTextField\n          label={<Trans>Canister ID</Trans>}\n          onChange={(value) => onFieldChange(value, \"canisterId\")}\n          placeholder={t`Enter a canister ID`}\n        />\n      </Box>\n\n      <Box mt=\"20px\">\n        <FilledTextField\n          label={<Trans>Amount</Trans>}\n          value={values.amount}\n          onChange={(value) => onFieldChange(value, \"amount\")}\n          InputProps={{\n            inputComponent: TextFieldNumberComponent,\n            inputProps: {\n              allowNegative: false,\n              decimalScale: 4,\n              maxLength: 16,\n            },\n          }}\n          placeholder={t`Enter top-up amount`}\n        />\n      </Box>\n\n      <Grid container alignItems=\"center\" mt=\"12px\">\n        <Typography color=\"text.primary\" component=\"span\">\n          <Trans>Balance:</Trans>\n        </Typography>\n        &nbsp;\n        <Typography color=\"text.primary\" component=\"span\" sx={{ marginRight: \"4px\" }}>\n          {balance ? parseTokenAmount(balance, token?.decimals).toFormat() : loading ? \"--\" : 0}\n        </Typography>\n        <MaxButton onClick={handleMax} />\n      </Grid>\n\n      <Grid container alignItems=\"center\" mt=\"12px\">\n        <Typography color=\"text.primary\" component=\"span\">\n          <Trans>Fee:</Trans>\n        </Typography>\n        &nbsp;\n        <Typography color=\"text.primary\" component=\"span\">\n          {token ? parseTokenAmount(token.transFee, token?.decimals).toFormat() : 0}\n        </Typography>\n      </Grid>\n\n      <Box mt=\"40px\">\n        <Identity onSubmit={handleTopUp}>\n          {({ submit }: CallbackProps) => (\n            <Button size=\"large\" fullWidth variant=\"contained\" onClick={submit} disabled={!!errorMessage}>\n              {errorMessage || <Trans>Submit</Trans>}\n            </Button>\n          )}\n        </Identity>\n      </Box>\n    </Modal>\n  );\n}\n","import { useCallback } from \"react\";\nimport { xtc } from \"@w2e/actor\";\nimport { Identity as CallIdentity } from \"types/global\";\nimport { Principal } from \"@dfinity/principal\";\nimport { resultFormat } from \"@w2e/utils\";\n\nexport interface XTCTopUpProps {\n  canisterId: string;\n  amount: bigint | number;\n  identity: CallIdentity;\n}\n\nexport function useXTCTopUp() {\n  return useCallback(async ({ canisterId, amount, identity }: XTCTopUpProps) => {\n    return resultFormat<bigint>(\n      await (await xtc(identity)).burn({ canister_id: Principal.fromText(canisterId), amount: BigInt(amount) }),\n    );\n  }, []);\n}\n","import { useState, useContext } from \"react\";\nimport { Button, Grid, TextField, Typography } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { parseTokenAmount, isValidAccount } from \"@w2e/utils\";\nimport BigNumber from \"bignumber.js\";\nimport { ICP_TOKEN_INFO } from \"constants/tokens\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { useErrorTip, useSuccessTip } from \"hooks/useTips\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { getLocaleMessage } from \"locales/services\";\nimport Identity, { CallbackProps, SubmitLoadingProps } from \"components/Identity/index\";\nimport { Theme } from \"@mui/material/styles\";\nimport { TokenInfo } from \"types/token\";\nimport { Identity as CallIdentity } from \"types/index\";\nimport { useAccountPrincipalString, useAccount } from \"store/auth/hooks\";\nimport WalletContext from \"components/Wallet/context\";\nimport { Modal, NumberTextField } from \"components/index\";\nimport { Principal } from \"@dfinity/principal\";\nimport { NFIDRequestTransfer } from \"utils/connector/NF_ID\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return {\n    warningText: {\n      color: theme.palette.warning.dark,\n    },\n  };\n});\n\nexport type Values = {\n  to: string;\n  amount: string;\n};\n\nexport default function NFIDTransferModal({\n  open,\n  onClose,\n  onTransferSuccess,\n  token,\n}: {\n  open: boolean;\n  onClose: () => void;\n  onTransferSuccess?: () => void;\n  token: TokenInfo;\n}) {\n  const classes = useStyles();\n  const account = useAccount();\n  const principalString = useAccountPrincipalString();\n  const [openErrorTip] = useErrorTip();\n  const [openSuccessTip] = useSuccessTip();\n\n  const { refreshTotalBalance, setRefreshTotalBalance } = useContext(WalletContext);\n\n  const initialValues = {\n    to: \"\",\n    amount: \"\",\n  };\n\n  const [values, setValues] = useState<Values>(initialValues);\n\n  const handleFieldChange = (value: string, field: string) => {\n    setValues({\n      ...values,\n      [field]: value,\n    });\n  };\n\n  const getErrorMessage = () => {\n    if (!values.to) return t`Enter transfer to`;\n\n    if (token.standardType.includes(\"DIP20\")) {\n      try {\n        Principal.fromText(values.to);\n      } catch (error) {\n        return t`Invalid principal ID`;\n      }\n    } else if (!isValidAccount(values.to)) return t`Invalid account ID`;\n\n    if (!values.amount) return t`Enter an amount`;\n    if (!new BigNumber(values.amount).minus(parseTokenAmount(token.transFee, token.decimals)).isGreaterThan(0))\n      return t`Must be greater than trans fee`;\n  };\n\n  const handleSubmit = async (identity: CallIdentity, { loading, closeLoading }: SubmitLoadingProps) => {\n    try {\n      if (loading) return;\n\n      const result = await NFIDRequestTransfer({\n        to: values.to,\n        amount: Number(new BigNumber(values.amount).toFixed(8, BigNumber.ROUND_DOWN)),\n      });\n\n      if (result.status === \"SUCCESS\") {\n        openSuccessTip(t`Transferred successfully`);\n        setValues(initialValues);\n        if (onTransferSuccess) onTransferSuccess();\n        if (token.canisterId.toString() === ICP_TOKEN_INFO.canisterId) {\n          if (setRefreshTotalBalance) setRefreshTotalBalance(!refreshTotalBalance);\n        }\n      }\n\n      if (result.status === \"REJECTED\" || result.status === \"ERROR\") {\n        openErrorTip(getLocaleMessage(result.message) ?? t`Failed to transfer`);\n      }\n\n      closeLoading();\n    } catch (error) {\n      console.error(error);\n      closeLoading();\n    }\n  };\n\n  const balanceActuallyToAccount = () => {\n    const amount = new BigNumber(values.amount ?? 0).minus(parseTokenAmount(token.transFee, token.decimals));\n    return amount.isGreaterThan(0) ? amount.toFormat() : 0;\n  };\n\n  const addressHelpText = () => {\n    if (\n      (token.standardType.includes(\"DIP20\") && principalString === values.to) ||\n      (!token.standardType.includes(\"DIP20\") && account === values.to)\n    ) {\n      return (\n        <span className={classes.warningText}>\n          <Trans>Be careful, you are transferring tokens to your own address!</Trans>\n        </span>\n      );\n    }\n  };\n\n  const errorMessage = getErrorMessage();\n\n  return (\n    <Modal open={open} onClose={onClose} title={t`NFID Transfer`}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TextField label={t`Token Symbol`} value={token.symbol} fullWidth disabled />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            label={t`To`}\n            value={values.to}\n            placeholder={token.standardType.includes(\"DIP20\") ? t`Enter the principal ID` : \"Enter the account ID\"}\n            onChange={({ target: { value } }) => handleFieldChange(value, \"to\")}\n            helperText={addressHelpText()}\n            fullWidth\n            autoComplete=\"To\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <NumberTextField\n            label={t`Amount`}\n            type=\"text\"\n            value={values.amount}\n            onChange={({ target: { value } }) => handleFieldChange(value, \"amount\")}\n            fullWidth\n            inputProps={{\n              autocomplete: \"new-password\",\n              form: {\n                autocomplete: \"off\",\n              },\n            }}\n            numericProps={{\n              allowNegative: false,\n              decimalScale: token.decimals,\n            }}\n            autoComplete=\"off\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Typography>\n            <Trans>Fee:</Trans> {parseTokenAmount(token?.transFee?.toString(), token.decimals).toFormat()}\n            &nbsp;{token.symbol}\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography>\n            <Trans>Actually:</Trans> {balanceActuallyToAccount()}\n            &nbsp;{token.symbol}\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography color=\"text.warning\">\n            <Trans>Please ensure that the receiving address supports this Token</Trans>\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Identity onSubmit={handleSubmit} fullScreenLoading>\n            {({ submit, loading }: CallbackProps) => (\n              <Button\n                variant=\"contained\"\n                fullWidth\n                color=\"primary\"\n                size=\"large\"\n                disabled={loading || !!errorMessage}\n                onClick={submit}\n              >\n                {errorMessage || (!loading ? (\n                  <Trans>Approve by NFID</Trans>\n                ) : (\n                  <CircularProgress size={26} color=\"inherit\" />\n                ))}\n              </Button>\n            )}\n          </Identity>\n        </Grid>\n      </Grid>\n    </Modal>\n  );\n}\n","import { useRef } from \"react\";\nimport { Grid, Typography } from \"@mui/material\";\nimport { t } from \"@lingui/macro\";\nimport QRCode from \"../qrcode\";\nimport Modal from \"../modal/index\";\nimport Copy, { CopyRef } from \"../Copy\";\n\nexport interface ReceiveModalProps {\n  open: boolean;\n  onClose: () => void;\n  address: string;\n}\n\nexport function ReceiveModal({ open, onClose, address }: ReceiveModalProps) {\n  const copy = useRef<CopyRef>(null);\n\n  const onConfirm = () => {\n    copy?.current?.copy();\n  };\n\n  return (\n    <Modal\n      title={t`Receive`}\n      open={open}\n      onClose={onClose}\n      showConfirm\n      onConfirm={onConfirm}\n      confirmText={t`Copy Address`}\n    >\n      <Grid container spacing={2}>\n        <Grid container item xs={12} justifyContent=\"center\">\n          <Grid item>\n            <QRCode value={address} />\n          </Grid>\n        </Grid>\n\n        <Grid container item xs={12} justifyContent=\"center\">\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              sx={{\n                wordBreak: \"break-all\",\n              }}\n            >\n              {address}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Copy ref={copy} content={address} hide />\n    </Modal>\n  );\n}\n","import { useState, useContext, useMemo, useEffect } from \"react\";\nimport { Typography, Box, useTheme } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { formatDollarAmount, parseTokenAmount, mockALinkAndOpen, BigNumber, principalToAccount } from \"@w2e/utils\";\nimport TransferModal from \"components/TokenTransfer/index\";\nimport { NoData, LoadingRow } from \"components/index\";\nimport { useTokenBalance } from \"hooks/token/useTokenBalance\";\nimport { ICP, Connector, NO_HIDDEN_TOKENS, INFO_URL } from \"constants/index\";\nimport { useAccount } from \"store/global/hooks\";\nimport { t } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\nimport WalletContext from \"components/Wallet/context\";\nimport { useTokenInfo } from \"hooks/token/useTokenInfo\";\nimport { TokenInfo } from \"types/token\";\nimport { useAccountPrincipal, useConnectorType } from \"store/auth/hooks\";\nimport TokenStandardLabel from \"components/token/TokenStandardLabel\";\nimport { ckETH, ckBTC, WRAPPED_ICP, ICP_TOKEN_INFO, TOKEN_STANDARD, XTC, } from \"constants/tokens\";\nimport XTCTopUpModal from \"components/XTCTopup/index\";\nimport { useInfoToken } from \"hooks/info/useInfoTokens\";\nimport { useToken } from \"hooks/useCurrency\";\nimport NFIDTransfer from \"components/Wallet/NFIDTransfer\";\nimport { useHistory } from \"react-router-dom\";\nimport { isHouseUserTokenTransactions } from \"utils/index\";\nimport { TokenImage } from \"components/Image/Token\";\nimport { useSNSTokenRootId } from \"hooks/token/useSNSTokenRootId\";\nimport { ReceiveModal } from \"./Receive\";\n\nconst useStyles = makeStyles(() => ({\n  tokenAssets: {\n    fontSize: \"0.8rem\",\n  },\n  walletSymbol: {\n    cursor: \"pointer\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n}));\n\ninterface ActionButtonProps {\n  label: string;\n  onClick?: () => void;\n}\n\nfunction ActionButton({ label, onClick }: ActionButtonProps) {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        padding: \"7px 12px\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        background: \"#4F5A84\",\n        borderRadius: \"8px\",\n        cursor: \"pointer\",\n      }}\n      onClick={onClick}\n    >\n      <Typography color=\"text.primary\">{label}</Typography>\n    </Box>\n  );\n}\n\nexport const XTCTopUpIcon = () => {\n  return (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7.9987 13.334C10.9442 13.334 13.332 10.9462 13.332 8.00065C13.332 5.05513 10.9442 2.66732 7.9987 2.66732C5.05318 2.66732 2.66536 5.05513 2.66536 8.00065C2.66536 10.9462 5.05318 13.334 7.9987 13.334ZM7.9987 14.6673C11.6806 14.6673 14.6654 11.6825 14.6654 8.00065C14.6654 4.31875 11.6806 1.33398 7.9987 1.33398C4.3168 1.33398 1.33203 4.31875 1.33203 8.00065C1.33203 11.6825 4.3168 14.6673 7.9987 14.6673Z\"\n        fill=\"#5669DC\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7.9678 6.58579L6.55359 8L7.9678 9.41421L9.38201 8L7.9678 6.58579ZM4.66797 8L7.9678 11.2998L11.2676 8L7.9678 4.70017L4.66797 8Z\"\n        fill=\"#5669DC\"\n      />\n    </svg>\n  );\n};\n\ntype ckTOKEN = {\n  id: string;\n  mintPath: string;\n  dissolvePath: string;\n};\n\nconst ckTokens: ckTOKEN[] = [\n  { id: ckBTC.address, mintPath: \"/wallet/ckBTC?type=mint\", dissolvePath: \"/wallet/ckBTC?type=dissolve\" },\n  { id: ckETH.address, mintPath: \"/wallet/ckETH?type=mint\", dissolvePath: \"/wallet/ckETH?type=dissolve\" },\n];\n\nfunction ChainKeyTokenButtons({ ckToken }: { ckToken: ckTOKEN }) {\n  const history = useHistory();\n\n  const handleCKTokenMint = (path: string) => {\n    history.push(path);\n  };\n\n  const handleCKTokenDissolve = (path: string) => {\n    history.push(path);\n  };\n\n  return (\n    <>\n      <ActionButton label={t`Mint`} onClick={() => handleCKTokenMint(ckToken.mintPath)} />\n      <ActionButton label={t`Dissolve`} onClick={() => handleCKTokenDissolve(ckToken.dissolvePath)} />\n    </>\n  );\n}\n\nconst SWAP_BUTTON_EXCLUDE = [ICP_TOKEN_INFO.canisterId, WRAPPED_ICP.address];\n\nexport interface TokenListItemProps {\n  isHideSmallBalances: boolean;\n  searchValue: string;\n  canisterId: string;\n}\n\nexport function TokenListItem({ canisterId, isHideSmallBalances, searchValue }: TokenListItemProps) {\n  const classes = useStyles();\n  const account = useAccount();\n  const theme = useTheme() as Theme;\n  const principal = useAccountPrincipal();\n\n  const walletType = useConnectorType();\n\n  const history = useHistory();\n\n  const [, currency] = useToken(canisterId);\n\n  const infoToken = useInfoToken(currency?.address);\n\n  const tokenUSDPrice = useMemo(() => {\n    return infoToken?.priceUSD;\n  }, [infoToken]);\n\n  const { result: tokenInfo } = useTokenInfo(canisterId);\n  const [XTCTopUpShow, setXTCTopUpShow] = useState(false);\n\n  const [refreshInnerCounter, setRefreshInnerCounter] = useState<number>(0);\n\n  const [open, setOpen] = useState(false);\n  const [receiveOpen, setReceiveOpen] = useState(false);\n  const [NFIDTransferOpen, setNFIDTransferOpen] = useState(false);\n\n  const { refreshCounter, setTotalValue, setTotalUSDBeforeChange } = useContext(WalletContext);\n\n  const refreshNumber = useMemo(() => {\n    return refreshInnerCounter + refreshCounter;\n  }, [refreshInnerCounter, refreshCounter]);\n\n  const { result: tokenBalance } = useTokenBalance(canisterId, principal, refreshNumber);\n\n  useEffect(() => {\n    if (\n      tokenInfo &&\n      tokenInfo.decimals !== undefined &&\n      tokenInfo.transFee !== undefined &&\n      tokenBalance &&\n      infoToken\n    ) {\n      setTotalValue(\n        tokenInfo.canisterId,\n        parseTokenAmount(tokenBalance, tokenInfo.decimals).multipliedBy(infoToken.priceUSD),\n      );\n\n      const usdBeforeChange = new BigNumber(infoToken.priceUSD).div(\n        new BigNumber(infoToken.priceUSDChange).dividedBy(100).plus(1),\n      );\n\n      setTotalUSDBeforeChange(\n        tokenInfo.canisterId,\n        parseTokenAmount(tokenBalance, tokenInfo.decimals).multipliedBy(usdBeforeChange),\n      );\n    }\n  }, [tokenBalance, infoToken, tokenInfo]);\n\n  const handleCloseModal = async () => {\n    setOpen(false);\n  };\n\n  const handleTransferSuccess = () => {\n    setRefreshInnerCounter(refreshInnerCounter + 1);\n    handleCloseModal();\n    setNFIDTransferOpen(false);\n  };\n\n  const handleTopUpSuccess = () => {\n    setRefreshInnerCounter(refreshInnerCounter + 1);\n  };\n\n  const handleTransfer = async () => {\n    setOpen(true);\n  };\n\n  const root_canister_id = useSNSTokenRootId(canisterId);\n\n  const handleToTransactions = () => {\n    if (!tokenInfo || !principal) return;\n\n    const { canisterId, standardType, symbol } = tokenInfo;\n\n    if (symbol === ICP_TOKEN_INFO.symbol) {\n      mockALinkAndOpen(`https://dashboard.internetcomputer.org/account//${account}`, \"TOKEN_TRANSACTIONS\");\n    } else if (root_canister_id) {\n      mockALinkAndOpen(\n        `https://dashboard.internetcomputer.org/sns/${root_canister_id}/account/${principal.toString()}`,\n        \"TOKEN_TRANSACTIONS\",\n      );\n    } else if (tokenInfo.standardType === TOKEN_STANDARD.ICRC1 || tokenInfo.standardType === TOKEN_STANDARD.ICRC2) {\n      const url = isHouseUserTokenTransactions(tokenInfo.canisterId, principal?.toString());\n      mockALinkAndOpen(url, \"TOKEN_TRANSACTIONS\");\n    } else {\n      mockALinkAndOpen(\n        `${INFO_URL}/token/transactions/${canisterId}/${principal?.toString()}?standard=${standardType}`,\n        \"TOKEN_TRANSACTIONS\",\n      );\n    }\n  };\n\n  const handleLoadToDetail = (tokenInfo: TokenInfo | undefined) => {\n    if (tokenInfo && tokenInfo.symbol !== ICP_TOKEN_INFO.symbol) {\n      mockALinkAndOpen(\n        `${INFO_URL}/token/details/${tokenInfo?.canisterId}?standard=${tokenInfo?.standardType}`,\n        \"TOKEN_DETAILs\",\n      );\n    }\n  };\n\n  const handleXTCTopUp = () => {\n    setXTCTopUpShow(true);\n  };\n\n  const handleWrappedICP = (value: \"wrap\" | \"unwrap\") => {\n    if (value === \"wrap\") {\n      history.push(\"/swap/v2/wrap?input=icp\");\n      return;\n    }\n\n    history.push(\"/swap/v2/wrap?input=wicp\");\n  };\n\n  const isHidden = useMemo(() => {\n    const hiddenBySmallBalance = isHideSmallBalances && !!tokenBalance && !tokenBalance?.isGreaterThan(0);\n\n    const hiddenBySearchValue = searchValue\n      ? !tokenInfo?.symbol\n        ? true\n        : !tokenInfo?.symbol.toLowerCase().includes(searchValue.toLowerCase())\n      : false;\n\n    if (NO_HIDDEN_TOKENS.includes(canisterId)) return false;\n\n    return hiddenBySmallBalance || hiddenBySearchValue;\n  }, [isHideSmallBalances, tokenBalance, canisterId, searchValue, tokenInfo]);\n\n  const handleToSwap = () => {\n    history.push(`/swap?input=${canisterId}&output=${ICP.address}`);\n  };\n\n  const handleReceive = () => {\n    setReceiveOpen(true);\n  };\n\n  return (\n    <Box\n      sx={{\n        borderRadius: \"12px\",\n        background: theme.palette.background.level4,\n        padding: \"20px\",\n        maxWidth: \"100%\",\n        overflow: \"hidden\",\n        ...(isHidden ? { display: \"none\" } : {}),\n        \"@media(max-width: 640px)\": {\n          padding: \"10px\",\n        },\n      }}\n    >\n      <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Box sx={{ display: \"flex\", gap: \"0 10px\" }}>\n          <TokenImage size=\"40px\" logo={tokenInfo?.logo} tokenId={tokenInfo?.canisterId} />\n          <Box>\n            <Typography\n              color=\"textPrimary\"\n              className={tokenInfo?.symbol !== ICP_TOKEN_INFO.symbol ? classes.walletSymbol : \"\"}\n              onClick={() => handleLoadToDetail(tokenInfo)}\n              fontWeight={500}\n            >\n              {tokenInfo?.symbol}\n            </Typography>\n            <Typography sx={{ fontSize: \"12px\" }}>{tokenInfo?.name}</Typography>\n          </Box>\n        </Box>\n        <TokenStandardLabel standard={tokenInfo?.standardType} />\n      </Box>\n\n      <Box sx={{ display: \"flex\", margin: \"12px 0 0 0\" }}>\n        <Box sx={{ width: \"50%\" }}>\n          <Typography fontSize=\"12px\">Balance</Typography>\n          <Typography color=\"textPrimary\" sx={{ margin: \"4px 0 0 0\" }}>\n            {parseTokenAmount(tokenBalance, tokenInfo?.decimals).toFormat()}\n          </Typography>\n          <Typography className={classes.tokenAssets}>\n            {tokenUSDPrice && tokenBalance\n              ? `≈\n              ${formatDollarAmount(\n                parseTokenAmount(tokenBalance, tokenInfo?.decimals)\n                  .multipliedBy(tokenUSDPrice)\n                  .toString(),\n                4,\n              )}`\n              : \"--\"}\n          </Typography>\n        </Box>\n        <Box sx={{ width: \"50%\" }}>\n          <Typography fontSize=\"12px\">Price</Typography>\n          <Typography color=\"textPrimary\" sx={{ margin: \"4px 0 0 0\" }}>\n            {tokenUSDPrice ? formatDollarAmount(tokenUSDPrice) : \"--\"}\n          </Typography>\n        </Box>\n      </Box>\n\n      <Box\n        sx={{ margin: \"24px 0 0 0\", display: \"flex\", justifyContent: \"flex-end\", gap: \"10px 10px\", flexWrap: \"wrap\" }}\n      >\n        {SWAP_BUTTON_EXCLUDE.includes(canisterId) ? null : <ActionButton label=\"Swap\" onClick={handleToSwap} />}\n\n        <ActionButton label=\"Send\" onClick={handleTransfer} />\n        <ActionButton label=\"Receive\" onClick={handleReceive} />\n        <ActionButton label=\"Transactions\" onClick={handleToTransactions} />\n\n        {canisterId === ICP.address && walletType === Connector.NFID ? (\n          <ActionButton label={t`NFID Transfer`} onClick={() => setNFIDTransferOpen(true)} />\n        ) : null}\n\n        {tokenInfo?.canisterId === XTC.address ? <ActionButton label={t`Top-up`} onClick={handleXTCTopUp} /> : null}\n\n        {tokenInfo?.canisterId === WRAPPED_ICP.address ? (\n          <>\n            <ActionButton label={t`Unwrap`} onClick={() => handleWrappedICP(\"unwrap\")} />\n            <ActionButton label={t`Wrap`} onClick={() => handleWrappedICP(\"wrap\")} />\n          </>\n        ) : null}\n\n        {ckTokens\n          .filter((ele) => ele.id === tokenInfo?.canisterId)\n          .map((ele) => (\n            <ChainKeyTokenButtons key={ele.id} ckToken={ele} />\n          ))}\n      </Box>\n\n      {open && !!tokenInfo ? (\n        <TransferModal\n          open={open}\n          onClose={handleCloseModal}\n          token={tokenInfo}\n          onTransferSuccess={handleTransferSuccess}\n        />\n      ) : null}\n\n      {NFIDTransferOpen && !!tokenInfo ? (\n        <NFIDTransfer\n          open={NFIDTransferOpen}\n          onClose={() => setNFIDTransferOpen(false)}\n          token={tokenInfo}\n          onTransferSuccess={handleTransferSuccess}\n        />\n      ) : null}\n\n      {XTCTopUpShow ? (\n        <XTCTopUpModal open={XTCTopUpShow} onClose={() => setXTCTopUpShow(false)} onTopUpSuccess={handleTopUpSuccess} />\n      ) : null}\n\n      {receiveOpen ? (\n        <ReceiveModal\n          open={receiveOpen}\n          onClose={() => setReceiveOpen(false)}\n          address={\n            !principal\n              ? \"\"\n              : tokenInfo?.standardType === TOKEN_STANDARD.EXT || tokenInfo?.canisterId === ICP.address\n                ? principalToAccount(principal.toString())\n                : principal.toString()\n          }\n        />\n      ) : null}\n    </Box>\n  );\n}\n\nexport interface TokenListProps {\n  list: string[];\n  loading?: boolean;\n  isHideSmallBalances: boolean;\n  searchValue: string;\n}\n\nexport default function TokenList({ list, loading, isHideSmallBalances, searchValue }: TokenListProps) {\n  return (\n    <Box\n      sx={{\n        width: \"100%\",\n        display: \"grid\",\n        gridTemplateColumns: \"1fr 1fr 1fr\",\n        gap: \"20px\",\n        \"@media(max-width: 1088px)\": {\n          gridTemplateColumns: \"1fr 1fr\",\n          gap: \"12px 12px\",\n        },\n        \"@media(max-width: 640px)\": {\n          gridTemplateColumns: \"1fr\",\n          gap: \"12px 0\",\n        },\n      }}\n    >\n      {list.map((canisterId) => {\n        return (\n          <TokenListItem\n            key={canisterId}\n            canisterId={canisterId}\n            isHideSmallBalances={isHideSmallBalances}\n            searchValue={searchValue}\n          />\n        );\n      })}\n\n      {list.length === 0 && !loading ? <NoData /> : null}\n\n      {loading ? (\n        <LoadingRow>\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n        </LoadingRow>\n      ) : null}\n    </Box>\n  );\n}\n","var _rect, _rect2;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgAdd(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 9,\n    y: 15,\n    width: 14,\n    height: 2,\n    rx: 1,\n    fill: \"white\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 17,\n    y: 9,\n    width: 14,\n    height: 2,\n    rx: 1,\n    transform: \"rotate(90 17 9)\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAdd);\nexport default __webpack_public_path__ + \"static/media/add.1275c2ddf891660b4f992c81a6422aa9.svg\";\nexport { ForwardRef as ReactComponent };","import { useState, useMemo } from \"react\";\nimport { Button, Grid, Box, Typography, InputAdornment, useTheme, useMediaQuery } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { useWalletCatchTokenIds, useSaveCacheTokenCallback, useDeleteCacheTokenCallback } from \"store/wallet/hooks\";\nimport { IconSearch } from \"@tabler/icons\";\nimport HorizontalRuleIcon from \"@mui/icons-material/HorizontalRule\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { useImportedTokens } from \"store/token/cache/hooks\";\nimport { Theme } from \"@mui/material/styles\";\nimport { useTokenInfo } from \"hooks/token/useTokenInfo\";\nimport TokenStandardLabel from \"components/token/TokenStandardLabel\";\nimport ImportToken from \"components/Wallet/ImportToken\";\nimport { NoData, TextButton, Modal, FilledTextField } from \"components/index\";\nimport { useGlobalTokenList } from \"store/global/hooks\";\nimport { DISPLAY_IN_WALLET_FOREVER } from \"constants/wallet\";\nimport { TokenImage } from \"@w2e/ui\";\n\nexport function TokenItem({ canisterId }: { canisterId: string }) {\n  const theme = useTheme() as Theme;\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const walletCatchTokenIds = useWalletCatchTokenIds() ?? [];\n  const addToken = useSaveCacheTokenCallback();\n  const deleteToken = useDeleteCacheTokenCallback();\n\n  const handleAddToken = (canisterId: string) => {\n    addToken([canisterId]);\n  };\n\n  const handleDeleteToken = (canisterId: string) => {\n    deleteToken([canisterId]);\n  };\n\n  const hasBeenAdded = (canisterId: string) => {\n    return !!walletCatchTokenIds.find((tokenId) => tokenId === canisterId);\n  };\n\n  const { result: tokenInfo } = useTokenInfo(canisterId);\n\n  return (\n    <Box\n      sx={{\n        display: \"grid\",\n        gridTemplateColumns: \"190px 1fr 80px\",\n        gap: \"0 20px\",\n        height: \"73px\",\n        alignItems: \"center\",\n        borderTop: \"1px solid rgba(224, 189, 240, 0.082)\",\n      }}\n    >\n      <Grid container alignItems=\"center\">\n        <TokenImage logo={tokenInfo?.logo} size=\"32px\" />\n\n        <Grid ml={1} item xs>\n          <Grid container alignItems=\"center\" mr=\"5px\">\n            <Grid\n              item\n              xs\n              sx={{\n                width: \"80px\",\n                overflow: \"hidden\",\n              }}\n            >\n              <Typography>{tokenInfo?.symbol}</Typography>\n              <Typography\n                fontSize={12}\n                color=\"textSecondary\"\n                sx={{\n                  width: \"100%\",\n                  overflow: \"hidden\",\n                  textOverflow: \"ellipsis\",\n                  whiteSpace: \"nowrap\",\n                }}\n              >\n                {tokenInfo?.name}\n              </Typography>\n            </Grid>\n\n            <TokenStandardLabel standard={tokenInfo?.standardType} />\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Typography>{matchDownSM ? \"\" : tokenInfo?.canisterId}</Typography>\n\n      <>\n        {DISPLAY_IN_WALLET_FOREVER.includes(canisterId) ? null : hasBeenAdded(canisterId) ? (\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            startIcon={<HorizontalRuleIcon fontSize=\"small\" />}\n            onClick={() => handleDeleteToken(canisterId)}\n          >\n            <Trans>Delete</Trans>\n          </Button>\n        ) : (\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            startIcon={<AddIcon fontSize=\"small\" />}\n            onClick={() => handleAddToken(canisterId)}\n          >\n            <Trans>Add</Trans>\n          </Button>\n        )}\n      </>\n    </Box>\n  );\n}\n\nexport default function AddTokenModal({ open, onClose }: { open: boolean; onClose: () => void }) {\n  const theme = useTheme() as Theme;\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [queryValue, setQueryValue] = useState(\"\");\n  const [importTokenShow, setImportTokenShow] = useState(false);\n\n  const globalTokenList = useGlobalTokenList();\n  const importedTokens = useImportedTokens();\n\n  const handleSearch = async (values: string) => {\n    setQueryValue(values);\n  };\n\n  const tokens = useMemo(() => {\n    const iTokens = Object.keys(importedTokens ?? [])\n      .filter((canisterId) => !globalTokenList.find((token) => token.canisterId === canisterId))\n      .map((canisterId) => {\n        const token = importedTokens[canisterId];\n\n        return {\n          canisterId,\n          name: token.name,\n          symbol: token.symbol,\n        };\n      });\n\n    const _tokens = globalTokenList\n      .filter((token) => !token.configs.find((config) => config.name === \"WALLET\" && config.value === \"true\"))\n      .map((token) => ({\n        canisterId: token.canisterId,\n        name: token.name,\n        symbol: token.symbol,\n      }));\n\n    const tokens = [...iTokens, ..._tokens];\n\n    if (queryValue) {\n      return tokens.filter(\n        (token) =>\n          token.name.toLowerCase().includes(queryValue.toLowerCase()) ||\n          token.symbol.toLowerCase().includes(queryValue.toLowerCase()),\n      );\n    }\n\n    return tokens;\n  }, [importedTokens, globalTokenList, queryValue]);\n\n  return (\n    <>\n      <Modal\n        open={open}\n        onClose={onClose}\n        title={t`Add Tokens`}\n        dialogProps={{\n          sx: {\n            \"& .MuiPaper-root\": {\n              width: \"700px\",\n              maxWith: \"700px\",\n            },\n          },\n        }}\n      >\n        <Box>\n          <FilledTextField\n            contained\n            background={theme.palette.background.level1}\n            borderRadius=\"12px\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <IconSearch stroke={1.5} size=\"1rem\" />\n                </InputAdornment>\n              ),\n            }}\n            fullWidth\n            size={matchDownSM ? \"small\" : undefined}\n            placeholder={t`Search token`}\n            onChange={handleSearch}\n          />\n        </Box>\n\n        <Box mt=\"16px\">\n          <Box\n            sx={{\n              display: \"grid\",\n              gridTemplateColumns: \"190px 1fr 80px\",\n              gap: \"0 20px\",\n              height: \"57px\",\n              alignItems: \"center\",\n            }}\n          >\n            <Typography>\n              <Trans>Token</Trans>\n            </Typography>\n            <Typography sx={{ \"@media (max-width: 540px)\": { display: \"none\" } }}>\n              <Trans>Canister ID</Trans>\n            </Typography>\n            <Typography>&nbsp;</Typography>\n          </Box>\n\n          <Box\n            sx={{\n              maxHeight: \"260px\",\n              overflow: \"auto\",\n              \"@media (max-width: 540px)\": { maxHeight: \"290px\" },\n            }}\n          >\n            {tokens.map((token, index) => (\n              <TokenItem key={`${token.canisterId}-${index}}`} canisterId={token.canisterId} />\n            ))}\n          </Box>\n\n          {tokens.length === 0 ? (\n            <Box sx={{ borderTop: \"1px solid rgba(189, 200, 240, 0.082)\" }}>\n              <NoData />\n            </Box>\n          ) : null}\n        </Box>\n\n        <Grid\n          container\n          justifyContent=\"center\"\n          sx={{\n            paddingTop: \"20px\",\n            borderTop: \"1px solid rgba(81, 81, 81, 1)\",\n            borderColor: \"rgba(189, 200, 240, 0.082)\",\n          }}\n        >\n          <TextButton onClick={() => setImportTokenShow(true)}>\n            <Trans>Import Token</Trans>\n          </TextButton>\n        </Grid>\n      </Modal>\n\n      {importTokenShow ? (\n        <ImportToken\n          open={importTokenShow}\n          onClose={() => setImportTokenShow(false)}\n          onImportSuccessfully={() => onClose()}\n        />\n      ) : null}\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport { ReactComponent as AddIcon } from \"assets/icons/add.svg\";\nimport AddTokenModal from \"./modal\";\n\nexport default function AddToken() {\n  const [modalVisible, setModalVisible] = useState(false);\n\n  return (\n    <>\n      <AddIcon style={{ cursor: \"pointer\" }} onClick={() => setModalVisible(true)} />\n      {modalVisible ? <AddTokenModal open={modalVisible} onClose={() => setModalVisible(false)} /> : null}\n    </>\n  );\n}\n","import { Typography, Box } from \"@mui/material\";\nimport { t } from \"@lingui/macro\";\nimport AddToken from \"components/Wallet/AddToken\";\n\ntype Item = {\n  name: string;\n  pageName: \"token\";\n};\n\nconst DISPLAY_ITEMS: Item[] = [\n  {\n    name: t`Token`,\n    pageName: \"token\",\n  }\n];\n\nexport default function WalletPageToggle() {\n\n\n  return (\n    <Box sx={{ display: \"flex\", gap: \"0 24px\", alignItems: \"center\" }}>\n      {DISPLAY_ITEMS.map((item) => (\n        <Typography\n          key={item.pageName}\n          variant=\"h3\"\n          color=\"textPrimary\"\n          onClick={() => (item)}\n          sx={{ cursor: \"pointer\" }}\n        >\n          {item.name}\n        </Typography>\n      ))}\n      <AddToken />\n    </Box>\n  );\n}\n","import { Typography, Box, Checkbox, useMediaQuery, useTheme } from \"@mui/material\";\nimport WalletPageToggle from \"components/Wallet/PageToggle\";\nimport { Trans } from \"@lingui/macro\";\n\ninterface HideSmallBalanceProps {\n  onHideSmallBalances: (checked: boolean) => void;\n  isHideSmallBalances: boolean;\n}\n\nfunction HideSmallBalance({ isHideSmallBalances, onHideSmallBalances }: HideSmallBalanceProps) {\n  return (\n    <Box sx={{ display: \"flex\", gap: \"0 5px\", alignItems: \"center\" }}>\n      <Checkbox\n        checked={isHideSmallBalances}\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => onHideSmallBalances(event.target.checked)}\n      />\n      <Typography sx={{ cursor: \"pointer\" }} onClick={() => onHideSmallBalances(!isHideSmallBalances)}>\n        <Trans>Hide Zero Balance</Trans>\n      </Typography>\n    </Box>\n  );\n}\n\nexport interface TokenHeaderProps {\n  onHideSmallBalances: (checked: boolean) => void;\n  onSearchValue: (value: string) => void;\n  isHideSmallBalances: boolean;\n}\n\nexport default function TokenListHeader({ onHideSmallBalances, isHideSmallBalances }: TokenHeaderProps) {\n  const theme = useTheme();\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  return (\n    <Box>\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <WalletPageToggle />\n\n        <Box sx={{ display: \"flex\", alignItems: \"center\", gap: \"0 10px\" }}>\n          {!matchDownSM ? (\n            <HideSmallBalance onHideSmallBalances={onHideSmallBalances} isHideSmallBalances={isHideSmallBalances} />\n          ) : null}\n\n\n        </Box>\n      </Box>\n      {matchDownSM ? (\n        <Box sx={{ margin: \"10px 0 0 0\" }}>\n          <HideSmallBalance onHideSmallBalances={onHideSmallBalances} isHideSmallBalances={isHideSmallBalances} />\n        </Box>\n      ) : null}\n    </Box>\n  );\n}\n","import { useState, useMemo } from \"react\";\nimport { Box } from \"@mui/material\";\nimport TokenListTable from \"components/Wallet/TokenListTable\";\nimport TokenListHeader from \"components/Wallet/TokenListHeader\";\nimport {\n  ICP_METADATA,\n  W2E_METADATA,\n  WPL_METADATA,\n  WPR_METADATA,\n  WG_METADATA,\n  WM_METADATA,\n  WOX_METADATA,\n  EW_METADATA\n} from \"constants/tokens\";\nimport { NETWORK, network } from \"constants/server\";\nimport { useWalletCatchTokenIds, useUpdateHideSmallBalanceManager } from \"store/wallet/hooks\";\nimport { DISPLAY_IN_WALLET_FOREVER } from \"constants/wallet\";\nimport { useGlobalTokenList } from \"store/global/hooks\";\n\nexport default function WalletTokenList() {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [isHideSmallBalances, setIsHideSmallBalances] = useUpdateHideSmallBalanceManager();\n  const walletCacheTokenIds = useWalletCatchTokenIds();\n\n  const globalTokenList = useGlobalTokenList();\n\n  const tokens = useMemo(() => {\n    let tokenIds = [\n      ICP_METADATA.canisterId.toString(),\n      W2E_METADATA.canisterId.toString(),\n      WPL_METADATA.canisterId.toString(),\n      WPR_METADATA.canisterId.toString(),\n      WG_METADATA.canisterId.toString(),\n      WM_METADATA.canisterId.toString(),\n      WOX_METADATA.canisterId.toString(),\n      EW_METADATA.canisterId.toString(),\n    ];\n\n    if (network === NETWORK.IC) {\n      tokenIds = [\n        ...tokenIds,\n        ...globalTokenList\n          .filter((token) => !!token.configs.find((config) => config.name === \"WALLET\" && config.value === \"true\"))\n          .sort((a, b) => {\n            if (a.rank < b.rank) return -1;\n            if (a.rank > b.rank) return 1;\n            return 0;\n          })\n          .map((token) => token.canisterId),\n      ];\n    }\n\n    return [...new Set([...tokenIds, ...walletCacheTokenIds.filter((id) => !DISPLAY_IN_WALLET_FOREVER.includes(id))])];\n  }, [walletCacheTokenIds, globalTokenList]);\n\n  const handleSearchValue = (value: string) => {\n    setSearchValue(value);\n  };\n\n  const hideSmallBalances = (hideOrNot: boolean) => {\n    setIsHideSmallBalances(hideOrNot);\n  };\n\n  return (\n    <>\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: \"24px 0\", overflow: \"auto hidden\" }}>\n        <TokenListHeader\n          onHideSmallBalances={hideSmallBalances}\n          onSearchValue={handleSearchValue}\n          isHideSmallBalances={isHideSmallBalances}\n        />\n\n        <TokenListTable isHideSmallBalances={isHideSmallBalances} list={tokens} searchValue={searchValue} />\n      </Box>\n    </>\n  );\n}\n","import { useMemo, useState } from \"react\";\nimport BigNumber from \"bignumber.js\";\nimport { Box } from \"@mui/material\";\nimport WalletAccount from \"components/Wallet/WalletAccount\";\nimport TokenList from \"components/Wallet/TokenList\";\nimport WalletContext, { TokenBalance, Page } from \"components/Wallet/context\";\nimport { useConnectorStateConnected } from \"store/auth/hooks\";\nimport ConnectWallet from \"components/ConnectWallet\";\n\nexport default function Wallet() {\n  const [refreshCounter, setRefreshCounter] = useState<number>(0);\n  const [refreshTotalBalance, setRefreshTotalBalance] = useState(false);\n  const [totalValue, setTotalValue] = useState<TokenBalance>({} as TokenBalance);\n  const [totalUSDBeforeChange, setTotalUSDBeforeChange] = useState<TokenBalance>({} as TokenBalance);\n  const [transferTo, setTransferTo] = useState<string>(\"\");\n  const [transferAmount, setTransferAmount] = useState<BigNumber>(new BigNumber(0));\n  const [page, setPage] = useState<Page>(\"token\");\n\n  const walletIsConnected = useConnectorStateConnected();\n\n  const handleTotalValueChange = (tokenId: string, value: BigNumber) => {\n    setTotalValue((prevState) => ({ ...prevState, [tokenId]: value }));\n  };\n\n  const handleTotalUSDChange = (tokenId: string, value: BigNumber) => {\n    setTotalUSDBeforeChange((prevState) => ({ ...prevState, [tokenId]: value }));\n  };\n\n  const allTokenTotalValue = useMemo(() => {\n    return Object.values(totalValue).reduce((prev, curr) => prev.plus(curr), new BigNumber(0));\n  }, [totalValue]);\n\n  const allTokenTotalUSDChange = useMemo(() => {\n    return Object.values(totalUSDBeforeChange).reduce((prev, curr) => prev.plus(curr), new BigNumber(0));\n  }, [totalUSDBeforeChange]);\n\n  return walletIsConnected ? (\n    <WalletContext.Provider\n      value={{\n        refreshTotalBalance,\n        setRefreshTotalBalance,\n        refreshCounter,\n        setRefreshCounter,\n        totalValue: allTokenTotalValue,\n        setTotalValue: handleTotalValueChange,\n        totalUSDBeforeChange: allTokenTotalUSDChange,\n        setTotalUSDBeforeChange: handleTotalUSDChange,\n        transferTo,\n        setTransferTo,\n        transferAmount,\n        setTransferAmount,\n        page,\n        setPage,\n      }}\n    >\n      <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Box sx={{ width: \"100%\", maxWidth: \"1400px\" }}>\n          <WalletAccount />\n          <Box sx={{ margin: \"30px 0 0 0\" }}>\n\n            <Box sx={{ display: page === \"token\" ? \"block\" : \"none\" }}>\n              <TokenList />\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n    </WalletContext.Provider>\n  ) : (\n    <ConnectWallet />\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M4 11h16v2H4z\"\n}), 'HorizontalRule');\n\nexports.default = _default;","export const ICP_ADDRESS_LENGTH = 64;\n\nexport function isValidAccount(address: string): boolean {\n  return (\n    /^[0-9a-fA-F]+$/.test(address) && ICP_ADDRESS_LENGTH === address.length\n  );\n}\n"],"names":["ConnectWallet","walletManager","useWalletConnectorManager","_jsx","Grid","container","justifyContent","children","Box","sx","maxWidth","width","MainCard","level","_jsxs","alignItems","flexDirection","height","NoData","Typography","color","Trans","id","Button","variant","onClick","marginTop","size","MaxButton","props","_props$sx","theme","useTheme","padding","cursor","borderRadius","backgroundColor","colors","secondaryMain","fontSize","_ref","value","QRCode","_path","_path2","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","SvgCopy","svgRef","title","titleId","viewBox","fill","xmlns","ref","fillRule","clipRule","d","ForwardRef","AddressWrapper","address","label","copyRef","useRef","handleCopy","_copyRef$current","current","copy","border","background","display","transform","margin","wordBreak","whiteSpace","userSelect","component","CopyIcon","Copy","content","hide","WalletAccount","borderBottom","gap","textAlign","minWidth","createContext","useStyles","makeStyles","warningText","palette","warning","dark","usePrincipalStandard","tokenId","standard","includes","ICP","useAccountStandard","TransferModal","_token$transFee","open","onClose","onTransferSuccess","token","transferTo","principalFromState","React","classes","account","useAccount","principalString","useAccountPrincipalString","principal","useAccountPrincipal","openErrorTip","useErrorTip","openSuccessTip","useSuccessTip","refreshTotalBalance","setRefreshTotalBalance","useContext","WalletContext","result","balance","useTokenBalance","canisterId","tokenUSDPrice","useUSDPriceById","initialValues","to","weight","amount","values","setValues","useState","handleFieldChange","field","actualTransferAmount","useMemo","_values$weight2","_values$amount3","BigNumber","multipliedBy","isGreaterThan","minus","parseTokenAmount","transFee","decimals","toString","errorMessage","getErrorMessage","_values$amount","i18n","_","standardType","Principal","fromText","error","isValidAccount","isValidPrincipal","Modal","FilledTextField","symbol","fullWidth","placeholder","onChange","helperText","addressHelpText","className","autoComplete","multiline","NumberFilledTextField","numericProps","allowNegative","decimalScale","InputProps","endAdornment","InputAdornment","position","concat","toSignificantWithGroupSeparator","0","toFixed","toFormat","marginLeft","event","stopPropagation","Identity","onSubmit","async","_identity","_ref2","loading","closeLoading","_values$weight","_values$amount2","isLessThanOrEqualTo","status","message","tokenTransfer","formatTokenAmount","from","fee","_getLocaleMessage","W2E","getLocaleMessage","console","fullScreenLoading","_ref3","submit","disabled","CircularProgress","XTCTopUp","onTopUpSuccess","useTokenInfo","XTC","defaultValues","openTip","closeTip","useTips","onFieldChange","prevState","useCallback","identity","resultFormat","xtc","burn","canister_id","BigInt","Number","mt","inputComponent","TextFieldNumberComponent","inputProps","maxLength","marginRight","handleMax","toNumber","loadingTipKey","1","TIP_LOADING","numberToString","ResultStatus","OK","TIP_SUCCESS","TIP_ERROR","NFIDTransferModal","spacing","item","xs","TextField","target","NumberTextField","type","_ref4","autocomplete","form","balanceActuallyToAccount","NFIDRequestTransfer","ROUND_DOWN","ICP_TOKEN_INFO","_ref5","ReceiveModal","showConfirm","onConfirm","_copy$current","confirmText","tokenAssets","walletSymbol","textDecoration","ActionButton","ckTokens","ckBTC","mintPath","dissolvePath","ckETH","ChainKeyTokenButtons","ckToken","history","useHistory","_Fragment","handleCKTokenMint","path","push","handleCKTokenDissolve","SWAP_BUTTON_EXCLUDE","WRAPPED_ICP","TokenListItem","isHideSmallBalances","searchValue","walletType","useConnectorType","currency","useToken","infoToken","useInfoToken","priceUSD","tokenInfo","XTCTopUpShow","setXTCTopUpShow","refreshInnerCounter","setRefreshInnerCounter","setOpen","receiveOpen","setReceiveOpen","NFIDTransferOpen","setNFIDTransferOpen","refreshCounter","setTotalValue","setTotalUSDBeforeChange","refreshNumber","tokenBalance","useEffect","undefined","usdBeforeChange","div","priceUSDChange","dividedBy","plus","handleCloseModal","handleTransferSuccess","root_canister_id","useSNSTokenRootId","handleWrappedICP","isHidden","hiddenBySmallBalance","hiddenBySearchValue","toLowerCase","NO_HIDDEN_TOKENS","level4","overflow","TokenImage","logo","mockALinkAndOpen","INFO_URL","handleLoadToDetail","fontWeight","name","TokenStandardLabel","formatDollarAmount","flexWrap","handleToSwap","handleReceive","handleToTransactions","TOKEN_STANDARD","ICRC1","ICRC2","url","isHouseUserTokenTransactions","Connector","NFID","handleXTCTopUp","filter","ele","map","NFIDTransfer","XTCTopUpModal","handleTopUpSuccess","EXT","principalToAccount","TokenList","list","gridTemplateColumns","LoadingRow","_rect","_rect2","SvgAdd","x","y","rx","TokenItem","_useWalletCatchTokenI","matchDownSM","useMediaQuery","breakpoints","down","walletCatchTokenIds","useWalletCatchTokenIds","addToken","useSaveCacheTokenCallback","deleteToken","useDeleteCacheTokenCallback","borderTop","ml","mr","textOverflow","DISPLAY_IN_WALLET_FOREVER","find","hasBeenAdded","startIcon","HorizontalRuleIcon","handleDeleteToken","AddIcon","handleAddToken","AddTokenModal","queryValue","setQueryValue","importTokenShow","setImportTokenShow","globalTokenList","useGlobalTokenList","importedTokens","useImportedTokens","tokens","keys","configs","config","dialogProps","maxWith","contained","level1","startAdornment","IconSearch","stroke","maxHeight","index","paddingTop","borderColor","TextButton","ImportToken","onImportSuccessfully","AddToken","modalVisible","setModalVisible","style","DISPLAY_ITEMS","pageName","WalletPageToggle","HideSmallBalance","onHideSmallBalances","Checkbox","checked","TokenListHeader","WalletTokenList","setSearchValue","setIsHideSmallBalances","useUpdateHideSmallBalanceManager","walletCacheTokenIds","tokenIds","ICP_METADATA","W2E_METADATA","WPL_METADATA","WPR_METADATA","WG_METADATA","WM_METADATA","WOX_METADATA","EW_METADATA","network","NETWORK","IC","sort","a","b","rank","Set","hideOrNot","onSearchValue","TokenListTable","Wallet","setRefreshCounter","totalValue","totalUSDBeforeChange","setTransferTo","transferAmount","setTransferAmount","page","setPage","walletIsConnected","useConnectorStateConnected","allTokenTotalValue","reduce","prev","curr","allTokenTotalUSDChange","Provider","handleTotalValueChange","handleTotalUSDChange","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","ICP_ADDRESS_LENGTH","test"],"sourceRoot":""}
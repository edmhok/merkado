{"version":3,"file":"static/js/1513.c476d970.chunk.js","mappings":"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","sources":["store/swapv2/cache/hooks.ts","views/swap-v2/liquidity/AddLiquidity/index.tsx"],"sourcesContent":["import { useCallback } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"store/hooks\";\nimport { updateUserSlippage } from \"./actions\";\n\nexport function useIsExpertMode() {\n  return useAppSelector((state) => state.swapV2Cache.userExpertMode);\n}\n\nexport function useIsSingleHop() {\n  return useAppSelector((state) => state.swapV2Cache.userSingleHop);\n}\n\nexport function useUserSlippage() {\n  return useAppSelector((state) => state.swapV2Cache.userSlippage);\n}\n\nexport function useUserTransactionsDeadline() {\n  return useAppSelector((state) => state.swapV2Cache.userTransactionsDeadline);\n}\n\nexport function useSlippageManager(type: string): [number, (value: number) => void] {\n  const dispatch = useAppDispatch();\n  const userSlippage = useUserSlippage()[type];\n\n  const setUserSlippage = useCallback(\n    (value: number) => {\n      dispatch(updateUserSlippage({ type, value }));\n    },\n    [dispatch],\n  );\n\n  return [userSlippage, setUserSlippage];\n}\n","/* eslint-disable prefer-const */\nimport { memo, useState, useCallback, useMemo } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Box, Grid, Typography } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport BackIcon from \"assets/images/swap/back\";\nimport FeeSelector from \"components/swap/SwapFeeSelector\";\nimport CurrencySelector from \"components/CurrencySelector\";\nimport DepositAmount from \"components/swap/SwapDepositAmount\";\nimport { SwapV2Wrapper } from \"components/swap/SwapUIWrapper\";\nimport SetPriceRange from \"views/swap-liquidity-v3/liquidity/AddLiquidity/SetPriceRange\";\nimport {\n  useMintState,\n  useMintHandlers,\n  useMintInfo,\n  useRangeCallbacks,\n  useResetMintState,\n} from \"store/swapv2/liquidity/hooks\";\nimport { useUserTransactionsDeadline, useSlippageManager } from \"store/swapv2/cache/hooks\";\nimport { useToken, UseCurrencyState } from \"hooks/useCurrency\";\nimport { Bound, DEFAULT_FEE, FIELD } from \"constants/swap\";\nimport AddLiquidityConfirmModal from \"components/swap/AddLiquidityConfirmModal\";\nimport { mint as mintRequest } from \"hooks/swap/v2/useSwapCalls\";\nimport { useAccount } from \"store/global/hooks\";\nimport { useSuccessTip, useErrorTip, useLoadingTip } from \"hooks/useTips\";\nimport { isDarkTheme } from \"utils/index\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { WICPCanisterId } from \"constants/index\";\nimport { useApprove } from \"hooks/token/useApprove\";\nimport Identity, { CallbackProps, SubmitLoadingProps } from \"components/Identity\";\nimport { Identity as TypeIdentity } from \"types/global\";\nimport { useAccountPrincipal } from \"store/auth/hooks\";\nimport { Theme } from \"@mui/material/styles\";\nimport { getLocaleMessage } from \"locales/services\";\nimport { TokenInfo } from \"types/token\";\nimport AddLiquidityButton from \"components/swap/AddLiquidityButton\";\n\nconst DISABLED_STYLE = {\n  opacity: 0.2,\n  pointerEvents: \"none\",\n};\n\nconst media960 = \"@media(max-width: 959px)\";\n\nconst useStyle = makeStyles((theme: Theme) => {\n  return {\n    container: {\n      width: \"920px\",\n      backgroundColor: isDarkTheme(theme) ? theme.palette.background.level1 : theme.colors.lightGray50,\n      borderRadius: theme.radius,\n      padding: \"24px\",\n      [media960]: {\n        width: \"460px\",\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        padding: \"12px\",\n      },\n    },\n    topHeader: {\n      paddingBottom: \"12px\",\n      borderBottom: isDarkTheme(theme) ? \"1px solid #212946\" : `1px solid ${theme.colors.lightGray200BorderColor}`,\n    },\n    outerBox: {\n      paddingTop: \"24px\",\n      display: \"grid\",\n      gap: \"24px 48px\",\n      gridTemplateRows: \"max-content\",\n      gridTemplateColumns: \"1fr 1fr\",\n      gridAutoFlow: \"row\",\n      [media960]: {\n        gridTemplateColumns: \"1fr\",\n      },\n    },\n    priceRange: {\n      gridArea: \"1 / 2 / 3 / auto\",\n      height: \"fit-content\",\n      [media960]: {\n        gridArea: \"2 / 1 / 3 / auto\",\n      },\n    },\n  };\n});\n\nexport default memo(() => {\n  const classes = useStyle();\n  const history = useHistory();\n  const principal = useAccountPrincipal();\n\n  let {\n    currencyIdA,\n    currencyIdB,\n    feeAmount: feeAmountFromUrl,\n  } = useParams<{ currencyIdA: string; currencyIdB: string; feeAmount: string }>();\n\n  if (!currencyIdA) currencyIdA = WICPCanisterId;\n\n  const [confirmModalShow, setConfirmModalShow] = useState(false);\n  const transactionsDeadline = useUserTransactionsDeadline();\n  const [slippageTolerance] = useSlippageManager(\"mint\");\n\n  const feeAmount = feeAmountFromUrl ? Number(feeAmountFromUrl) : DEFAULT_FEE;\n\n  const [useCurrencyALoading, baseCurrency] = useToken(currencyIdA);\n  const [useCurrencyBLoading, currencyB] = useToken(currencyIdB);\n  const quoteCurrency =\n    baseCurrency && currencyB && baseCurrency.wrapped.equals(currencyB.wrapped) ? undefined : currencyB;\n\n  const { independentField, typedValue, startPrice } = useMintState();\n\n  const {\n    ticks,\n    pricesAtTicks,\n    invalidRange,\n    dependentField,\n    parsedAmounts,\n    depositADisabled,\n    depositBDisabled,\n    ticksAtLimit,\n    errorMessage,\n    position,\n    invertPrice,\n    price,\n    pool,\n    noLiquidity,\n    currencyBalances,\n    atMaxAmounts,\n    maxAmounts,\n    poolLoading,\n  } = useMintInfo(baseCurrency ?? undefined, quoteCurrency ?? undefined, feeAmount, baseCurrency ?? undefined);\n\n  const isValid = !errorMessage && !invalidRange;\n\n  const { [Bound.LOWER]: tickLower, [Bound.UPPER]: tickUpper } = ticks;\n  const { [Bound.LOWER]: priceLower, [Bound.UPPER]: priceUpper } = pricesAtTicks;\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: parsedAmounts[dependentField]?.toExact() ?? \"\",\n  };\n\n  const { onFieldAInput, onFieldBInput, onLeftRangeInput, onRightRangeInput, onStartPriceInput } =\n    useMintHandlers(noLiquidity);\n\n  const resetMintState = useResetMintState();\n\n  const handleBackToPosition = useCallback(() => {\n    resetMintState();\n    history.push(\"/swap/v2/liquidity\");\n  }, [history, resetMintState]);\n\n  const onTokenAChange = (token: TokenInfo) => {\n    const tokenId = token.canisterId.toString();\n\n    if (currencyIdB) {\n      if (currencyIdB === WICPCanisterId) {\n        if (currencyIdB !== tokenId) {\n          history.push(`/swap/v2/liquidity/add/${tokenId}/${currencyIdB}`);\n        } else {\n          history.push(`/swap/v2/liquidity/add/${tokenId}`);\n        }\n      } else if (tokenId !== WICPCanisterId) {\n        history.push(`/swap/v2/liquidity/add/${tokenId}/${WICPCanisterId}`);\n      } else {\n        history.push(`/swap/v2/liquidity/add/${WICPCanisterId}/${tokenId}`);\n      }\n    } else if (tokenId === WICPCanisterId) {\n      history.push(`/swap/v2/liquidity/add/${tokenId}`);\n    } else {\n      history.push(`/swap/v2/liquidity/add/${WICPCanisterId}/${tokenId}`);\n    }\n  };\n\n  const onTokenBChange = (token: TokenInfo) => {\n    const tokenId = token.canisterId.toString();\n\n    if (currencyIdA) {\n      if (currencyIdA === WICPCanisterId) {\n        if (currencyIdA !== tokenId) {\n          history.push(`/swap/v2/liquidity/add/${currencyIdA}/${tokenId}`);\n        } else {\n          history.push(`/swap/v2/liquidity/add/${tokenId}`);\n        }\n      } else if (currencyIdA !== tokenId && tokenId !== WICPCanisterId) {\n        history.push(`/swap/v2/liquidity/add/${WICPCanisterId}/${tokenId}`);\n      } else {\n        history.push(`/swap/v2/liquidity/add/${tokenId}/${WICPCanisterId}`);\n      }\n    } else if (tokenId === WICPCanisterId) {\n      history.push(`/swap/v2/liquidity/add/${tokenId}`);\n    } else {\n      history.push(`/swap/v2/liquidity/add/${tokenId}/${WICPCanisterId}`);\n    }\n  };\n\n  const handleFeeChange = useCallback(\n    (feeValue) => {\n      if (currencyIdA && currencyIdB) {\n        history.push(`/swap/v2/liquidity/add/${currencyIdA}/${currencyIdB}/${feeValue}`);\n      }\n    },\n    [currencyIdA, currencyIdB],\n  );\n\n  const clearAll = useCallback(() => {\n    onFieldAInput(\"\");\n    onFieldBInput(\"\");\n    onLeftRangeInput(\"\");\n    onRightRangeInput(\"\");\n    history.push(`/swap/v2/liquidity/add`);\n  }, [history, onFieldAInput, onFieldBInput, onLeftRangeInput, onRightRangeInput]);\n\n  const { getDecrementLower, getIncrementLower, getDecrementUpper, getIncrementUpper, getSetFullRange } =\n    useRangeCallbacks(baseCurrency ?? undefined, quoteCurrency ?? undefined, feeAmount, tickLower, tickUpper, pool);\n\n  const isValidPair = currencyIdA && currencyIdB && currencyIdA !== currencyIdB;\n\n  const handleOnAdd = useCallback(() => {\n    setConfirmModalShow(true);\n  }, []);\n\n  const account = useAccount();\n\n  const [openSuccessTip] = useSuccessTip();\n  const [openErrorTip] = useErrorTip();\n  const [openLoadingTip, closeLoadingTip] = useLoadingTip();\n\n  const approveCall = useApprove();\n\n  // request submit\n  const handleOnConfirm = useCallback(\n    async (identity: TypeIdentity, { loading }: SubmitLoadingProps) => {\n      if (!identity || loading || !position || !principal) return;\n\n      const loadingTipKey = openLoadingTip(t`Add ${baseCurrency?.symbol}/${quoteCurrency?.symbol} liquidity`);\n      setConfirmModalShow(false);\n\n      // const minimumAmounts = position.mintAmountsWithSlippage(\n      //   slippageToPercent(slippageTolerance)\n      // );\n\n      const amount0Desired = position.mintAmounts.amount0.toString();\n      const amount1Desired = position.mintAmounts.amount1.toString();\n\n      // const amount0Min = minimumAmounts.amount0.toString();\n      // const amount1Min = minimumAmounts.amount1.toString();\n      const amount0Min = \"0\";\n      const amount1Min = \"0\";\n\n      if (amount0Desired !== \"0\") {\n        const { status: approve0Status } = await approveCall({\n          canisterId: position.pool.token0.address,\n          spender: position.pool.id,\n          value: amount0Desired,\n          account: principal,\n        });\n\n        if (approve0Status === \"err\") {\n          openErrorTip(`Failed to approve ${position.pool.token0.symbol}`);\n          closeLoadingTip(loadingTipKey);\n          return;\n        }\n      }\n\n      if (amount1Desired !== \"0\") {\n        const { status: approve1Status } = await approveCall({\n          canisterId: position.pool.token1.address,\n          spender: position.pool.id,\n          value: amount1Desired,\n          account: principal,\n        });\n\n        if (approve1Status === \"err\") {\n          closeLoadingTip(loadingTipKey);\n          openErrorTip(`Failed to approve ${position.pool.token1.symbol}`);\n          return;\n        }\n      }\n\n      const { status, message } = await mintRequest(\n        identity,\n        position.pool.token0.address,\n        position.pool.token1.address,\n        BigInt(position.pool.fee),\n        BigInt(position.tickLower),\n        BigInt(position.tickUpper),\n        amount0Desired,\n        amount1Desired,\n        amount0Min,\n        amount1Min,\n        principal,\n        BigInt(transactionsDeadline),\n      );\n\n      closeLoadingTip(loadingTipKey);\n\n      if (status === \"ok\") {\n        openSuccessTip(t`Add Liquidity Successfully`);\n\n        handleBackToPosition();\n      } else if (status === \"err\") {\n        openErrorTip(getLocaleMessage(message) ?? t`Failed to add liquidity `);\n      }\n    },\n    [position, transactionsDeadline, slippageTolerance, account],\n  );\n\n  const handleOnCancel = useCallback(() => {\n    setConfirmModalShow(false);\n  }, []);\n\n  const isDepositAmountDisabled = useMemo(\n    () =>\n      invalidRange || tickLower === undefined || tickUpper === undefined || (noLiquidity && !startPrice) || poolLoading,\n    [invalidRange, tickLower, tickUpper, startPrice, noLiquidity, poolLoading],\n  );\n\n  const handleTokenToggle = () => {\n    if (!ticksAtLimit[Bound.LOWER] && !ticksAtLimit[Bound.UPPER]) {\n      onLeftRangeInput((invertPrice ? priceLower : priceUpper?.invert())?.toSignificant(6) ?? \"\");\n      onRightRangeInput((invertPrice ? priceUpper : priceLower?.invert())?.toSignificant(6) ?? \"\");\n      onFieldAInput(formattedAmounts[FIELD.CURRENCY_B] ?? \"\");\n    }\n\n    history.push(`/swap/v2/liquidity/add/${currencyIdB}/${currencyIdA}${feeAmount ? `/${feeAmount}` : \"\"}`);\n  };\n\n  return (\n    <Identity onSubmit={handleOnConfirm}>\n      {({ submit, loading }: CallbackProps) => (\n        <>\n          <SwapV2Wrapper>\n            <Grid container justifyContent=\"center\">\n              <Grid item className={classes.container}>\n                <Grid container className={classes.topHeader}>\n                  <Grid item xs={3} container alignItems=\"center\">\n                    <BackIcon\n                      sx={{\n                        cursor: \"pointer\",\n                      }}\n                      onClick={handleBackToPosition}\n                    />\n                  </Grid>\n                  <Grid item xs={6} container justifyContent=\"center\" alignItems=\"center\">\n                    <Typography variant=\"h3\" color=\"textPrimary\" align=\"center\">\n                      <Trans>Add Liquidity</Trans>\n                    </Typography>\n                  </Grid>\n                  <Grid item container alignItems=\"center\" xs={3} sx={{ position: \"relative\" }}>\n                    <Grid item xs>\n                      <Grid container justifyContent=\"flex-end\">\n                        <Typography\n                          // sx={{ paddingRight: \"60px\", cursor: \"pointer\" }}\n                          sx={{ cursor: \"pointer\" }}\n                          color=\"secondary\"\n                          component=\"span\"\n                          onClick={clearAll}\n                        >\n                          <Trans>clear all</Trans>\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    {/* <SwapSettingIcon type=\"mint\" /> */}\n                  </Grid>\n                </Grid>\n                <Box className={classes.outerBox}>\n                  <Box>\n                    <Typography variant=\"h4\" color=\"textPrimary\">\n                      <Trans>Select Pair</Trans>\n                    </Typography>\n                    <Grid container mt={2} spacing=\"12px\">\n                      <Grid item xs={6}>\n                        <CurrencySelector\n                          currencyId={currencyIdA}\n                          onChange={onTokenAChange}\n                          loading={useCurrencyALoading === UseCurrencyState.LOADING}\n                          disabledCurrency={[...(baseCurrency ? [baseCurrency] : [])]}\n                          version=\"v2\"\n                        />\n                      </Grid>\n                      <Grid item xs={6}>\n                        <CurrencySelector\n                          currencyId={currencyIdB}\n                          onChange={onTokenBChange}\n                          loading={useCurrencyBLoading === UseCurrencyState.LOADING}\n                          disabledCurrency={[...(quoteCurrency ? [quoteCurrency] : [])]}\n                          version=\"v2\"\n                        />\n                      </Grid>\n                    </Grid>\n                    <Box mt={2} sx={!isValidPair ? DISABLED_STYLE : {}}>\n                      <FeeSelector\n                        defaultActiveFee={feeAmount}\n                        onSelect={handleFeeChange}\n                        currencyA={baseCurrency}\n                        currencyB={quoteCurrency}\n                      />\n                    </Box>\n                  </Box>\n                  <Box sx={isDepositAmountDisabled ? DISABLED_STYLE : {}}>\n                    <Typography variant=\"h4\" color=\"textPrimary\">\n                      <Trans>Deposit Amounts</Trans>\n                    </Typography>\n                    <Box mt={2}>\n                      <Box>\n                        <DepositAmount\n                          currency={baseCurrency}\n                          value={formattedAmounts[FIELD.CURRENCY_A]}\n                          onUserInput={onFieldAInput}\n                          locked={depositADisabled}\n                          currencyBalance={currencyBalances?.[FIELD.CURRENCY_A]}\n                          showMaxButton={!atMaxAmounts[FIELD.CURRENCY_A]}\n                          onMax={() => onFieldAInput(maxAmounts[FIELD.CURRENCY_A]?.toExact() ?? \"\")}\n                        />\n                      </Box>\n                      <Box mt={2}>\n                        <DepositAmount\n                          currency={quoteCurrency}\n                          value={formattedAmounts[FIELD.CURRENCY_B]}\n                          onUserInput={onFieldBInput}\n                          locked={depositBDisabled}\n                          currencyBalance={currencyBalances?.[FIELD.CURRENCY_B]}\n                          showMaxButton={!atMaxAmounts[FIELD.CURRENCY_B]}\n                          onMax={() => onFieldBInput(maxAmounts[FIELD.CURRENCY_B]?.toExact() ?? \"\")}\n                        />\n                      </Box>\n                    </Box>\n                    <Box\n                      mt={2}\n                      sx={{\n                        [media960]: {\n                          display: \"block\",\n                        },\n                        \"@media(min-width: 960px)\": {\n                          display: \"none\",\n                        },\n                      }}\n                    >\n                      <AddLiquidityButton size=\"large\" disabled={!isValid} error={errorMessage} onClick={handleOnAdd} />\n                    </Box>\n                  </Box>\n                  <Box className={classes.priceRange} sx={!isValidPair ? DISABLED_STYLE : {}}>\n                    <SetPriceRange\n                      poolLoading={poolLoading}\n                      startPrice={startPrice}\n                      noLiquidity={noLiquidity}\n                      onStartPriceInput={onStartPriceInput}\n                      onLeftRangeInput={onLeftRangeInput}\n                      onRightRangeInput={onRightRangeInput}\n                      getDecrementLower={getDecrementLower}\n                      getIncrementLower={getIncrementLower}\n                      getDecrementUpper={getDecrementUpper}\n                      getIncrementUpper={getIncrementUpper}\n                      getSetFullRange={getSetFullRange}\n                      handleTokenToggle={handleTokenToggle}\n                      baseCurrency={baseCurrency}\n                      quoteCurrency={quoteCurrency}\n                      ticksAtLimit={ticksAtLimit}\n                      feeAmount={feeAmount}\n                      priceLower={priceLower}\n                      priceUpper={priceUpper}\n                      price={price ? parseFloat((invertPrice ? price.invert() : price).toSignificant(8)) : undefined}\n                    />\n                    <Box\n                      mt={2}\n                      sx={{\n                        [media960]: {\n                          display: \"none\",\n                        },\n                      }}\n                    >\n                      <AddLiquidityButton\n                        size=\"large\"\n                        disabled={!isValid || loading}\n                        error={errorMessage}\n                        onClick={handleOnAdd}\n                      />\n                    </Box>\n                  </Box>\n                </Box>\n              </Grid>\n            </Grid>\n          </SwapV2Wrapper>\n\n          {confirmModalShow && !!position && (\n            <AddLiquidityConfirmModal\n              onConfirm={submit}\n              onCancel={handleOnCancel}\n              open={confirmModalShow}\n              position={position}\n            />\n          )}\n        </>\n      )}\n    </Identity>\n  );\n});\n"],"names":["useUserTransactionsDeadline","useAppSelector","state","swapV2Cache","userTransactionsDeadline","useSlippageManager","type","dispatch","useAppDispatch","userSlippage","useCallback","value","updateUserSlippage","DISABLED_STYLE","opacity","pointerEvents","media960","useStyle","makeStyles","theme","container","width","backgroundColor","isDarkTheme","palette","background","level1","colors","lightGray50","borderRadius","radius","padding","breakpoints","down","topHeader","paddingBottom","borderBottom","concat","lightGray200BorderColor","outerBox","paddingTop","display","gap","gridTemplateRows","gridTemplateColumns","gridAutoFlow","priceRange","gridArea","height","memo","_parsedAmounts$depend","_parsedAmounts$depend2","classes","history","useHistory","principal","useAccountPrincipal","currencyIdA","currencyIdB","feeAmount","feeAmountFromUrl","useParams","WICPCanisterId","confirmModalShow","setConfirmModalShow","useState","transactionsDeadline","slippageTolerance","Number","DEFAULT_FEE","useCurrencyALoading","baseCurrency","useToken","useCurrencyBLoading","currencyB","quoteCurrency","wrapped","equals","undefined","independentField","typedValue","startPrice","useMintState","ticks","pricesAtTicks","invalidRange","dependentField","parsedAmounts","depositADisabled","depositBDisabled","ticksAtLimit","errorMessage","position","invertPrice","price","pool","noLiquidity","currencyBalances","atMaxAmounts","maxAmounts","poolLoading","useMintInfo","isValid","Bound","LOWER","tickLower","UPPER","tickUpper","priceLower","priceUpper","formattedAmounts","toExact","onFieldAInput","onFieldBInput","onLeftRangeInput","onRightRangeInput","onStartPriceInput","useMintHandlers","resetMintState","useResetMintState","handleBackToPosition","push","onTokenAChange","token","tokenId","canisterId","toString","onTokenBChange","handleFeeChange","feeValue","clearAll","getDecrementLower","getIncrementLower","getDecrementUpper","getIncrementUpper","getSetFullRange","useRangeCallbacks","isValidPair","handleOnAdd","account","useAccount","openSuccessTip","useSuccessTip","openErrorTip","useErrorTip","openLoadingTip","closeLoadingTip","useLoadingTip","approveCall","useApprove","handleOnConfirm","async","identity","_ref","loading","loadingTipKey","i18n","_","id","values","0","symbol","1","amount0Desired","mintAmounts","amount0","amount1Desired","amount1","status","approve0Status","token0","address","spender","approve1Status","token1","message","mintRequest","BigInt","fee","_getLocaleMessage","getLocaleMessage","handleOnCancel","isDepositAmountDisabled","useMemo","handleTokenToggle","_toSignificant","_ref2","_toSignificant2","_ref3","_formattedAmounts$FIE","invert","toSignificant","FIELD","CURRENCY_B","_jsx","Identity","onSubmit","children","_ref4","submit","_jsxs","_Fragment","SwapV2Wrapper","Grid","justifyContent","item","className","xs","alignItems","BackIcon","sx","cursor","onClick","Typography","variant","color","align","Trans","component","Box","mt","spacing","CurrencySelector","currencyId","onChange","UseCurrencyState","LOADING","disabledCurrency","version","FeeSelector","defaultActiveFee","onSelect","currencyA","DepositAmount","currency","CURRENCY_A","onUserInput","locked","currencyBalance","showMaxButton","onMax","_maxAmounts$FIELD$CUR","_maxAmounts$FIELD$CUR2","_maxAmounts$FIELD$CUR3","_maxAmounts$FIELD$CUR4","AddLiquidityButton","size","disabled","error","SetPriceRange","parseFloat","AddLiquidityConfirmModal","onConfirm","onCancel","open"],"sourceRoot":""}
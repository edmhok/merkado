{"version":3,"file":"static/js/99.f7c1d5ee.chunk.js","mappings":"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","sources":["components/swap/AddLiquidityConfirmModal.tsx","hooks/swap/usePriceInvert.ts","assets/images/swap/Lock.tsx","components/swap/SwapDepositAmount.tsx","utils/swap/mint.ts","utils/swap/getTickToPrice.ts","utils/swap/maxAmountSpend.ts","store/swap/liquidity/hooks.ts"],"sourcesContent":["import { useState, useMemo } from \"react\";\nimport { Typography, Grid, Button } from \"@mui/material\";\nimport SwapModal from \"components/modal/swap\";\nimport { formatTickPrice } from \"utils/swap/formatTickPrice\";\nimport { Bound } from \"constants/swap\";\nimport { Trans } from \"@lingui/macro\";\nimport { SyncAlt as SyncAltIcon } from \"@mui/icons-material\";\nimport { Position, Token } from \"@w2e/swap-sdk\";\nimport { useTicksAtLimitInvert } from \"hooks/swap/usePriceInvert\";\n\nexport interface AddLiquidityConfirmModalProps {\n  open: boolean;\n  onCancel: () => void;\n  onConfirm: () => void;\n  position: Position;\n  baseCurrencyDefault?: Token;\n}\n\nexport default function AddLiquidityConfirmModal({\n  open,\n  onCancel,\n  onConfirm,\n  position,\n  baseCurrencyDefault,\n}: AddLiquidityConfirmModalProps) {\n  const currency0 = position?.pool?.token0;\n  const currency1 = position?.pool?.token1;\n\n  const [manuallyInverted, setManuallyInverted] = useState(false);\n\n  const baseCurrency = useMemo(() => {\n    const base = baseCurrencyDefault\n      ? baseCurrencyDefault === currency0\n        ? currency0\n        : baseCurrencyDefault === currency1\n          ? currency1\n          : currency0\n      : currency0;\n\n    if (manuallyInverted) {\n      if (base === currency0) return currency1;\n      return currency0;\n    }\n\n    return base;\n  }, [baseCurrencyDefault, currency1, currency0, manuallyInverted]);\n\n  const sorted = baseCurrency === currency0;\n  const quoteCurrency = sorted ? currency1 : currency0;\n\n  const ticksAtLimit = useTicksAtLimitInvert({\n    position,\n    inverted: manuallyInverted,\n  });\n\n  const { price, priceLower, priceUpper } = useMemo(() => {\n    const price = sorted ? position.pool.priceOf(position.pool.token0) : position.pool.priceOf(position.pool.token1);\n\n    const priceLower = sorted ? position.token0PriceLower : position.token0PriceUpper.invert();\n    const priceUpper = sorted ? position.token0PriceUpper : position.token0PriceLower.invert();\n\n    return {\n      price,\n      priceLower,\n      priceUpper,\n    };\n  }, [sorted, position]);\n\n  const onConvertClick = () => {\n    setManuallyInverted(!manuallyInverted);\n  };\n\n  return (\n    <SwapModal open={open} onClose={onCancel} title=\"Add Liquidity\">\n      <>\n        <Grid container flexDirection=\"column\" spacing={3}>\n          <Grid item container>\n            <Typography>\n              <Trans>Deposited Amount</Trans>\n            </Typography>\n            <Grid item xs container flexDirection=\"column\" justifyContent=\"flex-end\">\n              <Typography color=\"textPrimary\" align=\"right\">\n                {`${position.amount0.toSignificant(6, { groupSeparator: \",\" })} ${currency0.symbol}`}\n              </Typography>\n              <Typography\n                color=\"textPrimary\"\n                align=\"right\"\n                sx={{\n                  marginTop: \"8px\",\n                }}\n              >\n                {`${position.amount1.toSignificant(6, { groupSeparator: \",\" })} ${currency1.symbol}`}\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid item container>\n            <Typography>\n              <Trans>Current Price</Trans>\n            </Typography>\n            <Grid item xs container justifyContent=\"flex-end\">\n              <Typography color=\"textPrimary\" align=\"right\">\n                {`${price.toSignificant(5, { groupSeparator: \",\" })} ${quoteCurrency.symbol} per ${baseCurrency.symbol\n                  }`}\n              </Typography>\n              <SyncAltIcon sx={{ fontSize: \"1rem\", marginLeft: \"6px\", cursor: \"pointer\" }} onClick={onConvertClick} />\n            </Grid>\n          </Grid>\n          <Grid item container>\n            <Typography>\n              <Trans>Price Range</Trans>\n            </Typography>\n            <Grid item xs container justifyContent=\"flex-end\">\n              <Typography color=\"textPrimary\" align=\"right\">\n                {`${formatTickPrice(priceLower, ticksAtLimit, Bound.LOWER)}`} -{\" \"}\n                {`${formatTickPrice(priceUpper, ticksAtLimit, Bound.UPPER)}`}{\" \"}\n                {`${quoteCurrency?.symbol} per ${baseCurrency?.symbol}`}\n              </Typography>\n              <SyncAltIcon sx={{ fontSize: \"1rem\", marginLeft: \"6px\", cursor: \"pointer\" }} onClick={onConvertClick} />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Button variant=\"contained\" size=\"large\" fullWidth sx={{ marginTop: \"40px\" }} onClick={onConfirm}>\n          <Trans>Add</Trans>\n        </Button>\n      </>\n    </SwapModal>\n  );\n}\n","import { useMemo } from \"react\";\nimport { Position } from \"@w2e/swap-sdk\";\nimport { Bound } from \"constants/swap\";\nimport useIsTickAtLimit from \"hooks/swap/useIsTickAtLimit\";\n\nexport function useTicksAtLimitInvert({ position, inverted }: { position: Position; inverted?: boolean }) {\n  const { tickLower, tickUpper } = position || {};\n\n  const feeAmount = position?.pool.fee;\n\n  const _tickAtLimit = useIsTickAtLimit(feeAmount, tickLower, tickUpper);\n\n  const tickAtLimit = useMemo(() => {\n    if (!inverted) return _tickAtLimit;\n\n    return {\n      [Bound.LOWER]: _tickAtLimit[Bound.UPPER] ? true : undefined,\n      [Bound.UPPER]: _tickAtLimit[Bound.LOWER] ? true : undefined,\n    };\n  }, [_tickAtLimit, inverted]);\n\n  return tickAtLimit;\n}\n","import { SvgIcon } from \"@mui/material\";\n\nexport default (props: any) => {\n  return (\n    <SvgIcon viewBox=\"0 0 18 20\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M14.5227 5.39601V6.92935C16.2451 7.46696 17.5 9.02614 17.5 10.8884V15.8253C17.5 18.1308 15.5886 20 13.2322 20H4.7688C2.41136 20 0.5 18.1308 0.5 15.8253V10.8884C0.5 9.02614 1.75595 7.46696 3.47729 6.92935V5.39601C3.48745 2.41479 5.95667 0 8.98476 0C12.0535 0 14.5227 2.41479 14.5227 5.39601ZM9.00508 1.73904C11.0678 1.73904 12.7445 3.37871 12.7445 5.39601V6.7137H5.25553V5.37613C5.26569 3.36878 6.94232 1.73904 9.00508 1.73904ZM9.88912 14.4549C9.88912 14.9419 9.49283 15.3294 8.99492 15.3294C8.50717 15.3294 8.11088 14.9419 8.11088 14.4549V12.2488C8.11088 11.7718 8.50717 11.3843 8.99492 11.3843C9.49283 11.3843 9.88912 11.7718 9.88912 12.2488V14.4549Z\"\n        fill=\"#111936\"\n      />\n    </SvgIcon>\n  );\n};\n","import { Box, Grid, Typography, Chip } from \"@mui/material\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport { CurrencyAmount, Token } from \"@w2e/swap-sdk\";\nimport LockIcon from \"assets/images/swap/Lock\";\nimport { NumberTextField, TokenImage } from \"components/index\";\nimport { SAFE_DECIMALS_LENGTH, MAX_SWAP_INPUT_LENGTH } from \"constants/index\";\nimport { formatCurrencyAmount } from \"utils/swap/formatCurrencyAmount\";\nimport { isDarkTheme } from \"utils\";\nimport { Trans } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\n\nconst useStyle = makeStyles((theme: Theme) => {\n  return {\n    box: {\n      position: \"relative\",\n      borderRadius: `${theme.radius}px`,\n      backgroundColor: theme.palette.background.level3,\n      border: theme.palette.border.gray200,\n    },\n    input: {\n      \"& input\": {\n        textAlign: \"right\",\n        fontSize: \"20px\",\n        fontWeight: 700,\n        // color: theme.textPrimary,\n        [theme.breakpoints.down(\"sm\")]: {\n          fontSize: \"16px\",\n        },\n      },\n      \"& input::placeholder\": {\n        fontSize: \"20px\",\n        fontWeight: 700,\n        [theme.breakpoints.down(\"sm\")]: {\n          fontSize: \"16px\",\n        },\n      },\n    },\n    chip: {\n      padding: \"0 10px\",\n      height: \"44px\",\n      backgroundColor: isDarkTheme(theme) ? theme.palette.background.level2 : theme.colors.lightGray200,\n      borderRadius: `${theme.radius}px`,\n      \"& .MuiChip-label\": {\n        paddingLeft: \"18px\",\n      },\n    },\n    maxButton: {\n      padding: \"1px 3px\",\n      cursor: \"pointer\",\n      borderRadius: \"2px\",\n      backgroundColor: theme.colors.secondaryMain,\n      color: \"#ffffff\",\n    },\n  };\n});\n\nconst LockMask = ({ type }: { type: string | undefined }) => {\n  const theme = useTheme() as Theme;\n\n  return (\n    <Box\n      sx={{\n        position: \"absolute\",\n        width: \"100%\",\n        height: \"100%\",\n        top: 0,\n        left: 0,\n      }}\n    >\n      <Box\n        sx={{\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\",\n          top: 0,\n          left: 0,\n          background: type === \"addLiquidity\" ? theme.palette.background.level2 : theme.palette.background.level1,\n          opacity: 0.9,\n          borderRadius: \"12px\",\n        }}\n      />\n      <Grid\n        container\n        sx={{\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\",\n          top: 0,\n          left: 0,\n          zIndex: 1,\n        }}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <LockIcon />\n        <Typography align=\"center\" color=\"textPrimary\">\n          <Trans>The market price is outside your specified price range. Single-asset deposit only.</Trans>\n        </Typography>\n      </Grid>\n    </Box>\n  );\n};\n\nexport interface SwapDepositAmountProps {\n  currency: Token | undefined;\n  type?: string;\n  value: string | number;\n  locked?: boolean;\n  onUserInput: (value: string) => void;\n  showMaxButton?: boolean;\n  onMax?: () => void;\n  currencyBalance: CurrencyAmount<Token> | undefined;\n}\n\nexport default function SwapDepositAmount({\n  currency,\n  value,\n  locked = false,\n  onUserInput,\n  type,\n  currencyBalance,\n  showMaxButton,\n  onMax,\n}: SwapDepositAmountProps) {\n  const classes = useStyle();\n\n  const decimals = currency?.decimals ?? SAFE_DECIMALS_LENGTH;\n\n  return (\n    <Box sx={{ p: 2 }} className={classes.box}>\n      <Grid container alignItems=\"center\">\n        <Chip\n          className={classes.chip}\n          label={currency?.symbol}\n          avatar={<TokenImage logo={currency?.logo} tokenId={currency?.wrapped.address} />}\n        />\n        <Grid item xs>\n          <NumberTextField\n            value={value}\n            fullWidth\n            className={classes.input}\n            placeholder=\"0.0\"\n            variant=\"standard\"\n            numericProps={{\n              thousandSeparator: true,\n              decimalScale: decimals > SAFE_DECIMALS_LENGTH ? SAFE_DECIMALS_LENGTH : decimals,\n              allowNegative: false,\n              maxLength: MAX_SWAP_INPUT_LENGTH,\n            }}\n            onChange={(e) => {\n              onUserInput(e.target.value);\n            }}\n          />\n        </Grid>\n      </Grid>\n      <Grid container mt={1}>\n        <Grid item mr={1}>\n          <Typography>\n            <Trans>Balance:</Trans> {currency ? formatCurrencyAmount(currencyBalance, currency.decimals) : \"--\"}\n          </Typography>\n        </Grid>\n        {showMaxButton && (\n          <Grid>\n            <Typography fontSize={12} className={classes.maxButton} onClick={onMax}>\n              <Trans>Max</Trans>\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n      {locked && <LockMask type={type} />}\n    </Box>\n  );\n}\n","import {\n  Price,\n  Token,\n  priceToClosestTick,\n  nearestUsableTick,\n  FeeAmount,\n  TICK_SPACINGS,\n  encodeSqrtRatioX96,\n  TickMath,\n} from \"@w2e/swap-sdk\";\nimport JSBI from \"jsbi\";\n\nexport function tryParsePrice(baseToken?: Token, quoteToken?: Token, value?: string) {\n  if (!baseToken || !quoteToken || !value) {\n    return undefined;\n  }\n\n  if (!value.match(/^\\d*\\.?\\d+$/)) {\n    return undefined;\n  }\n\n  const [whole, fraction] = value.split(\".\");\n\n  const decimals = fraction?.length ?? 0;\n  const withoutDecimals = JSBI.BigInt((whole ?? \"\") + (fraction ?? \"\"));\n\n  return new Price(\n    baseToken,\n    quoteToken,\n    JSBI.multiply(JSBI.BigInt(10 ** decimals), JSBI.BigInt(10 ** baseToken.decimals)),\n    JSBI.multiply(withoutDecimals, JSBI.BigInt(10 ** quoteToken.decimals)),\n  );\n}\n\nexport function tryParseTick(\n  baseToken?: Token,\n  quoteToken?: Token,\n  feeAmount?: FeeAmount,\n  value?: string,\n): number | undefined {\n  if (!baseToken || !quoteToken || !feeAmount || !value) {\n    return undefined;\n  }\n\n  const price = tryParsePrice(baseToken, quoteToken, value);\n\n  if (!price) {\n    return undefined;\n  }\n\n  let tick: number;\n\n  // check price is within min/max bounds, if outside return min/max\n  const sqrtRatioX96 = encodeSqrtRatioX96(price.numerator, price.denominator);\n\n  if (JSBI.greaterThanOrEqual(sqrtRatioX96, TickMath.MAX_SQRT_RATIO)) {\n    tick = TickMath.MAX_TICK;\n  } else if (JSBI.lessThanOrEqual(sqrtRatioX96, TickMath.MIN_SQRT_RATIO)) {\n    tick = TickMath.MIN_TICK;\n  } else {\n    // this function is agnostic to the base, will always return the correct tick\n    tick = priceToClosestTick(price);\n  }\n\n  return nearestUsableTick(tick, TICK_SPACINGS[feeAmount]);\n}\n","import { Token, Price, tickToPrice } from \"@w2e/swap-sdk\";\n\nexport function getTickToPrice(baseToken?: Token, quoteToken?: Token, tick?: number): Price<Token, Token> | undefined {\n  if (!baseToken || !quoteToken || typeof tick !== \"number\") return undefined;\n  return tickToPrice(baseToken, quoteToken, tick);\n}\n","import { Token, CurrencyAmount } from \"@w2e/swap-sdk\";\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount<Token>): CurrencyAmount<Token> | undefined {\n  if (!currencyAmount) return undefined;\n\n  const maxAmountSubFee = currencyAmount.subtract(\n    CurrencyAmount.fromRawAmount(currencyAmount.currency, currencyAmount.currency.transFee * 2),\n  );\n\n  return maxAmountSubFee;\n}\n","import { useCallback, useMemo } from \"react\";\nimport { useAppSelector, useAppDispatch } from \"store/hooks\";\nimport { Bound, BIG_INT_ZERO, FIELD } from \"constants/swap\";\nimport { TOKEN_STANDARD } from \"@w2e/types\";\nimport {\n  Price,\n  CurrencyAmount,\n  Rounding,\n  nearestUsableTick,\n  TickMath,\n  tickToPrice,\n  TICK_SPACINGS,\n  encodeSqrtRatioX96,\n  priceToClosestTick,\n  Pool,\n  Position,\n  Token,\n  FeeAmount,\n} from \"@w2e/swap-sdk\";\nimport { tryParseTick } from \"utils/swap/mint\";\nimport { tryParseAmount, inputNumberCheck } from \"utils/swap\";\nimport { getTickToPrice } from \"utils/swap/getTickToPrice\";\nimport { usePool, PoolState, useTokensHasPairWithBaseToken } from \"hooks/swap/usePools\";\nimport { JSBI } from \"utils/index\";\nimport { useCurrencyBalance } from \"hooks/token/useTokenBalance\";\nimport { maxAmountSpend } from \"utils/swap/maxAmountSpend\";\nimport { t } from \"@lingui/macro\";\nimport { useAccountPrincipal } from \"store/auth/hooks\";\nimport { useSwapPoolAvailable } from \"hooks/swap/v3Calls\";\nimport { getTokenStandard } from \"store/token/cache/hooks\";\nimport {\n  updateFiled,\n  updateLeftRange,\n  updateRightRange,\n  updateStartPrice,\n  updateFullRange,\n  resetMintState,\n} from \"./actions\";\n\nexport function useMintState() {\n  return useAppSelector((state) => state.swapLiquidity);\n}\n\nexport function useResetMintState() {\n  const dispatch = useAppDispatch();\n  return useCallback(() => {\n    dispatch(resetMintState());\n  }, [dispatch]);\n}\n\nconst VALID_TOKEN_STANDARDS_CREATE_POOL: any[] = [TOKEN_STANDARD.ICRC1, TOKEN_STANDARD.ICRC2];\n\nexport function useMintInfo(\n  currencyA: Token | undefined,\n  currencyB: Token | undefined,\n  feeAmount: FeeAmount | undefined,\n  baseCurrency: Token | undefined,\n  existingPosition?: Position,\n  inverted?: boolean | undefined,\n) {\n  const principal = useAccountPrincipal();\n  const {\n    independentField,\n    typedValue,\n    leftRangeValue: leftRangeTypedValue,\n    rightRangeValue: rightRangeTypedValue,\n    startPrice,\n  } = useMintState();\n\n  const dependentField = independentField === FIELD.CURRENCY_A ? FIELD.CURRENCY_B : FIELD.CURRENCY_A;\n\n  const [tokenA, tokenB, baseToken] = useMemo(\n    () => [currencyA?.wrapped, currencyB?.wrapped, baseCurrency?.wrapped],\n    [currencyA, currencyB, baseCurrency],\n  );\n\n  const currencies = useMemo(\n    () => ({\n      [FIELD.CURRENCY_A]: currencyA,\n      [FIELD.CURRENCY_B]: currencyB,\n    }),\n    [currencyA, currencyB],\n  );\n\n  const [token0, token1] = useMemo(\n    () =>\n      tokenA && tokenB ? (tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]) : [undefined, undefined],\n    [tokenA, tokenB],\n  );\n\n  const tokens = useMemo(() => (tokenA && tokenB ? [tokenA.address, tokenB.address] : undefined), [tokenA, tokenB]);\n\n  const hasPairWithBaseToken = useTokensHasPairWithBaseToken(tokens);\n\n  const { result: tokenABalance } = useCurrencyBalance(principal, tokenA);\n  const { result: tokenBBalance } = useCurrencyBalance(principal, tokenB);\n\n  const currencyBalances = {\n    [FIELD.CURRENCY_A]: tokenABalance,\n    [FIELD.CURRENCY_B]: tokenBBalance,\n  };\n\n  const [poolState, pool] = usePool(currencyA, currencyB, feeAmount);\n\n  const noLiquidity = poolState === PoolState.NOT_EXISTS;\n  const poolLoading = poolState === PoolState.LOADING;\n\n  const invertPrice = Boolean(baseToken && token0 && !baseToken.equals(token0));\n\n  const available = useSwapPoolAvailable(pool?.id);\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const parsedQuoteAmount = tryParseAmount(startPrice || \"0.1\", invertPrice ? token0 : token1);\n      if (parsedQuoteAmount && token0 && token1) {\n        const baseAmount = tryParseAmount(\"1\", invertPrice ? token1 : token0);\n\n        const price =\n          baseAmount && parsedQuoteAmount\n            ? new Price(\n                baseAmount.currency,\n                parsedQuoteAmount.currency,\n                baseAmount.quotient,\n                parsedQuoteAmount.quotient,\n              )\n            : undefined;\n\n        return (invertPrice ? price?.invert() : price) ?? undefined;\n      }\n      return undefined;\n    }\n    return pool && token0 ? pool.priceOf(token0) : undefined;\n  }, [noLiquidity, startPrice, invertPrice, token1, token0, pool]);\n\n  const invalidPrice = useMemo(() => {\n    const sqrtRatioX96 = price ? encodeSqrtRatioX96(price.numerator, price.denominator) : undefined;\n    const invalid =\n      price &&\n      sqrtRatioX96 &&\n      !(\n        JSBI.greaterThanOrEqual(sqrtRatioX96, TickMath.MIN_SQRT_RATIO) &&\n        JSBI.lessThan(sqrtRatioX96, TickMath.MAX_SQRT_RATIO)\n      );\n    return invalid;\n  }, [price]);\n\n  const mockPool = useMemo(() => {\n    if (tokenA && tokenB && feeAmount && price && !invalidPrice) {\n      const currentTick = priceToClosestTick(price);\n      const currentSqrt = TickMath.getSqrtRatioAtTick(currentTick);\n\n      return new Pool(\"\", tokenA, tokenB, feeAmount, currentSqrt, JSBI.BigInt(0), currentTick, []);\n    }\n\n    return undefined;\n  }, [feeAmount, invalidPrice, price, tokenA, tokenB]);\n\n  const poolForPosition = pool ?? mockPool;\n\n  const tickSpaceLimits = useMemo(\n    () => ({\n      [Bound.LOWER]: feeAmount ? nearestUsableTick(TickMath.MIN_TICK, TICK_SPACINGS[feeAmount]) : undefined,\n      [Bound.UPPER]: feeAmount ? nearestUsableTick(TickMath.MAX_TICK, TICK_SPACINGS[feeAmount]) : undefined,\n    }),\n    [feeAmount],\n  );\n\n  const ticks = useMemo(() => {\n    return {\n      [Bound.LOWER]:\n        typeof existingPosition?.tickLower === \"number\"\n          ? existingPosition.tickLower\n          : (invertPrice && typeof rightRangeTypedValue === \"boolean\") ||\n            (!invertPrice && typeof leftRangeTypedValue === \"boolean\") ||\n            // if no liquidity, full range by default\n            (noLiquidity &&\n              ((invertPrice && rightRangeTypedValue === \"\") || (!invertPrice && leftRangeTypedValue === \"\")))\n          ? tickSpaceLimits[Bound.LOWER]\n          : invertPrice\n          ? tryParseTick(token1, token0, feeAmount, rightRangeTypedValue.toString())\n          : tryParseTick(token0, token1, feeAmount, leftRangeTypedValue.toString()),\n      [Bound.UPPER]:\n        typeof existingPosition?.tickUpper === \"number\"\n          ? existingPosition.tickUpper\n          : (!invertPrice && typeof rightRangeTypedValue === \"boolean\") ||\n            (invertPrice && typeof leftRangeTypedValue === \"boolean\") ||\n            // if no liquidity, full range by default\n            (noLiquidity &&\n              ((!invertPrice && rightRangeTypedValue === \"\") || (invertPrice && leftRangeTypedValue === \"\")))\n          ? tickSpaceLimits[Bound.UPPER]\n          : invertPrice\n          ? tryParseTick(token1, token0, feeAmount, leftRangeTypedValue.toString())\n          : tryParseTick(token0, token1, feeAmount, rightRangeTypedValue.toString()),\n    };\n  }, [\n    existingPosition,\n    feeAmount,\n    invertPrice,\n    leftRangeTypedValue,\n    rightRangeTypedValue,\n    token0,\n    token1,\n    tickSpaceLimits,\n    noLiquidity,\n  ]);\n\n  const { [Bound.LOWER]: tickLower, [Bound.UPPER]: tickUpper } = ticks || {};\n\n  const _ticksAtLimit = useMemo(\n    () => ({\n      [Bound.LOWER]: feeAmount && tickLower === tickSpaceLimits.LOWER,\n      [Bound.UPPER]: feeAmount && tickUpper === tickSpaceLimits.UPPER,\n    }),\n    [tickSpaceLimits, tickLower, tickUpper, feeAmount],\n  );\n\n  const ticksAtLimit = useMemo(() => {\n    if (!inverted) return _ticksAtLimit;\n\n    return {\n      [Bound.LOWER]: _ticksAtLimit[Bound.UPPER] ? true : undefined,\n      [Bound.UPPER]: _ticksAtLimit[Bound.LOWER] ? true : undefined,\n    };\n  }, [_ticksAtLimit, inverted]);\n\n  const invalidRange = Boolean(\n    typeof tickLower === \"number\" && typeof tickUpper === \"number\" && tickLower >= tickUpper,\n  );\n\n  const pricesAtTicks = useMemo(() => {\n    return {\n      [Bound.LOWER]: getTickToPrice(token0, token1, ticks[Bound.LOWER]),\n      [Bound.UPPER]: getTickToPrice(token0, token1, ticks[Bound.UPPER]),\n    };\n  }, [token0, token1, ticks]);\n  const { [Bound.LOWER]: lowerPrice, [Bound.UPPER]: upperPrice } = pricesAtTicks;\n\n  const outOfRange = Boolean(\n    !invalidRange && price && lowerPrice && upperPrice && (price.lessThan(lowerPrice) || price.greaterThan(upperPrice)),\n  );\n\n  const independentAmount = tryParseAmount(typedValue, currencies[independentField]);\n\n  const dependentAmount = useMemo(() => {\n    // we wrap the currencies just to get the price in terms of the other token\n    const wrappedIndependentAmount = independentAmount?.wrapped;\n    const dependentCurrency = dependentField === FIELD.CURRENCY_B ? currencyB : currencyA;\n    if (\n      independentAmount &&\n      wrappedIndependentAmount &&\n      typeof tickLower === \"number\" &&\n      typeof tickUpper === \"number\" &&\n      poolForPosition\n    ) {\n      if (outOfRange || invalidRange) {\n        return undefined;\n      }\n\n      const position = wrappedIndependentAmount.currency.equals(poolForPosition.token0)\n        ? Position.fromAmount0({\n            pool: poolForPosition,\n            tickLower,\n            tickUpper,\n            amount0: independentAmount.quotient,\n            useFullPrecision: true,\n          })\n        : Position.fromAmount1({\n            pool: poolForPosition,\n            tickLower,\n            tickUpper,\n            amount1: independentAmount.quotient,\n          });\n\n      const dependentTokenAmount = wrappedIndependentAmount.currency.equals(poolForPosition.token0)\n        ? position.amount1\n        : position.amount0;\n      return dependentCurrency && CurrencyAmount.fromRawAmount(dependentCurrency, dependentTokenAmount.quotient);\n    }\n\n    return undefined;\n  }, [\n    independentAmount,\n    outOfRange,\n    dependentField,\n    currencyB,\n    currencyA,\n    tickLower,\n    tickUpper,\n    poolForPosition,\n    invalidRange,\n  ]);\n\n  const parsedAmounts = useMemo(() => {\n    return {\n      [FIELD.CURRENCY_A]: independentField === FIELD.CURRENCY_A ? independentAmount : dependentAmount,\n      [FIELD.CURRENCY_B]: independentField === FIELD.CURRENCY_A ? dependentAmount : independentAmount,\n    };\n  }, [dependentAmount, independentAmount, independentField]);\n\n  const deposit0Disabled = Boolean(\n    typeof tickUpper === \"number\" && poolForPosition && poolForPosition.tickCurrent >= tickUpper,\n  );\n\n  const deposit1Disabled = Boolean(\n    typeof tickLower === \"number\" && poolForPosition && poolForPosition.tickCurrent <= tickLower,\n  );\n\n  const depositADisabled =\n    invalidRange ||\n    Boolean(\n      (deposit0Disabled && poolForPosition && tokenA && poolForPosition.token0.equals(tokenA)) ||\n        (deposit1Disabled && poolForPosition && tokenA && poolForPosition.token1.equals(tokenA)),\n    );\n\n  const depositBDisabled =\n    invalidRange ||\n    Boolean(\n      (deposit0Disabled && poolForPosition && tokenB && poolForPosition.token0.equals(tokenB)) ||\n        (deposit1Disabled && poolForPosition && tokenB && poolForPosition.token1.equals(tokenB)),\n    );\n\n  const position = useMemo(() => {\n    if (\n      !poolForPosition ||\n      !tokenA ||\n      !tokenB ||\n      typeof tickLower !== \"number\" ||\n      typeof tickUpper !== \"number\" ||\n      invalidRange\n    ) {\n      return undefined;\n    }\n\n    const amount0 = !deposit0Disabled\n      ? parsedAmounts?.[tokenA.equals(poolForPosition.token0) ? FIELD.CURRENCY_A : FIELD.CURRENCY_B]?.quotient\n      : BIG_INT_ZERO;\n    const amount1 = !deposit1Disabled\n      ? parsedAmounts?.[tokenA.equals(poolForPosition.token0) ? FIELD.CURRENCY_B : FIELD.CURRENCY_A]?.quotient\n      : BIG_INT_ZERO;\n\n    if (amount0 !== undefined && amount1 !== undefined) {\n      return Position.fromAmounts({\n        pool: poolForPosition,\n        tickLower,\n        tickUpper,\n        amount0,\n        amount1,\n        useFullPrecision: true,\n      });\n    }\n\n    return undefined;\n  }, [\n    parsedAmounts,\n    poolForPosition,\n    tokenA,\n    tokenB,\n    deposit0Disabled,\n    deposit1Disabled,\n    invalidRange,\n    tickLower,\n    tickUpper,\n  ]);\n\n  const maxAmounts: { [field in FIELD]?: CurrencyAmount<Token> } = [FIELD.CURRENCY_A, FIELD.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      };\n    },\n    {},\n  );\n\n  const atMaxAmounts: { [field in FIELD]?: CurrencyAmount<Token> } = [FIELD.CURRENCY_A, FIELD.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? \"0\"),\n      };\n    },\n    {},\n  );\n\n  let errorMessage: string | undefined;\n\n  if (hasPairWithBaseToken !== true) errorMessage = errorMessage ?? t`No pair with icp`;\n\n  if (inputNumberCheck(typedValue) === false) errorMessage = errorMessage ?? t`Amount exceeds limit`;\n\n  if (poolState === PoolState.INVALID) {\n    errorMessage = errorMessage ?? t`Invalid pair`;\n  }\n\n  if (invalidPrice) {\n    errorMessage = errorMessage ?? t`Invalid price input`;\n  }\n\n  if (invalidRange) {\n    errorMessage = errorMessage ?? t`Invalid Range`;\n  }\n\n  if (\n    (!parsedAmounts[FIELD.CURRENCY_A] && !depositADisabled) ||\n    (!parsedAmounts[FIELD.CURRENCY_B] && !depositBDisabled)\n  ) {\n    errorMessage = errorMessage ?? t`Enter an amount`;\n  }\n\n  if (typeof available === \"boolean\" && !available) {\n    errorMessage = errorMessage ?? t`This pool is not available now`;\n  }\n\n  if (poolState === PoolState.NOT_CHECK) {\n    errorMessage = errorMessage ?? t`Waiting for verify the pool...`;\n  }\n\n  const { [FIELD.CURRENCY_A]: currencyAAmount, [FIELD.CURRENCY_B]: currencyBAmount } = parsedAmounts;\n\n  if (\n    currencyA &&\n    currencyAAmount &&\n    currencyBalances?.[FIELD.CURRENCY_A]?.lessThan(\n      currencyAAmount.add(CurrencyAmount.fromRawAmount(currencyA.wrapped, currencyA.transFee)),\n    )\n  ) {\n    errorMessage = errorMessage ?? `Insufficient ${currencyA?.symbol} balance`;\n  }\n\n  if (\n    currencyB &&\n    currencyBAmount &&\n    currencyBalances?.[FIELD.CURRENCY_B]?.lessThan(\n      currencyBAmount.add(CurrencyAmount.fromRawAmount(currencyB.wrapped, currencyB.transFee)),\n    )\n  ) {\n    errorMessage = errorMessage ?? `Insufficient ${currencyB?.symbol} balance`;\n  }\n\n  if (\n    currencyA &&\n    currencyAAmount &&\n    !depositADisabled &&\n    !currencyAAmount.greaterThan(CurrencyAmount.fromRawAmount(currencyA.wrapped, currencyA.transFee))\n  ) {\n    errorMessage = errorMessage ?? t`${currencyA?.symbol} amount must greater than trans fee`;\n  }\n\n  if (\n    currencyB &&\n    currencyBAmount &&\n    !depositBDisabled &&\n    !currencyBAmount.greaterThan(CurrencyAmount.fromRawAmount(currencyB.wrapped, currencyB.transFee))\n  ) {\n    errorMessage = errorMessage ?? t`${currencyB?.symbol} amount must greater than trans fee`;\n  }\n\n  if (\n    (!VALID_TOKEN_STANDARDS_CREATE_POOL.includes(getTokenStandard(currencyB?.address)) ||\n      !VALID_TOKEN_STANDARDS_CREATE_POOL.includes(getTokenStandard(currencyA?.address))) &&\n    noLiquidity\n  ) {\n    errorMessage = errorMessage ?? t`Only ICRC1 and ICRC2 support`;\n  }\n\n  return {\n    ticks,\n    pricesAtTicks,\n    invalidRange,\n    outOfRange,\n    invalidPrice,\n    parsedAmounts,\n    dependentField,\n    depositADisabled,\n    depositBDisabled,\n    ticksAtLimit,\n    errorMessage,\n    position,\n    price,\n    invertPrice,\n    pool,\n    noLiquidity,\n    currencyBalances,\n    atMaxAmounts,\n    maxAmounts,\n    poolLoading,\n  };\n}\n\nexport function useMintHandlers() {\n  const dispatch = useAppDispatch();\n\n  const onFieldAInput = (value: string) => {\n    dispatch(\n      updateFiled({\n        field: FIELD.CURRENCY_A,\n        typedValue: value,\n      }),\n    );\n  };\n\n  const onFieldBInput = (value: string) => {\n    dispatch(\n      updateFiled({\n        field: FIELD.CURRENCY_B,\n        typedValue: value,\n      }),\n    );\n  };\n\n  const onLeftRangeInput = (value: string) => {\n    dispatch(updateLeftRange(value));\n  };\n\n  const onRightRangeInput = (value: string) => {\n    dispatch(updateRightRange(value));\n  };\n\n  const onStartPriceInput = (value: string) => {\n    dispatch(updateStartPrice(value));\n  };\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n    onLeftRangeInput,\n    onRightRangeInput,\n    onStartPriceInput,\n  };\n}\n\nexport function useRangeCallbacks(\n  baseCurrency: Token | undefined,\n  quoteCurrency: Token | undefined,\n  feeAmount: FeeAmount,\n  tickLower: number | undefined,\n  tickUpper: number | undefined,\n  pool: Pool | undefined | null,\n) {\n  const dispatch = useAppDispatch();\n\n  const baseToken = useMemo(() => baseCurrency?.wrapped, [baseCurrency]);\n  const quoteToken = useMemo(() => quoteCurrency?.wrapped, [quoteCurrency]);\n\n  const getDecrementLower = useCallback(() => {\n    if (baseToken && quoteToken && typeof tickLower === \"number\" && feeAmount) {\n      const newPrice = tickToPrice(baseToken, quoteToken, tickLower - TICK_SPACINGS[feeAmount]);\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP);\n    }\n    // use pool current tick as starting tick if we have pool but no tick input\n    if (!(typeof tickLower === \"number\") && baseToken && quoteToken && feeAmount && pool) {\n      const newPrice = tickToPrice(baseToken, quoteToken, pool.tickCurrent - TICK_SPACINGS[feeAmount]);\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP);\n    }\n    return \"\";\n  }, [baseToken, quoteToken, tickLower, feeAmount, pool]);\n\n  const getIncrementLower = useCallback(() => {\n    if (baseToken && quoteToken && typeof tickLower === \"number\" && feeAmount) {\n      const newPrice = tickToPrice(baseToken, quoteToken, tickLower + TICK_SPACINGS[feeAmount]);\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP);\n    }\n    // use pool current tick as starting tick if we have pool but no tick input\n    if (!(typeof tickLower === \"number\") && baseToken && quoteToken && feeAmount && pool) {\n      const newPrice = tickToPrice(baseToken, quoteToken, pool.tickCurrent + TICK_SPACINGS[feeAmount]);\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP);\n    }\n    return \"\";\n  }, [baseToken, quoteToken, tickLower, feeAmount, pool]);\n\n  const getDecrementUpper = useCallback(() => {\n    if (baseToken && quoteToken && typeof tickUpper === \"number\" && feeAmount) {\n      const newPrice = tickToPrice(baseToken, quoteToken, tickUpper - TICK_SPACINGS[feeAmount]);\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP);\n    }\n    // use pool current tick as starting tick if we have pool but no tick input\n    if (!(typeof tickUpper === \"number\") && baseToken && quoteToken && feeAmount && pool) {\n      const newPrice = tickToPrice(baseToken, quoteToken, pool.tickCurrent - TICK_SPACINGS[feeAmount]);\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP);\n    }\n    return \"\";\n  }, [baseToken, quoteToken, tickUpper, feeAmount, pool]);\n\n  const getIncrementUpper = useCallback(() => {\n    if (baseToken && quoteToken && typeof tickUpper === \"number\" && feeAmount) {\n      const newPrice = tickToPrice(baseToken, quoteToken, tickUpper + TICK_SPACINGS[feeAmount]);\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP);\n    }\n    // use pool current tick as starting tick if we have pool but no tick input\n    if (!(typeof tickUpper === \"number\") && baseToken && quoteToken && feeAmount && pool) {\n      const newPrice = tickToPrice(baseToken, quoteToken, pool.tickCurrent + TICK_SPACINGS[feeAmount]);\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP);\n    }\n    return \"\";\n  }, [baseToken, quoteToken, tickUpper, feeAmount, pool]);\n\n  const getSetFullRange = useCallback(() => {\n    dispatch(updateFullRange());\n  }, [dispatch]);\n\n  return {\n    getDecrementLower,\n    getIncrementLower,\n    getDecrementUpper,\n    getIncrementUpper,\n    getSetFullRange,\n  };\n}\n"],"names":["AddLiquidityConfirmModal","_ref","_position$pool","_position$pool2","open","onCancel","onConfirm","position","baseCurrencyDefault","currency0","pool","token0","currency1","token1","manuallyInverted","setManuallyInverted","useState","baseCurrency","useMemo","base","sorted","quoteCurrency","ticksAtLimit","inverted","tickLower","tickUpper","feeAmount","fee","_tickAtLimit","useIsTickAtLimit","Bound","LOWER","UPPER","undefined","useTicksAtLimitInvert","price","priceLower","priceUpper","priceOf","token0PriceLower","token0PriceUpper","invert","onConvertClick","_jsx","SwapModal","onClose","title","children","_jsxs","_Fragment","Grid","container","flexDirection","spacing","item","Typography","Trans","id","xs","justifyContent","color","align","concat","amount0","toSignificant","groupSeparator","symbol","sx","marginTop","amount1","SyncAltIcon","fontSize","marginLeft","cursor","onClick","formatTickPrice","Button","variant","size","fullWidth","props","SvgIcon","viewBox","fillRule","clipRule","d","fill","useStyle","makeStyles","theme","box","borderRadius","radius","backgroundColor","palette","background","level3","border","gray200","input","textAlign","fontWeight","breakpoints","down","chip","padding","height","isDarkTheme","level2","colors","lightGray200","paddingLeft","maxButton","secondaryMain","LockMask","type","useTheme","Box","width","top","left","level1","opacity","zIndex","alignItems","LockIcon","SwapDepositAmount","_ref2","_currency$decimals","currency","value","locked","onUserInput","currencyBalance","showMaxButton","onMax","classes","decimals","SAFE_DECIMALS_LENGTH","p","className","Chip","label","avatar","TokenImage","logo","tokenId","wrapped","address","NumberTextField","placeholder","numericProps","thousandSeparator","decimalScale","allowNegative","maxLength","MAX_SWAP_INPUT_LENGTH","onChange","e","target","mt","mr","formatCurrencyAmount","tryParseTick","baseToken","quoteToken","_fraction$length","match","whole","fraction","split","length","withoutDecimals","JSBI","Price","tryParsePrice","tick","sqrtRatioX96","encodeSqrtRatioX96","numerator","denominator","TickMath","MAX_SQRT_RATIO","MAX_TICK","MIN_SQRT_RATIO","MIN_TICK","priceToClosestTick","nearestUsableTick","TICK_SPACINGS","getTickToPrice","tickToPrice","maxAmountSpend","currencyAmount","subtract","CurrencyAmount","fromRawAmount","transFee","useMintState","useAppSelector","state","swapLiquidity","useResetMintState","dispatch","useAppDispatch","useCallback","resetMintState","VALID_TOKEN_STANDARDS_CREATE_POOL","TOKEN_STANDARD","ICRC1","ICRC2","useMintInfo","currencyA","currencyB","existingPosition","_errorMessage","_errorMessage2","_currencyBalances$FIE","_currencyBalances$FIE2","principal","useAccountPrincipal","independentField","typedValue","leftRangeValue","leftRangeTypedValue","rightRangeValue","rightRangeTypedValue","startPrice","dependentField","FIELD","CURRENCY_A","CURRENCY_B","tokenA","tokenB","currencies","sortsBefore","tokens","hasPairWithBaseToken","useTokensHasPairWithBaseToken","result","tokenABalance","useCurrencyBalance","tokenBBalance","currencyBalances","poolState","usePool","noLiquidity","PoolState","NOT_EXISTS","poolLoading","LOADING","invertPrice","Boolean","equals","available","useSwapPoolAvailable","parsedQuoteAmount","tryParseAmount","baseAmount","quotient","invalidPrice","greaterThanOrEqual","lessThan","mockPool","currentTick","currentSqrt","getSqrtRatioAtTick","Pool","BigInt","poolForPosition","tickSpaceLimits","ticks","toString","_ticksAtLimit","invalidRange","pricesAtTicks","lowerPrice","upperPrice","outOfRange","greaterThan","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","Position","fromAmount0","useFullPrecision","fromAmount1","dependentTokenAmount","parsedAmounts","deposit0Disabled","tickCurrent","deposit1Disabled","depositADisabled","depositBDisabled","_parsedAmounts","_parsedAmounts2","BIG_INT_ZERO","fromAmounts","maxAmounts","reduce","accumulator","field","atMaxAmounts","_maxAmounts$field","_parsedAmounts$field","equalTo","errorMessage","_errorMessage3","_errorMessage4","_errorMessage5","_errorMessage6","_errorMessage7","_errorMessage8","i18n","_","inputNumberCheck","INVALID","NOT_CHECK","currencyAAmount","currencyBAmount","_errorMessage9","_errorMessage10","_errorMessage11","_errorMessage12","_errorMessage13","add","values","0","includes","getTokenStandard","useMintHandlers","onFieldAInput","updateFiled","onFieldBInput","onLeftRangeInput","updateLeftRange","onRightRangeInput","updateRightRange","onStartPriceInput","updateStartPrice","useRangeCallbacks","getDecrementLower","Rounding","ROUND_UP","getIncrementLower","getDecrementUpper","getIncrementUpper","getSetFullRange","updateFullRange"],"sourceRoot":""}
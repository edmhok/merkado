{"version":3,"file":"static/js/2274.342385cc.chunk.js","mappings":"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","sources":["components/swap/PositionRangeState.tsx","components/swap/CollectFeeSteps.tsx","hooks/swap/useClaimFees.ts","hooks/swap/usePosition.ts","hooks/useIntervalFetch.ts","types/staking-farm.ts","../node_modules/.pnpm/@mui+material@5.15.20_@emotion+react@11.11.4_@emotion+styled@11.11.5_@types+react@17.0.2_react-dom@17.0.2_react@17.0.2/node_modules/@mui/material/CardActions/cardActionsClasses.js","../node_modules/.pnpm/@mui+material@5.15.20_@emotion+react@11.11.4_@emotion+styled@11.11.5_@types+react@17.0.2_react-dom@17.0.2_react@17.0.2/node_modules/@mui/material/CardActions/CardActions.js","../node_modules/.pnpm/@mui+material@5.15.20_@emotion+react@11.11.4_@emotion+styled@11.11.5_@types+react@17.0.2_react-dom@17.0.2_react@17.0.2/node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/.pnpm/@mui+material@5.15.20_@emotion+react@11.11.4_@emotion+styled@11.11.5_@types+react@17.0.2_react-dom@17.0.2_react@17.0.2/node_modules/@mui/material/CardContent/CardContent.js","hooks/staking-farm/index.ts","views/staking-farm/context.ts","utils/staking-farm.ts","views/staking-farm/components/PositionItem.tsx","views/staking-farm/components/UnStakingModal.tsx","views/staking-farm/components/StakingModal.tsx","views/staking-farm/components/OptionStaking.tsx","views/staking-farm/components/StakingPoolItem.tsx","views/staking-farm/components/GlobalData.tsx","views/staking-farm/components/PageToggle.tsx","views/staking-farm/index.tsx","../packages/hooks/src/staking-farm/index.ts","../packages/swap-sdk/src/utils/getPriceOrderingFromPositionForUI.ts","../packages/swap-sdk/src/utils/invert.ts","../packages/utils/src/explorerLink.ts","../packages/utils/src/time.ts"],"sourcesContent":["import { Box, Typography, SvgIcon } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Trans } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\n\nconst useStyle = makeStyles((theme: Theme) => {\n  return {\n    wrapper: {\n      display: \"flex\",\n      alignItems: \"center\",\n      height: \"24px\",\n      padding: \"0 9px\",\n      borderRadius: \"8px\",\n\n      \"& .MuiTypography-root\": {\n        fontSize: \"12px\",\n        fontWeight: 500,\n      },\n\n      \"&.inRange\": {\n        background: theme.colors.darkPrimary400,\n      },\n\n      \"&.closed\": {\n        background: theme.colors.darkPrimary400,\n      },\n\n      \"&.outOfRange\": {\n        background: \"#FFC107\",\n        \"& .MuiTypography-root\": {\n          color: theme.colors.darkLevel1,\n          marginLeft: \"3px\",\n        },\n      },\n    },\n  };\n});\n\nfunction Marker(props: any) {\n  return (\n    <SvgIcon width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" {...props}>\n      <path\n        d=\"M5.5 3.5H6.5V4.5H5.5V3.5ZM5.5 5.5H6.5V8.5H5.5V5.5ZM6 1C3.24 1 1 3.24 1 6C1 8.76 3.24 11 6 11C8.76 11 11 8.76 11 6C11 3.24 8.76 1 6 1ZM6 10C3.795 10 2 8.205 2 6C2 3.795 3.795 2 6 2C8.205 2 10 3.795 10 6C10 8.205 8.205 10 6 10Z\"\n        fill={props.color ? props.color : \"#111936\"}\n      />\n    </SvgIcon>\n  );\n}\n\nfunction Closed() {\n  const classes = useStyle();\n\n  return (\n    <Box component=\"span\" className={`${classes.wrapper} closed`}>\n      <Marker fontSize=\"12px\" color=\"#fff\" />\n\n      <Typography color=\"#ffffff\" sx={{ marginLeft: \"3px\" }}>\n        <Trans>Closed</Trans>\n      </Typography>\n    </Box>\n  );\n}\n\nfunction OutOfRange() {\n  const classes = useStyle();\n\n  return (\n    <Box className={`${classes.wrapper} outOfRange`}>\n      <Marker fontSize=\"12px\" />\n\n      <Typography>\n        <Trans>Out of range</Trans>\n      </Typography>\n    </Box>\n  );\n}\n\nfunction InRange() {\n  const classes = useStyle();\n\n  return (\n    <Box className={`${classes.wrapper} inRange`}>\n      <Box\n        component=\"span\"\n        sx={{ background: \"#54C081\", width: \"8px\", height: \"8px\", borderRadius: \"50%\", marginRight: \"8px\" }}\n      />\n      <Typography color=\"#ffffff\">\n        <Trans>In range</Trans>\n      </Typography>\n    </Box>\n  );\n}\n\nexport interface PositionRangeStateProps {\n  outOfRange?: boolean | undefined;\n  closed?: boolean | undefined;\n}\n\nexport default function PositionRangeState({ outOfRange, closed }: PositionRangeStateProps) {\n  return closed ? <Closed /> : outOfRange ? <OutOfRange /> : <InRange />;\n}\n","import { Box, Avatar } from \"@mui/material\";\nimport { Token, CurrencyAmount } from \"@w2e/swap-sdk\";\nimport { formatTokenAmount, shorten } from \"@w2e/utils\";\nimport { t, Trans } from \"@lingui/macro\";\nimport { TextButton } from \"components/index\";\nimport { Principal } from \"@dfinity/principal\";\n\nexport interface CollectStepsProps {\n  positionId: bigint;\n  retry?: () => Promise<boolean>;\n  currencyFeeAmount0: CurrencyAmount<Token>;\n  currencyFeeAmount1: CurrencyAmount<Token>;\n  principal: Principal | undefined;\n  handleReclaim: () => void;\n}\n\nfunction TokenAmount({ logo, amount }: { logo: string; amount: string | undefined }) {\n  return (\n    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n      <Avatar sx={{ width: \"16px\", height: \"16px\", margin: \"0 4px 0 0\" }} src={logo}>\n        &nbsp;\n      </Avatar>\n      {amount ?? 0}\n    </Box>\n  );\n}\n\nexport function getCollectFeeSteps({\n  positionId,\n  retry,\n  currencyFeeAmount0,\n  currencyFeeAmount1,\n  principal,\n  handleReclaim,\n}: CollectStepsProps) {\n  const principalString = shorten(principal?.toString() ?? \"\", 12);\n\n  const withdrawAmountA = currencyFeeAmount0.toSignificant(12, { groupSeparator: \",\" });\n  const _withdrawAmountA = currencyFeeAmount0.toSignificant(12);\n  const withdrawAmountB = currencyFeeAmount1.toSignificant(12, { groupSeparator: \",\" });\n  const _withdrawAmountB = currencyFeeAmount1.toSignificant(12);\n\n  const tokenA = currencyFeeAmount0.currency.wrapped;\n  const tokenB = currencyFeeAmount1.currency.wrapped;\n\n  const withdrawAmountALessThanZero = formatTokenAmount(_withdrawAmountA, tokenA.decimals)\n    .minus(tokenA.transFee)\n    .isLessThan(0);\n\n  const withdrawAmountBLessThanZero = formatTokenAmount(_withdrawAmountB, tokenB.decimals)\n    .minus(tokenB.transFee)\n    .isLessThan(0);\n\n  return [\n    {\n      title: `Collect ${tokenA.symbol} and ${tokenB.symbol}`,\n      step: 0,\n      children: [\n        { label: t`Position ID`, value: positionId.toString() },\n        {\n          label: t`Token0`,\n          value: <TokenAmount amount={withdrawAmountA} logo={tokenA.logo} />,\n        },\n        {\n          label: t`Token1`,\n          value: <TokenAmount amount={withdrawAmountB} logo={tokenB.logo} />,\n        },\n      ],\n      errorActions: [\n        <TextButton onClick={retry}>\n          <Trans>Retry</Trans>\n        </TextButton>,\n      ],\n    },\n    {\n      title: withdrawAmountALessThanZero ? t`Unable to withdraw ${tokenA.symbol}` : t`Withdraw ${tokenA.symbol}`,\n      step: 1,\n      children: [\n        {\n          label: t`Amount`,\n          value: <TokenAmount amount={withdrawAmountA} logo={tokenA.logo} />,\n        },\n        { label: t`Principal ID`, value: principalString },\n      ],\n      errorActions: [\n        <TextButton onClick={handleReclaim}>\n          <Trans>Reclaim</Trans>\n        </TextButton>,\n        <TextButton onClick={retry}>\n          <Trans>Retry</Trans>\n        </TextButton>,\n      ],\n      errorMessage: t`Please click Reclaim your tokens if they've transferred to the swap pool.`,\n      skipError: withdrawAmountALessThanZero ? t`The amount of withdrawal is less than the transfer fee` : undefined,\n    },\n    {\n      title: withdrawAmountBLessThanZero ? t`Unable to withdraw ${tokenB.symbol}` : t`Withdraw ${tokenB.symbol}`,\n      step: 2,\n      children: [\n        {\n          label: t`Amount`,\n          value: <TokenAmount amount={withdrawAmountB} logo={tokenB.logo} />,\n        },\n        { label: t`Principal ID`, value: principalString },\n      ],\n      errorActions: [\n        <TextButton onClick={handleReclaim}>\n          <Trans>Reclaim</Trans>\n        </TextButton>,\n        <TextButton onClick={retry}>\n          <Trans>Retry</Trans>\n        </TextButton>,\n      ],\n      errorMessage: t`Please click Reclaim your tokens if they've transferred to the swap pool.`,\n      skipError: withdrawAmountBLessThanZero ? t`The amount of withdrawal is less than the transfer fee` : undefined,\n    },\n  ];\n}\n","import { useCallback } from \"react\";\nimport BigNumber from \"bignumber.js\";\nimport { Pool, CurrencyAmount, Token } from \"@w2e/swap-sdk\";\nimport { t } from \"@lingui/macro\";\nimport { getActorIdentity } from \"components/Identity\";\nimport { useAccountPrincipal } from \"store/auth/hooks\";\nimport { getLocaleMessage } from \"locales/services\";\nimport { useStepCalls, newStepKey } from \"hooks/useStepCall\";\nimport { getCollectFeeSteps } from \"components/swap/CollectFeeSteps\";\nimport { useStepContentManager } from \"store/steps/hooks\";\nimport { useSwapWithdraw, useReclaimCallback } from \"hooks/swap/index\";\nimport { useErrorTip } from \"hooks/useTips\";\nimport { collect } from \"hooks/swap/v3Calls\";\nimport { ExternalTipArgs, OpenExternalTip } from \"types/index\";\n\nexport async function collectPositionFee(pool: string, positionId: bigint) {\n  const identity = await getActorIdentity();\n\n  return await collect(pool, identity, {\n    positionId,\n  });\n}\n\ninterface CollectFeeCallsArgs {\n  currencyFeeAmount0: CurrencyAmount<Token>;\n  pool: Pool;\n  positionId: bigint;\n  currencyFeeAmount1: CurrencyAmount<Token>;\n  openExternalTip: OpenExternalTip;\n  stepKey: string;\n}\n\nfunction useCollectFeeCalls() {\n  const principal = useAccountPrincipal();\n  const [openErrorTip] = useErrorTip();\n  const withdraw = useSwapWithdraw();\n\n  return useCallback(\n    ({ pool, positionId, currencyFeeAmount0, currencyFeeAmount1, openExternalTip, stepKey }: CollectFeeCallsArgs) => {\n      const _collect = async () => {\n        if (!positionId || !principal || !pool) return false;\n\n        const { status, message } = await collectPositionFee(pool.id, positionId);\n\n        if (status === \"ok\") {\n          return true;\n        }\n        openErrorTip(getLocaleMessage(message) ?? t`Failed to claim`);\n        return false;\n      };\n\n      const withdrawCurrencyA = async () => {\n        if (!currencyFeeAmount0 || !pool) return false;\n\n        if (\n          !new BigNumber(currencyFeeAmount0.quotient.toString())\n            .minus(currencyFeeAmount0.currency.transFee)\n            .isGreaterThan(0)\n        )\n          return true;\n\n        return await withdraw(\n          currencyFeeAmount0.currency,\n          pool.id,\n          currencyFeeAmount0.quotient.toString(),\n          ({ message }: ExternalTipArgs) => {\n            openExternalTip({ message, tipKey: stepKey });\n          },\n        );\n      };\n\n      const withdrawCurrencyB = async () => {\n        if (!currencyFeeAmount1 || !pool) return false;\n\n        if (\n          !new BigNumber(currencyFeeAmount1.quotient.toString())\n            .minus(currencyFeeAmount1.currency.transFee)\n            .isGreaterThan(0)\n        )\n          return true;\n\n        const result = await withdraw(\n          currencyFeeAmount1.currency,\n          pool.id,\n          currencyFeeAmount1.quotient.toString(),\n          ({ message }: ExternalTipArgs) => {\n            openExternalTip({ message, tipKey: stepKey });\n          },\n        );\n\n        return result;\n      };\n\n      return [_collect, withdrawCurrencyA, withdrawCurrencyB];\n    },\n    [principal],\n  );\n}\n\ninterface AddLiquidityStepsArgs {\n  positionId: bigint;\n  retry: () => Promise<boolean>;\n  currencyFeeAmount0: CurrencyAmount<Token>;\n  currencyFeeAmount1: CurrencyAmount<Token>;\n}\n\nfunction useCollectFeeSteps() {\n  const principal = useAccountPrincipal();\n  const stepContentManage = useStepContentManager();\n\n  const handleReclaim = useReclaimCallback();\n\n  return useCallback(\n    (key: string, { positionId, retry, currencyFeeAmount0, currencyFeeAmount1 }: AddLiquidityStepsArgs) => {\n      const content = getCollectFeeSteps({\n        positionId,\n        retry,\n        currencyFeeAmount1,\n        currencyFeeAmount0,\n        principal,\n        handleReclaim,\n      });\n\n      stepContentManage(String(key), {\n        content,\n        title: t`Claim Fees Details`,\n      });\n    },\n    [principal],\n  );\n}\n\nexport interface ClaimFeeArgs {\n  currencyFeeAmount0: CurrencyAmount<Token>;\n  pool: Pool;\n  positionId: bigint;\n  currencyFeeAmount1: CurrencyAmount<Token>;\n  openExternalTip: OpenExternalTip;\n}\n\nexport function useCollectFeeCallback() {\n  const getCalls = useCollectFeeCalls();\n  const formatCall = useStepCalls();\n  const initialSteps = useCollectFeeSteps();\n\n  return useCallback(\n    ({ pool, positionId, currencyFeeAmount0, currencyFeeAmount1, openExternalTip }: ClaimFeeArgs) => {\n      const key = newStepKey();\n      const calls = getCalls({\n        pool,\n        positionId,\n        currencyFeeAmount0,\n        currencyFeeAmount1,\n        openExternalTip,\n        stepKey: key,\n      });\n      const { call, reset, retry } = formatCall(calls, key);\n\n      initialSteps(key, { positionId, currencyFeeAmount0, currencyFeeAmount1, retry });\n\n      return { call, reset, retry, key };\n    },\n    [getCalls, formatCall, initialSteps],\n  );\n}\n","import { useMemo } from \"react\";\nimport { Position, Pool } from \"@w2e/swap-sdk\";\nimport { useSwapPoolMetadata } from \"@w2e/hooks\";\nimport { usePool, PoolState } from \"hooks/swap/usePools\";\nimport { useToken } from \"hooks/useCurrency\";\n\nexport interface usePositionProps {\n  poolId: string | undefined;\n  tickLower: bigint | undefined;\n  tickUpper: bigint | undefined;\n  liquidity: bigint | undefined;\n}\n\nexport function usePosition(userPosition: usePositionProps | undefined) {\n  const { result: poolMetadata } = useSwapPoolMetadata(userPosition?.poolId);\n\n  const [, currency0] = useToken(poolMetadata?.token0.address);\n  const [, currency1] = useToken(poolMetadata?.token1.address);\n\n  const [poolState, pool] = usePool(\n    currency0 ?? undefined,\n    currency1 ?? undefined,\n    poolMetadata?.fee ? Number(poolMetadata.fee) : undefined,\n  );\n\n  let position: Position | undefined;\n\n  if (\n    pool &&\n    poolMetadata &&\n    userPosition &&\n    userPosition.tickLower !== undefined &&\n    userPosition.tickUpper !== undefined &&\n    userPosition.liquidity !== undefined\n  ) {\n    position = new Position({\n      pool,\n      liquidity: userPosition.liquidity.toString(),\n      tickLower: Number(userPosition.tickLower),\n      tickUpper: Number(userPosition.tickUpper),\n    });\n  }\n\n  return {\n    loading: poolState === PoolState.LOADING,\n    checking: poolState === PoolState.NOT_CHECK,\n    position,\n    pool: pool ?? undefined,\n  };\n}\n\nexport interface usePositionWithPoolProps {\n  pool: Pool | null | undefined;\n  liquidity: number | string | undefined;\n  tickLower: number | string | undefined;\n  tickUpper: number | string | undefined;\n}\n\nexport function usePositionWithPool({ tickLower, tickUpper, liquidity, pool }: usePositionWithPoolProps) {\n  let position: Position | undefined;\n\n  if (pool && liquidity && (tickLower || tickLower === 0) && (tickUpper || tickUpper === 0)) {\n    position = new Position({\n      pool,\n      liquidity,\n      tickLower: Number(tickLower),\n      tickUpper: Number(tickUpper),\n    });\n  }\n\n  return useMemo(() => position, [position]);\n}\n","import { useState, useEffect, useMemo } from \"react\";\n\nexport function useIntervalFetch<T>(\n  call: (() => Promise<T | undefined>) | undefined,\n  force = false,\n  interval = 5000,\n) {\n  const [data, setData] = useState<T | undefined>(undefined);\n  const [tick, setTick] = useState<number>(0);\n\n  useEffect(() => {\n    async function _call() {\n      if (call) {\n        const result = await call();\n        setData(result);\n      }\n    }\n\n    _call();\n  }, [tick, call, force]);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      if (call) {\n        setTick((prevState) => prevState + 1);\n      }\n    }, interval);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, [interval, call]);\n\n  return useMemo(() => data, [data]);\n}\n","export enum STATE {\n  \"NOT_STARTED\" = \"NOT_STARTED\",\n  \"LIVE\" = \"LIVE\",\n  \"FINISHED\" = \"FINISHED\",\n  \"CLOSED\" = \"CLOSED\",\n}\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(style) ~ :not(style)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n  const {\n      disableSpacing = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { useCallback, useMemo, useState } from \"react\";\nimport { useICPPrice, useUSDPrice } from \"hooks/useUSDPrice\";\nimport { resultFormat, parseTokenAmount, formatDollarAmount } from \"@w2e/utils\";\nimport BigNumber from \"bignumber.js\";\nimport { Token } from \"@w2e/swap-sdk\";\nimport {\n  getV3StakingFarms,\n  usePaginationAllData,\n  getPaginationAllData,\n  useCallsData,\n  getV3UserFarmInfo,\n  getV3UserFarmRewardInfo,\n  getFarmTVL,\n  getFarmUserTVL,\n} from \"@w2e/hooks\";\nimport { v3FarmController, v3Farm } from \"@w2e/actor\";\nimport { type StakingFarmInfo, type ActorIdentity } from \"@w2e/types\";\nimport { useIntervalFetch } from \"hooks/useIntervalFetch\";\nimport { useAccountPrincipalString } from \"store/auth/hooks\";\n\ntype GlobalData = { stakeTokenTVL: string; rewardTokenTVL: string };\n\nexport function useGetGlobalData(): [GlobalData, () => void] {\n  const _ICPPrice = useICPPrice();\n\n  const [data, setData] = useState<GlobalData>({\n    stakeTokenTVL: \"0\",\n    rewardTokenTVL: \"0\",\n  });\n\n  const [forceUpdate, setForceUpdate] = useState(0);\n\n  useMemo(async () => {\n    if (_ICPPrice) {\n      const { data } = resultFormat<{ stakedTokenTVL: number; rewardTokenTVL: number }>(\n        await (await v3FarmController()).getGlobalTVL(),\n      );\n\n      if (data) {\n        setData({\n          stakeTokenTVL: formatDollarAmount(new BigNumber(data.stakedTokenTVL).multipliedBy(_ICPPrice).toFixed(4)),\n          rewardTokenTVL: formatDollarAmount(new BigNumber(data.rewardTokenTVL).multipliedBy(_ICPPrice).toFixed(4)),\n        });\n      }\n    }\n  }, [_ICPPrice, forceUpdate]);\n\n  const update = useCallback(() => {\n    setForceUpdate((prevState) => prevState + 1);\n  }, [setForceUpdate]);\n\n  return [data, update];\n}\n\nexport async function getAllFarms() {\n  const call = async (offset: number, limit: number) => {\n    return await getV3StakingFarms(offset, limit, \"all\");\n  };\n\n  return getPaginationAllData(call, 400);\n}\n\nexport function useAllFarmPools() {\n  const call = useCallback(async (offset: number, limit: number) => {\n    return await getV3StakingFarms(offset, limit, \"all\");\n  }, []);\n\n  return usePaginationAllData(call, 100);\n}\n\nexport function useIntervalUserFarmInfo(canisterId: string | undefined, user: string | undefined, force?: boolean) {\n  const call = useCallback(async () => {\n    if (!canisterId || !user) return undefined;\n    return await getV3UserFarmInfo(canisterId, user);\n  }, [canisterId, user]);\n\n  return useIntervalFetch(call, force);\n}\n\nexport function userIntervalFarmTVL(canisterId: string | undefined, force?: boolean) {\n  const call = useCallback(async () => {\n    if (!canisterId) return undefined;\n    return await getFarmTVL(canisterId);\n  }, [canisterId]);\n\n  return useIntervalFetch(call, force);\n}\n\nexport function userIntervalFarmUserTVL(\n  canisterId: string | undefined,\n  principal: string | undefined,\n  force?: boolean,\n) {\n  const call = useCallback(async () => {\n    if (!canisterId || !principal) return undefined;\n    return await getFarmUserTVL(canisterId, principal);\n  }, [canisterId, principal]);\n\n  return useIntervalFetch(call, force);\n}\n\nexport function useIntervalUserRewardInfo(\n  canisterId: string | undefined,\n  positionIds: bigint[] | undefined,\n  force?: boolean,\n) {\n  const call = useCallback(async () => {\n    if (!canisterId || !positionIds || positionIds.length === 0) return undefined;\n    return await getV3UserFarmRewardInfo(canisterId, positionIds);\n  }, [canisterId, positionIds]);\n\n  return useIntervalFetch(call, force);\n}\n\nexport async function stake(identity: ActorIdentity, farmId: string, positionIndex: bigint) {\n  const result = await (await v3Farm(farmId, identity)).stake(positionIndex);\n  return resultFormat<string>(result);\n}\n\nexport async function unStake(identity: ActorIdentity, farmId: string, tokenId: bigint) {\n  const result = await (await v3Farm(farmId, identity)).unstake(tokenId);\n  return resultFormat<string>(result);\n}\n\nexport function usePoolCycles(canisterId: string | undefined) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId) return undefined;\n      return resultFormat<{ balance: bigint }>(await (await v3Farm(canisterId)).getCycleInfo()).data?.balance;\n    }, [canisterId]),\n  );\n}\n\nexport function useV3StakingCycles(canisterId: string | undefined) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId) return undefined;\n      return resultFormat<{ balance: bigint; available: bigint }>(await (await v3Farm(canisterId)).getCycleInfo()).data;\n    }, [canisterId]),\n  );\n}\n\nexport interface useFarmUSDValueArgs {\n  token0?: Token | undefined;\n  token1?: Token | undefined;\n  rewardToken: Token | undefined;\n  farm: StakingFarmInfo;\n  userRewardAmount: bigint | undefined;\n  userFarmInfo?: StakingFarmInfo | undefined;\n}\n\nexport function useFarmUSDValue({ rewardToken, farm, userRewardAmount }: useFarmUSDValueArgs) {\n  const rewardTokenPrice = useUSDPrice(rewardToken);\n  const icpPrice = useICPPrice();\n\n  const principal = useAccountPrincipalString();\n\n  const farmTVL = userIntervalFarmTVL(farm.farmCid);\n\n  const poolTVL = useMemo(() => {\n    if (!farmTVL || !icpPrice) return 0;\n    return new BigNumber(icpPrice).multipliedBy(farmTVL.stakedTokenTVL).toFixed(3);\n  }, [farmTVL, icpPrice]);\n\n  const totalRewardUSD = useMemo(() => {\n    if (!rewardToken || !rewardTokenPrice) {\n      return 0;\n    }\n\n    const usdValue = new BigNumber(rewardTokenPrice).multipliedBy(farm.totalReward.toString());\n\n    return usdValue.toNumber();\n  }, [rewardToken, farm, rewardTokenPrice]);\n\n  const userRewardUSD = useMemo(() => {\n    if (!rewardToken || !rewardTokenPrice || !userRewardAmount) {\n      return 0;\n    }\n\n    return new BigNumber(rewardTokenPrice)\n      .multipliedBy(parseTokenAmount(userRewardAmount, rewardToken.decimals))\n      .toNumber();\n  }, [rewardToken, rewardTokenPrice, userRewardAmount]);\n\n  const parsedUserRewardAmount = useMemo(() => {\n    if (!rewardToken || !userRewardAmount) return undefined;\n\n    return parseTokenAmount(userRewardAmount, rewardToken.decimals).toNumber();\n  }, [rewardToken, userRewardAmount]);\n\n  const userTVLAmount = userIntervalFarmUserTVL(farm.farmCid, principal);\n\n  const userTVL = useMemo(() => {\n    if (!userTVLAmount || !icpPrice) return 0;\n    return new BigNumber(userTVLAmount).multipliedBy(icpPrice).toFixed(3);\n  }, [userTVLAmount, icpPrice]);\n\n  return useMemo(\n    () => ({\n      poolTVL,\n      totalRewardUSD,\n      userRewardUSD,\n      parsedUserRewardAmount,\n      userTVL,\n    }),\n    [poolTVL, userTVL, userRewardUSD, totalRewardUSD, parsedUserRewardAmount],\n  );\n}\n","import { createContext } from \"react\";\n\nexport interface FarmContextProps {\n  unStakedFarms: string[];\n  updateUnStakedFarms: (farm: string) => void;\n  deleteUnStakedFarms: (farm: string) => void;\n}\n\nexport default createContext<FarmContextProps>({} as FarmContextProps);\n","import type { StakingFarmInfo } from \"@w2e/types\";\n\nexport enum POOL_STATE {\n  LIVE = \"Live\",\n  CLOSURE = \"Closure\",\n  UNSTARTED = \"Unstarted\",\n  FINISHED = \"Finished\",\n}\n\nexport function getFarmsState(pool: StakingFarmInfo): POOL_STATE {\n  if (pool.status.toLowerCase() === POOL_STATE.CLOSURE.toLowerCase()) return POOL_STATE.CLOSURE;\n\n  const now = BigInt(new Date().getTime());\n  const end = pool.endTime * BigInt(1000);\n  const start = pool.startTime * BigInt(1000);\n\n  if (now < start) return POOL_STATE.UNSTARTED;\n  if (now > end) return POOL_STATE.FINISHED;\n\n  return POOL_STATE.LIVE;\n}\n","import { Checkbox, Box, Typography, useTheme } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { usePosition } from \"hooks/swap/usePosition\";\nimport { toFormat } from \"utils/index\";\nimport { TokenImage } from \"components/Image/Token\";\nimport PositionRangeState from \"components/swap/PositionRangeState\";\nimport { useState, useMemo } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { formatTickPrice } from \"utils/swap/formatTickPrice\";\nimport { Bound } from \"constants/swap\";\nimport { getPriceOrderingFromPositionForUI, useInverter } from \"@w2e/swap-sdk\";\nimport useIsTickAtLimit from \"hooks/swap/useIsTickAtLimit\";\nimport LoadingRow from \"components/Loading/LoadingRow\";\nimport { useUSDPriceById } from \"hooks/useUSDPrice\";\nimport { BigNumber } from \"bignumber.js\";\nimport { formatDollarAmount } from \"@w2e/utils\";\n\nconst useStyle = makeStyles(() => ({\n  selectNFTBox: {\n    position: \"relative\",\n  },\n  nft: {\n    width: \"160px\",\n    filter: \"grayscale(100%)\",\n  },\n  checked: {\n    width: \"160px\",\n    border: \"1px solid #5669DC\",\n    filter: \"drop-shadow(0px 0px 4px #5669DC)\",\n    borderRadius: \"22px\",\n  },\n  checkbox: {\n    \"&.noLiquidity\": {\n      filter: \"grayscale(100%)!important\",\n    },\n  },\n}));\n\nfunction ArrowIcon() {\n  return (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0_32128_12869)\">\n        <path d=\"M11.06 5.72656L8 8.7799L4.94 5.72656L4 6.66656L8 10.6666L12 6.66656L11.06 5.72656Z\" fill=\"#111936\" />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_32128_12869\">\n          <rect width=\"16\" height=\"16\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n}\n\ninterface DetailsItemProps {\n  label: string | undefined;\n  value: string | undefined;\n}\n\nfunction DetailsItem({ label, value }: DetailsItemProps) {\n  return (\n    <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n      <Typography>{label}</Typography>\n      <Typography color=\"text.primary\">{value}</Typography>\n    </Box>\n  );\n}\n\nexport type PositionInfo = {\n  id: bigint;\n  tickUpper: bigint;\n  liquidity: bigint;\n  tickLower: bigint;\n};\n\ninterface PositionItemProps {\n  positionInfo: PositionInfo;\n  setSelectedPositionId: (positionId: number | undefined) => void;\n  selectedPositionId: number | undefined;\n  poolId: string;\n}\n\nexport function PositionItem({ positionInfo, selectedPositionId, setSelectedPositionId, poolId }: PositionItemProps) {\n  const classes = useStyle();\n  const theme = useTheme() as Theme;\n\n  const [show, setShow] = useState(false);\n\n  const { position } = usePosition({\n    poolId,\n    tickLower: positionInfo.tickLower,\n    tickUpper: positionInfo.tickUpper,\n    liquidity: positionInfo.liquidity,\n  });\n\n  const pool = position?.pool;\n  const tickUpper = position?.tickUpper;\n  const tickLower = position?.tickLower;\n\n  const token0 = pool?.token0;\n  const token1 = pool?.token1;\n\n  const token0Amount = position?.amount0.toSignificant(8);\n  const token1Amount = position?.amount1.toSignificant(8);\n\n  const outOfRange =\n    pool && (tickUpper || tickUpper === 0) && (tickLower || tickLower === 0)\n      ? pool.tickCurrent < tickLower || pool.tickCurrent >= tickUpper\n      : false;\n\n  const closed = position?.liquidity?.toString() === \"0\";\n\n  const pricesFromPosition = getPriceOrderingFromPositionForUI(position);\n\n  // handle manual inversion\n  const { priceLower, priceUpper, base } = useInverter({\n    priceLower: pricesFromPosition?.priceLower,\n    priceUpper: pricesFromPosition?.priceUpper,\n    quote: pricesFromPosition?.quote,\n    base: pricesFromPosition?.base,\n    invert: false,\n  });\n\n  const inverted = token1 ? base?.equals(token1) : undefined;\n\n  const currencyQuote = inverted ? token0 : token1;\n  const currencyBase = inverted ? token1 : token0;\n\n  const pairName = useMemo(() => {\n    return `${currencyQuote?.symbol} per ${currencyBase?.symbol}`;\n  }, [currencyQuote, currencyBase]);\n\n  const _tickAtLimit = useIsTickAtLimit(pool?.fee, tickLower, tickUpper);\n\n  const tickAtLimit = useMemo(() => {\n    if (!inverted) return _tickAtLimit;\n\n    return {\n      [Bound.LOWER]: _tickAtLimit[Bound.UPPER] ? true : undefined,\n      [Bound.UPPER]: _tickAtLimit[Bound.LOWER] ? true : undefined,\n    };\n  }, [_tickAtLimit, inverted]);\n\n  const token0USDPrice = useUSDPriceById(position?.pool.token0.address);\n  const token1USDPrice = useUSDPriceById(position?.pool.token1.address);\n\n  const totalUSDValue = useMemo(() => {\n    if (!position || !token0USDPrice || !token1USDPrice) return undefined;\n\n    const totalUSD = new BigNumber(token0USDPrice)\n      .multipliedBy(position.amount0.toExact())\n      .plus(new BigNumber(token1USDPrice).multipliedBy(position.amount1.toExact()));\n\n    return totalUSD.toString();\n  }, [position, token0USDPrice, token1USDPrice]);\n\n  const handleToggle = () => {\n    setShow(!show);\n  };\n\n  return (\n    <Box className={classes.selectNFTBox}>\n      {position ? (\n        <>\n          <Box\n            sx={{\n              display: \"grid\",\n              gridTemplateColumns: \"1fr auto\",\n              height: \"64px\",\n              alignItems: \"center\",\n              cursor: \"pointer\",\n              padding: \"0 12px\",\n              \"&:hover\": {\n                background: theme.palette.background.level2,\n              },\n            }}\n            onClick={handleToggle}\n          >\n            <Box\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                gap: \"0 100px\",\n                \"@media(max-width:640px)\": {\n                  flexDirection: \"column\",\n                  gap: \"4px 0\",\n                  alignItems: \"flex-start\",\n                },\n              }}\n            >\n              <Box\n                sx={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"0 5px\",\n                  \"@media(max-width: 640px)\": {\n                    gap: \"0 2px\",\n                  },\n                }}\n              >\n                <Checkbox\n                  className={classes.checkbox}\n                  checked={Number(positionInfo.id) === selectedPositionId}\n                  onChange={() => {\n                    if (selectedPositionId === Number(positionInfo.id)) {\n                      setSelectedPositionId(undefined);\n                      return;\n                    }\n                    if (positionInfo.liquidity !== BigInt(0)) {\n                      setSelectedPositionId(Number(positionInfo.id));\n                    }\n                  }}\n                  onClick={(event: any) => {\n                    event.stopPropagation();\n                    event.nativeEvent.stopImmediatePropagation();\n                  }}\n                />\n\n                <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                  <TokenImage logo={position.pool.token0.logo} size=\"24px\" tokenId={position.pool.token0.address} />\n                  <Box sx={{ position: \"relative\", left: \"-5px\" }}>\n                    <TokenImage logo={position.pool.token1.logo} size=\"24px\" tokenId={position.pool.token1.address} />\n                  </Box>\n                </Box>\n\n                <Typography\n                  color=\"text.primary\"\n                  fontWeight={500}\n                  sx={{\n                    \"@media(max-width: 640px)\": {\n                      fontSize: \"12px\",\n                    },\n                  }}\n                >\n                  {position.pool.token0.symbol} / {position.pool.token1.symbol}\n                </Typography>\n              </Box>\n\n              <Typography\n                color=\"text.primary\"\n                sx={{\n                  \"@media(max-width: 640px)\": {\n                    fontSize: \"12px\",\n                    padding: \"0 0 0 32px\",\n                  },\n                }}\n              >\n                {totalUSDValue ? formatDollarAmount(totalUSDValue) : \"--\"}\n              </Typography>\n            </Box>\n\n            <Box sx={{ display: \"flex\", alignItems: \"center\", gap: \"0 4px\" }}>\n              <PositionRangeState outOfRange={outOfRange} closed={closed} />\n              <ArrowIcon />\n            </Box>\n          </Box>\n\n          {show ? (\n            <Box\n              sx={{\n                background: theme.palette.background.level2,\n                padding: \"20px 12px\",\n                display: \"flex\",\n                gap: \"24px 0\",\n                flexDirection: \"column\",\n              }}\n            >\n              <DetailsItem\n                label={token0 ? `${token0?.symbol} Amount` : \"--\"}\n                value={token0 ? `${token0Amount} ${token0.symbol}` : \"--\"}\n              />\n              <DetailsItem\n                label={token1 ? `${token1?.symbol} Amount` : \"--\"}\n                value={token1 ? `${token1Amount} ${token1.symbol}` : \"--\"}\n              />\n              <DetailsItem\n                label=\"Current Price\"\n                value={\n                  !!token1 && !!token0\n                    ? inverted\n                      ? pool?.priceOf(token1)\n                        ? `${toFormat(pool?.priceOf(token1).toSignificant(6))} ${pairName}`\n                        : \"--\"\n                      : pool?.priceOf(token0)\n                        ? `${toFormat(pool?.priceOf(token0).toSignificant(6))} ${pairName}`\n                        : \"--\"\n                    : \"--\"\n                }\n              />\n              <DetailsItem\n                label=\"Price Range\"\n                value={`${formatTickPrice(priceLower, tickAtLimit, Bound.LOWER)} - ${formatTickPrice(\n                  priceUpper,\n                  tickAtLimit,\n                  Bound.UPPER,\n                )} ${pairName}`}\n              />\n            </Box>\n          ) : null}\n        </>\n      ) : (\n        <LoadingRow>\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n        </LoadingRow>\n      )}\n    </Box>\n  );\n}\n","import { useState } from \"react\";\nimport { Button, Box, Grid, CircularProgress, useTheme } from \"@mui/material\";\nimport { t } from \"@lingui/macro\";\nimport { useTips } from \"hooks/useTips\";\nimport { getLocaleMessage } from \"locales/services\";\nimport Identity, { CallbackProps } from \"components/Identity\";\nimport { NoData, Modal } from \"components/index\";\nimport type { StakingFarmInfo, StakingFarmDepositArgs, ActorIdentity } from \"@w2e/types\";\nimport { unStake } from \"hooks/staking-farm\";\nimport { Theme } from \"@mui/material/styles\";\nimport { PositionItem } from \"./PositionItem\";\n\nexport interface UnStakingModalProps {\n  open: boolean;\n  onClose: () => void;\n  resetData?: () => void;\n  farm: StakingFarmInfo;\n  userAllPositions: StakingFarmDepositArgs[];\n}\n\nexport default function UnStakingModal({ open, onClose, resetData, farm, userAllPositions }: UnStakingModalProps) {\n  const theme = useTheme() as Theme;\n  const [openTip] = useTips();\n\n  const [confirmLoading, setConfirmLoading] = useState(false);\n\n  const [selectedPositionId, setSelectedPositionId] = useState<number | undefined>(undefined);\n\n  const handelUnStakeToken = async (identity: ActorIdentity) => {\n    if (!identity || !selectedPositionId) return;\n\n    setConfirmLoading(true);\n    const { status, message } = await unStake(identity, farm.farmCid, BigInt(selectedPositionId));\n    openTip(getLocaleMessage(message), status);\n    setConfirmLoading(false);\n    if (resetData) resetData();\n    if (onClose) onClose();\n  };\n\n  const handleSubmit = async (identity: ActorIdentity) => {\n    if (!identity) return;\n    handelUnStakeToken(identity);\n  };\n\n  return (\n    <Modal\n      maxWidth=\"md\"\n      open={open}\n      onClose={onClose}\n      title={t`Select a position`}\n      dialogProps={{\n        sx: {\n          \"& .MuiDialog-paper\": {\n            width: \"632px\",\n          },\n          \"& .MuiDialogContent-root\": {\n            padding: \"0\",\n          },\n          \"& .MuiDialogTitle-root\": {\n            padding: \"8px 12px\",\n          },\n        },\n      }}\n      background={theme.palette.background.level1}\n    >\n      <Grid style={{ minHeight: \"300px\" }}>\n        <Box\n          sx={{\n            maxHeight: \"340px\",\n            overflow: \"auto\",\n          }}\n        >\n          {userAllPositions.map((position, index) => {\n            return (\n              <PositionItem\n                key={index}\n                poolId={farm.pool}\n                positionInfo={{\n                  id: position.positionId,\n                  liquidity: position.liquidity,\n                  tickLower: position.tickLower,\n                  tickUpper: position.tickUpper,\n                }}\n                selectedPositionId={selectedPositionId}\n                setSelectedPositionId={setSelectedPositionId}\n              />\n            );\n          })}\n\n          {!userAllPositions.length && <NoData />}\n        </Box>\n\n        <Box mt=\"20px\" sx={{ padding: \"0 24px\" }}>\n          <Identity onSubmit={handleSubmit}>\n            {({ submit }: CallbackProps) => (\n              <Button\n                disabled={confirmLoading || !selectedPositionId}\n                variant=\"contained\"\n                fullWidth\n                type=\"button\"\n                onClick={submit}\n                color=\"primary\"\n                size=\"large\"\n                startIcon={confirmLoading ? <CircularProgress size={24} color=\"inherit\" /> : null}\n              >\n                {t`Confirm`}\n              </Button>\n            )}\n          </Identity>\n        </Box>\n      </Grid>\n    </Modal>\n  );\n}\n","import { useState, useMemo } from \"react\";\nimport { Button, Grid, CircularProgress, Box, useTheme } from \"@mui/material\";\nimport { t } from \"@lingui/macro\";\nimport { useTips } from \"hooks/useTips\";\nimport { stake } from \"hooks/staking-farm\";\nimport { getLocaleMessage } from \"locales/services\";\nimport Identity, { CallbackProps } from \"components/Identity\";\nimport { NoData, ListLoading, Modal } from \"components/index\";\nimport { Identity as CallIdentity, ResultStatus } from \"types/global\";\nimport { useAccountPrincipal } from \"store/auth/hooks\";\nimport { useSwapUserPositions, approvePosition } from \"@w2e/hooks\";\nimport type { StakingFarmInfo } from \"@w2e/types\";\nimport { collectPositionFee } from \"hooks/swap/useClaimFees\";\nimport { Theme } from \"@mui/material/styles\";\nimport { PositionItem } from \"./PositionItem\";\n\nexport interface StakingModalProps {\n  open: boolean;\n  onClose: () => void;\n  resetData?: () => void;\n  farm: StakingFarmInfo;\n}\n\nexport default function StakingModal({ open, onClose, resetData, farm }: StakingModalProps) {\n  const [openTip] = useTips();\n\n  const principal = useAccountPrincipal();\n\n  const swapPoolId = farm.pool;\n\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [selectedPositionId, setSelectedPositionId] = useState<number | undefined>(undefined);\n\n  const { result: allUserPositions, loading } = useSwapUserPositions(farm.pool, principal?.toString());\n\n  const selectedPosition = useMemo(() => {\n    if (!allUserPositions || !selectedPositionId) return undefined;\n    return allUserPositions.filter((position) => Number(position.id) === selectedPositionId)[0];\n  }, [allUserPositions, selectedPositionId]);\n\n  const handleSubmit = async (identity: CallIdentity) => {\n    if (!identity || !principal || !selectedPositionId || !selectedPosition) return;\n\n    setConfirmLoading(true);\n\n    const { status: approveStatus, message: approveMessage } = await approvePosition(\n      identity,\n      swapPoolId,\n      farm.farmCid,\n      selectedPosition.id,\n    );\n\n    if (approveStatus === ResultStatus.ERROR) {\n      openTip(approveMessage, approveStatus);\n      setConfirmLoading(false);\n      return;\n    }\n\n    await collectPositionFee(swapPoolId, selectedPosition.id);\n\n    const { status, message } = await stake(identity, farm.farmCid, BigInt(selectedPositionId));\n\n    openTip(getLocaleMessage(message), status);\n\n    setConfirmLoading(false);\n\n    if (resetData) resetData();\n    if (onClose) onClose();\n  };\n\n  const theme = useTheme() as Theme;\n\n  return (\n    <Modal\n      maxWidth=\"md\"\n      open={open}\n      onClose={onClose}\n      title={t`Select a position`}\n      dialogProps={{\n        sx: {\n          \"& .MuiDialog-paper\": {\n            width: \"632px\",\n          },\n          \"& .MuiDialogContent-root\": {\n            padding: \"0\",\n          },\n          \"& .MuiDialogTitle-root\": {\n            padding: \"8px 12px\",\n          },\n        },\n      }}\n      background={theme.palette.background.level1}\n    >\n      <Grid style={{ minHeight: \"300px\" }}>\n        <Box\n          sx={{\n            minHeight: \"300px\",\n            maxHeight: \"580px\",\n            overflow: \"hidden auto\",\n          }}\n        >\n          {loading ? (\n            <ListLoading mask={false} loading={loading} />\n          ) : (\n            <Box sx={{ maxHeight: \"340px\", overflow: \"auto\" }}>\n              <Box>\n                {allUserPositions?.map((position, index) => {\n                  return (\n                    <PositionItem\n                      key={index}\n                      poolId={farm.pool}\n                      positionInfo={{\n                        id: position.id,\n                        liquidity: position.liquidity,\n                        tickLower: position.tickLower,\n                        tickUpper: position.tickUpper,\n                      }}\n                      selectedPositionId={selectedPositionId}\n                      setSelectedPositionId={setSelectedPositionId}\n                    />\n                  );\n                })}\n\n                {!allUserPositions?.length && <NoData />}\n              </Box>\n            </Box>\n          )}\n        </Box>\n\n        <Box mt=\"20px\" sx={{ padding: \"0 24px\" }}>\n          <Identity onSubmit={handleSubmit}>\n            {({ submit }: CallbackProps) => (\n              <Button\n                disabled={confirmLoading || !selectedPositionId}\n                variant=\"contained\"\n                fullWidth\n                type=\"button\"\n                onClick={submit}\n                color=\"primary\"\n                size=\"large\"\n                startIcon={confirmLoading ? <CircularProgress size={24} color=\"inherit\" /> : null}\n              >\n                {t`Confirm`}\n              </Button>\n            )}\n          </Identity>\n        </Box>\n      </Grid>\n    </Modal>\n  );\n}\n","import { useState } from \"react\";\nimport { Grid, Button } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { getFarmsState, POOL_STATE } from \"utils/staking-farm\";\nimport { Theme } from \"@mui/material/styles\";\nimport type { StakingFarmInfo, StakingFarmDepositArgs } from \"@w2e/types\";\nimport UnStakingModal from \"./UnStakingModal\";\nimport StakingModal from \"./StakingModal\";\n\nconst useStyle = makeStyles((theme: Theme) => ({\n  button: {\n    minWidth: \"28px\",\n    width: \"28px\",\n    height: \"28px\",\n    lineHeight: \"100%\",\n    background: \"#29314F\",\n    borderRadius: \"8px\",\n    fontSize: \"28px\",\n    fontWeight: \"normal\",\n    color: theme.palette.mode === \"dark\" ? theme.colors.darkTextSecondary : theme.colors.lightPrimaryMain,\n    \"&.Mui-disabled\": {\n      color: \"#666\",\n    },\n  },\n}));\n\nexport default function OptionStaking({\n  farm,\n  resetData,\n  userIncentives,\n  userAllPositions,\n}: {\n  farm: StakingFarmInfo;\n  userIncentives: StakingFarmInfo | undefined;\n  resetData?: () => void;\n  userAllPositions: StakingFarmDepositArgs[];\n}) {\n  const [unStakingModal, setUnStakingModal] = useState(false);\n  const [stakingModal, setStakingModal] = useState(false);\n  const classes = useStyle();\n\n  const state = getFarmsState(farm);\n\n  return (\n    <>\n      <Grid container sx={{ gap: \"0 10px\" }} justifyContent=\"flex-end\">\n        <Button\n          disabled={(userIncentives?.numberOfStakes ?? 0).toString() === \"0\"}\n          className={classes.button}\n          onClick={() => {\n            setUnStakingModal(true);\n          }}\n        >\n          -\n        </Button>\n        <Button\n          disabled={state !== POOL_STATE.LIVE}\n          className={classes.button}\n          onClick={() => {\n            setStakingModal(true);\n          }}\n        >\n          +\n        </Button>\n      </Grid>\n\n      {stakingModal && (\n        <StakingModal open={stakingModal} onClose={() => setStakingModal(false)} farm={farm} resetData={resetData} />\n      )}\n\n      {unStakingModal && (\n        <UnStakingModal\n          open={unStakingModal}\n          onClose={() => setUnStakingModal(false)}\n          farm={farm}\n          resetData={resetData}\n          userAllPositions={userAllPositions}\n        />\n      )}\n    </>\n  );\n}\n","import React, { useMemo, useState, useContext, useEffect } from \"react\";\nimport { Grid, CardActions, CardContent, Collapse, Typography, Link, Box } from \"@mui/material\";\nimport ConnectWallet from \"components/authentication/ButtonConnector\";\nimport { MainCard, TokenImage } from \"components/index\";\nimport {\n  useIntervalUserRewardInfo,\n  useIntervalUserFarmInfo,\n  useV3StakingCycles,\n  useFarmUSDValue,\n} from \"hooks/staking-farm\";\nimport CountUp from \"react-countup\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport { useToken } from \"hooks/useCurrency\";\nimport { INFO_URL, AnonymousPrincipal } from \"constants/index\";\nimport { useAccountPrincipal, useConnectorStateConnected } from \"store/auth/hooks\";\nimport { t, Trans } from \"@lingui/macro\";\nimport {\n  parseTokenAmount,\n  toSignificant,\n  cycleValueFormat,\n  shorten,\n  timestampFormat,\n  explorerLink,\n} from \"@w2e/utils\";\nimport { useV3FarmMetadata, useFarmUserAllPositions } from \"@w2e/hooks\";\nimport Countdown from \"react-countdown\";\nimport { ICRocksLoadIcon } from \"components/Layout/Header/ProfileSection\";\nimport { Theme } from \"@mui/material/styles\";\nimport { STATE } from \"types/staking-farm\";\nimport type { StakingFarmInfo } from \"@w2e/types\";\nimport upperFirst from \"lodash/upperFirst\";\nimport FarmContext from \"../context\";\nimport OptionStaking from \"./OptionStaking\";\n\nconst useStyle = makeStyles(() => ({\n  cardHeader: {\n    height: \"196px\",\n    background: \"rgba(101, 80, 186, 0.18)\",\n    borderRadius: \"4px 4px 0 0\",\n    position: \"relative\",\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  headerImage: {\n    marginTop: \"50px\",\n    marginBottom: \"26px\",\n    position: \"relative\",\n    \"& .poolImageBox\": {\n      marginTop: \"-34px\",\n      marginBottom: \"16px\",\n      marginLeft: \"-10px\",\n      left: \"50px\",\n      position: \"absolute\",\n    },\n  },\n  collapseContent: {\n    padding: 0,\n    width: \"calc(100% - 48px)\",\n    margin: \"0 auto\",\n    borderTop: \"1px solid #313A5A\",\n  },\n}));\n\nconst CountdownBox = ({ startTime, endTime }: { startTime: number; endTime: number }) => {\n  const nowTime = parseInt(String(Date.now() / 1000));\n  let expand = false;\n  let date = startTime;\n  if (nowTime > endTime) {\n    expand = true;\n  }\n  if (nowTime < startTime) {\n    date = startTime * 1000;\n  } else if (nowTime > startTime && nowTime < endTime) {\n    date = endTime * 1000;\n  } else {\n    date = 0;\n  }\n\n  return expand ? (\n    <Typography color=\"text.primary\">\n      <Trans>End</Trans>\n    </Typography>\n  ) : (\n    <Countdown date={date} />\n  );\n};\n\nexport type FarmPoolProps = { stakeOnly: boolean; state: STATE; farm: StakingFarmInfo };\n\nexport default function FarmPool({ farm, state, stakeOnly }: FarmPoolProps) {\n  const classes = useStyle();\n  const theme = useTheme() as Theme;\n\n  const principal = useAccountPrincipal();\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const [forceUpdate, setForceUpdate] = useState(false);\n\n  const userFarmInfo = useIntervalUserFarmInfo(farm.farmCid, principal?.toString() ?? AnonymousPrincipal);\n\n  const { result: userAllPositions } = useFarmUserAllPositions(farm.farmCid, principal?.toString(), forceUpdate);\n\n  const positionIds = useMemo(() => {\n    return userAllPositions.map((position) => BigInt(position.positionId));\n  }, [userAllPositions]);\n\n  const userRewardAmount = useIntervalUserRewardInfo(farm.farmCid, positionIds);\n\n  const [, token0] = useToken(farm.poolToken0.address) ?? undefined;\n  const [, token1] = useToken(farm.poolToken1.address) ?? undefined;\n\n  const [, rewardToken] = useToken(farm.rewardToken.address) ?? undefined;\n\n  const { poolTVL, userTVL, userRewardUSD, parsedUserRewardAmount } = useFarmUSDValue({\n    token0,\n    token1,\n    rewardToken,\n    farm,\n    userRewardAmount,\n    userFarmInfo,\n  });\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleGoToGetPosition = () => {\n    window.open(`/swap/liquidity/add/${farm.poolToken0.address}/${farm.poolToken1.address}`, \"_target\");\n  };\n\n  const walletIsConnected = useConnectorStateConnected();\n\n  const { updateUnStakedFarms, deleteUnStakedFarms } = useContext(FarmContext);\n\n  useEffect(() => {\n    if (positionIds !== undefined) {\n      if (positionIds.length === 0) {\n        updateUnStakedFarms(farm.farmCid);\n      } else {\n        deleteUnStakedFarms(farm.farmCid);\n      }\n    }\n  }, [positionIds?.length]);\n\n  const { result: farmMetadata } = useV3FarmMetadata(farm.farmCid);\n  const { result: cycles } = useV3StakingCycles(farm.farmCid);\n\n  return (\n    <Box>\n      <MainCard\n        level={1}\n        padding=\"0px\"\n        sx={{\n          display: stakeOnly && userAllPositions.length === 0 ? \"none\" : \"block\",\n          width: \"384px\",\n          overflow: \"hidden\",\n          height: \"fit-content\",\n          \"@media (max-width: 520px)\": {\n            width: \"340px\",\n          },\n        }}\n      >\n        <Box sx={{ maxWidth: 400 }}>\n          <Grid className={classes.cardHeader}>\n            <Typography\n              sx={{\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                minWidth: \"77px\",\n                height: \"30px\",\n                padding: \"6px\",\n                background: \"#654DA9\",\n                borderRadius: \"4px 0 4px 0\",\n                textAlign: \"center\",\n                border: \"1px solid #654DA9\",\n                color: theme.palette.mode === \"dark\" ? theme.colors.darkTextPrimary : theme.colors.primaryMain,\n              }}\n            >\n              {state === STATE.NOT_STARTED ? upperFirst(t`Unstart`) : upperFirst(state)}\n            </Typography>\n\n            <Grid item className={classes.headerImage}>\n              <TokenImage size=\"80px\" logo={rewardToken?.logo} tokenId={rewardToken?.address} />\n\n              <Grid container className=\"poolImageBox\">\n                <Box sx={{ display: \"flex\" }}>\n                  <TokenImage size=\"44px\" logo={token0?.logo} tokenId={token0?.address} />\n                  <TokenImage size=\"44px\" logo={token1?.logo} tokenId={token1?.address} />\n                </Box>\n              </Grid>\n            </Grid>\n\n            <Grid>\n              <Grid item>\n                <Typography color=\"text.primary\" sx={{ padding: \"0 12px\" }}>\n                  Stake {token0?.symbol}/{token1?.symbol} position(LP) to earn {rewardToken?.symbol}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: \"20px 0\", padding: \"24px\" }}>\n            <Grid container justifyContent=\"space-between\" alignItems=\"flex-start\">\n              <Typography>\n                <Trans>Total Reward Amount</Trans>\n              </Typography>\n              <Box sx={{ flex: \"1\", display: \"flex\", justifyContent: \"flex-end\" }}>\n                <CountUp\n                  preserveValue\n                  end={parseTokenAmount(\n                    farm?.totalReward ?? farm.totalRewardUnclaimed,\n                    rewardToken?.decimals,\n                  ).toNumber()}\n                  decimals={2}\n                  duration={1}\n                  separator=\",\"\n                />\n              </Box>\n            </Grid>\n\n            <Grid container justifyContent=\"space-between\" alignItems=\"flex-start\">\n              <Typography>\n                <Trans>Total Value Staked</Trans>\n              </Typography>\n              <Typography color=\"text.primary\">${poolTVL}</Typography>\n            </Grid>\n\n            <Grid container justifyContent=\"space-between\" alignItems=\"flex-start\">\n              <Typography>\n                <Trans>Earned</Trans>\n                &nbsp;\n                {rewardToken?.symbol}\n              </Typography>\n\n              <Grid item>\n                <Grid container direction=\"column\" justifyContent=\"flex-end\">\n                  <CountUp preserveValue end={parsedUserRewardAmount ?? 0} decimals={6} duration={1} separator=\",\" />\n                  <CountUp\n                    style={{ fontSize: 14, textAlign: \"right\", display: \"block\" }}\n                    preserveValue\n                    end={userRewardUSD ?? 0}\n                    decimals={2}\n                    duration={1}\n                    separator=\",\"\n                    prefix=\"~$\"\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n\n            <Box>\n              <Typography mb=\"14px\">\n                <Trans>Position(LP) Staked</Trans>\n              </Typography>\n\n              <Box\n                sx={{\n                  display: \"flex\",\n                  height: \"44px\",\n                  lineHeight: \"42px\",\n                  background: \"#111936\",\n                  border: \"1px solid #95a8ed\",\n                  borderRadius: \"8px\",\n                  padding: \"0 14px\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Typography sx={{ flex: 1 }}>{Number(positionIds.length ?? 0)}</Typography>\n                {walletIsConnected ? (\n                  <OptionStaking\n                    farm={farm}\n                    resetData={() => setForceUpdate(!forceUpdate)}\n                    userIncentives={userFarmInfo}\n                    userAllPositions={userAllPositions}\n                  />\n                ) : (\n                  <ConnectWallet />\n                )}\n              </Box>\n            </Box>\n\n            <Grid container justifyContent=\"space-between\" alignItems=\"flex-start\">\n              <Grid item>\n                <Typography>\n                  <Trans>Your Total Value Staked</Trans>\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography color=\"text.primary\">${userTVL}</Typography>\n              </Grid>\n            </Grid>\n          </Box>\n\n          <CardActions disableSpacing style={{ paddingTop: 0 }}>\n            <Grid container justifyContent=\"center\" onClick={handleExpandClick}>\n              <Typography\n                sx={{\n                  fontWeight: \"500\",\n                  fontSize: \"14px\",\n                  lineHeight: \"24px\",\n                  textAlign: \"center\",\n                  color: \"#648EFB\",\n                  cursor: \"pointer\",\n                }}\n              >\n                {expanded ? t`Hide` : t`Details`}\n              </Typography>\n            </Grid>\n          </CardActions>\n\n          <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n            <CardContent style={{ paddingTop: 0 }} className={classes.collapseContent}>\n              <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: \"20px 0\", maxWidth: 400, paddingTop: \"24px\" }}>\n                <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n                  <Grid item>\n                    <Typography sx={{ cursor: \"pointer\", textDecoration: \"underline\" }} onClick={handleGoToGetPosition}>\n                      Get {token0?.symbol}/{token1?.symbol} position(LP)\n                      <ICRocksLoadIcon\n                        fontSize=\"24\"\n                        sx={{\n                          position: \"relative\",\n                          top: \"3px\",\n                          cursor: \"pointer\",\n                          marginLeft: \"5px\",\n                          color: theme.colors.secondaryMain,\n                        }}\n                      />\n                    </Typography>\n                  </Grid>\n                </Grid>\n\n                <Grid container justifyContent=\"space-between\" alignItems=\"flex-start\">\n                  <Typography>\n                    <Trans>Total number of staked positions</Trans>\n                  </Typography>\n                  <Typography color=\"text.primary\">{(userFarmInfo?.numberOfStakes ?? 0).toString()}</Typography>\n                </Grid>\n\n                <Grid container justifyContent=\"space-between\" alignItems=\"flex-start\">\n                  <Typography>\n                    <Trans>Claimed Rewards</Trans>\n                  </Typography>\n                  <Typography color=\"text.primary\">\n                    {toSignificant(\n                      parseTokenAmount(\n                        farmMetadata?.totalRewardClaimed?.toString() ?? 0,\n                        rewardToken?.decimals,\n                      ).toString(),\n                      8,\n                      { groupSeparator: \",\" },\n                    )}\n                  </Typography>\n                </Grid>\n\n                <Grid container justifyContent=\"space-between\" alignItems=\"flex-start\">\n                  <Typography>\n                    <Trans>Unclaimed Rewards</Trans>\n                  </Typography>\n                  <Typography color=\"text.primary\">\n                    {toSignificant(\n                      parseTokenAmount(\n                        farmMetadata?.totalRewardUnclaimed?.toString() ?? 0,\n                        rewardToken?.decimals,\n                      ).toString(),\n                      8,\n                      { groupSeparator: \",\" },\n                    )}\n                  </Typography>\n                </Grid>\n\n                <Grid container justifyContent=\"space-between\" alignItems=\"flex-start\">\n                  <Typography>\n                    <Trans>Distribution Interval</Trans>\n                  </Typography>\n                  <Typography color=\"text.primary\">\n                    {Number(farmMetadata?.secondPerCycle ?? 0) / 60} <Trans>min</Trans>\n                  </Typography>\n                </Grid>\n\n                <Grid container justifyContent=\"space-between\" alignItems=\"flex-start\">\n                  <Typography>\n                    <Trans>Amount per Distribution</Trans>\n                  </Typography>\n                  <Typography color=\"text.primary\">\n                    {toSignificant(\n                      parseTokenAmount(farmMetadata?.rewardPerCycle, rewardToken?.decimals).toString(),\n                      8,\n                      { groupSeparator: \",\" },\n                    )}\n                  </Typography>\n                </Grid>\n\n                <Grid container justifyContent=\"space-between\" alignItems=\"flex-start\">\n                  <Typography>\n                    <Trans>Starting at</Trans>\n                  </Typography>\n                  <Typography color=\"text.primary\">{timestampFormat(Number(farm.startTime) * 1000)}</Typography>\n                </Grid>\n\n                <Grid container justifyContent=\"space-between\" alignItems=\"flex-start\">\n                  <Typography>{state === STATE.NOT_STARTED ? <Trans>Left</Trans> : <Trans>End in</Trans>}</Typography>\n                  <Typography color=\"text.primary\" component=\"div\">\n                    <CountdownBox startTime={Number(farm.startTime)} endTime={Number(farm.endTime)} />\n                  </Typography>\n                </Grid>\n                <Grid container justifyContent=\"space-between\" alignItems=\"flex-start\">\n                  <Typography>\n                    <Trans>Created by</Trans>\n                  </Typography>\n                  <Typography color=\"text.primary.main\">\n                    <Link href={`https://icscan.io/principal/${farm.creator.toString()}`} target=\"_blank\">\n                      {shorten(farm.creator.toString())}\n                    </Link>\n                  </Typography>\n                </Grid>\n                <Grid container justifyContent=\"space-between\" alignItems=\"flex-start\">\n                  <Typography>\n                    <Trans>Incentive pool Id</Trans>\n                  </Typography>\n                  <Typography color=\"text.primary\">\n                    <Link href={explorerLink(farm.farmCid)} target=\"_blank\">\n                      {shorten(farm.farmCid)}\n                    </Link>\n                  </Typography>\n                </Grid>\n                <Grid container justifyContent=\"space-between\" alignItems=\"flex-start\">\n                  <Typography>\n                    <Trans>Cycles left</Trans>\n                  </Typography>\n                  <Typography color=\"text.primary\">\n                    {cycles?.balance ? cycleValueFormat(cycles?.balance) : \"--\"}\n                  </Typography>\n                </Grid>\n\n                <Grid item container justifyContent=\"flex-end\">\n                  <Typography color=\"text.primary\">\n                    <Link href={`${INFO_URL}/staking-farm/details/${farm.farmCid}`} target=\"_blank\">\n                      <Trans>Farms Info</Trans>\n                    </Link>\n                  </Typography>\n                </Grid>\n              </Box>\n            </CardContent>\n          </Collapse>\n        </Box>\n      </MainCard>\n    </Box>\n  );\n}\n","import { useEffect } from \"react\";\nimport { Grid, Typography } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { gridSpacing } from \"constants/theme\";\nimport { useGetGlobalData } from \"hooks/staking-farm\";\nimport GlobalBg1 from \"assets/images/staking/1.png\";\nimport GlobalBg3 from \"assets/images/staking/3.png\";\nimport { Trans } from \"@lingui/macro\";\n\nconst useStyle = makeStyles(() => ({\n  item: {\n    height: \"145px\",\n    background: \"rgba(80, 95, 186, 0.34)\",\n    border: \"1px solid rgba(255, 255, 255, 0.04)\",\n    borderRadius: \"12px\",\n    padding: \"29px 25px\",\n    \"&.tvl\": {\n      background: `url(${GlobalBg1}) no-repeat center / cover`,\n    },\n    \"&.reward\": {\n      background: `url(${GlobalBg3}) no-repeat center / cover`,\n    },\n  },\n  itemTitle: {\n    paddingBottom: \"18px\",\n  },\n}));\n\nexport default function GlobalData() {\n  const classes = useStyle();\n  const [result, update] = useGetGlobalData();\n\n  useEffect(() => {\n    setTimeout(() => {\n      update();\n    }, 5000);\n  }, [result]);\n\n  return (\n    <Grid container spacing={gridSpacing}>\n      <Grid item xs={12} md={6}>\n        <Grid container className={`${classes.item} tvl`} direction=\"column\" justifyContent=\"center\">\n          <Grid item className={classes.itemTitle}>\n            <Typography color=\"text.primary\" fontSize=\"14px\">\n              <Trans>TVL</Trans>\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography color=\"text.primary\" fontSize=\"24px\">\n              {result?.stakeTokenTVL ?? \"-\"}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <Grid container className={`${classes.item} reward`} direction=\"column\" justifyContent=\"center\">\n          <Grid item className={classes.itemTitle}>\n            <Grid container>\n              <Typography color=\"text.primary\" fontSize=\"14px\" sx={{ display: \"inline-block\" }}>\n                <Trans>Total Farming Rewards</Trans>\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Typography color=\"text.primary\" fontSize=\"24px\">\n              {result?.rewardTokenTVL ?? \"-\"}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import { t } from \"@lingui/macro\";\nimport { STATE } from \"types/staking-farm\";\n\nexport type Page = {\n  label: string;\n  path: string;\n  state: STATE;\n};\n\nexport const Pages: Page[] = [\n  {\n    label: t`Live`,\n    path: `/staking-farm?state=${STATE.LIVE}`,\n    state: STATE.LIVE,\n  },\n  {\n    label: t`Unstart`,\n    path: `/staking-farm?state=${STATE.NOT_STARTED}`,\n    state: STATE.NOT_STARTED,\n  },\n  {\n    label: t`Finished`,\n    path: `/staking-farm?state=${STATE.FINISHED}`,\n    state: STATE.FINISHED,\n  },\n  {\n    label: t`Closure`,\n    path: `/staking-farm?state=${STATE.CLOSED}`,\n    state: STATE.CLOSED,\n  },\n];\n","import { useMemo, useState } from \"react\";\nimport { Grid, Box, Typography } from \"@mui/material\";\nimport { NoData, StaticLoading, MainCard } from \"components/index\";\nimport Switch from \"components/switch\";\nimport { Trans } from \"@lingui/macro\";\nimport { STATE } from \"types/staking-farm\";\nimport type { StakingFarmInfo } from \"@w2e/types\";\nimport { useV3StakingFarms, useParsedQueryString } from \"@w2e/hooks\";\nimport { useHistory } from \"react-router-dom\";\nimport StakingPoolItem from \"./components/StakingPoolItem\";\nimport GlobalData from \"./components/GlobalData\";\nimport { Page, Pages } from \"./components/PageToggle\";\nimport FarmContext from \"./context\";\n\nfunction MainContent() {\n  const history = useHistory();\n\n  const [stakeOnly, setStakeOnly] = useState(false);\n\n  const { state } = useParsedQueryString() as { state: STATE };\n  const _state = useMemo(() => state ?? STATE.LIVE, [state]);\n  const { result, loading } = useV3StakingFarms(0, 200, _state);\n  const { content: list } = result ?? { content: [] as StakingFarmInfo[] };\n\n  const handleToggle = (value: Page) => {\n    history.push(value.path);\n  };\n\n  const [unStakedFarms, setUnStakedFarms] = useState<string[]>([]);\n\n  const handleUpdateUnStakedFarms = (unStakedFarms: string) => {\n    setUnStakedFarms((prevState) => prevState.concat(unStakedFarms));\n  };\n\n  const handleDeleteUnStakedFarms = (unStakedFarm: string) => {\n    setUnStakedFarms((prevState) => {\n      const state = [...prevState];\n      const index = prevState.indexOf(unStakedFarm);\n      if (index !== -1) {\n        state.splice(index, 1);\n      }\n      return state;\n    });\n  };\n\n  const handleToggleCheck = (checked: boolean) => {\n    setStakeOnly(checked);\n  };\n\n  return (\n    <FarmContext.Provider\n      value={{\n        unStakedFarms,\n        updateUnStakedFarms: handleUpdateUnStakedFarms,\n        deleteUnStakedFarms: handleDeleteUnStakedFarms,\n      }}\n    >\n      <MainCard>\n        <Grid\n          container\n          direction=\"row\"\n          sx={{\n            padding: \"10px 0 40px\",\n            \"@media (max-width: 960px)\": {\n              padding: \"10px 0px 0px 0px\",\n            },\n          }}\n        >\n          <Grid item>\n            <Box sx={{ display: \"flex\", gap: \"0 20px\" }}>\n              {Pages.map((ele) => (\n                <Typography\n                  key={ele.path}\n                  variant=\"h3\"\n                  color={_state === ele.state ? \"textPrimary\" : \"textTertiary\"}\n                  onClick={() => handleToggle(ele)}\n                  sx={{\n                    cursor: \"pointer\",\n                    textTransform: \"capitalize\",\n                    \"@media (max-width:640px)\": {\n                      fontSize: \"16px\",\n                    },\n                  }}\n                >\n                  {ele.label}\n                </Typography>\n              ))}\n            </Box>\n          </Grid>\n          <Grid item style={{ marginLeft: \"auto\" }}>\n            <Grid container alignItems=\"center\" gap=\"0 10px\">\n              <Typography display=\"inline\">\n                <Trans>Staked only</Trans>\n              </Typography>\n              <Switch checked={stakeOnly} onChange={(event: any) => handleToggleCheck(event.target.checked)} />\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Box\n          sx={{\n            position: \"relative\",\n            minHeight: \"440px\",\n          }}\n        >\n          {!loading ? (\n            <Grid container justifyContent=\"center\" sx={{ gap: \"20px\" }}>\n              {list.map((ele) => (\n                <StakingPoolItem key={ele.farmCid} stakeOnly={stakeOnly} state={_state} farm={ele} />\n              ))}\n            </Grid>\n          ) : null}\n          {((unStakedFarms.length === list.length && stakeOnly) || !list.length) && !loading && <NoData />}\n          {loading ? <StaticLoading loading={loading} /> : null}\n        </Box>\n      </MainCard>\n    </FarmContext.Provider>\n  );\n}\n\nexport default function Farms() {\n  return (\n    <>\n      <GlobalData />\n      <Box sx={{ margin: \"20px 0 0 0\" }}>\n        <MainContent />\n      </Box>\n    </>\n  );\n}\n","import { useCallsData, usePaginationAllData } from \"../useCallData\";\nimport { useCallback } from \"react\";\nimport { resultFormat, isAvailablePageArgs } from \"@w2e/utils\";\nimport { Principal } from \"@dfinity/principal\";\nimport { v3Farm, v3FarmController } from \"@w2e/actor\";\nimport type {\n  StakingFarmDepositArgs,\n  StakingFarmInfo,\n  StakingFarmStakeTransaction,\n  StakingFarmDistributeTransaction,\n  FarmMetadata,\n} from \"@w2e/types\";\nimport type { ActorIdentity, PaginationResult } from \"@w2e/types\";\n\nexport async function getV3UserFarmInfo(canisterId: string, principal: string) {\n  return resultFormat<StakingFarmInfo>(await (await v3Farm(canisterId)).getFarmInfo(principal)).data;\n}\n\nexport function useV3UserFarmInfo(canisterId: string | undefined, principal: string | undefined, reload?: boolean) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!principal || !canisterId) return undefined;\n      return await getV3UserFarmInfo(canisterId, principal);\n    }, [principal, canisterId]),\n    reload,\n  );\n}\n\nexport async function getFarmUserPositions(canisterId: string, principal: string, offset: number, limit: number) {\n  return resultFormat<PaginationResult<StakingFarmDepositArgs>>(\n    await (await v3Farm(canisterId)).getUserPositions(Principal.from(principal), BigInt(offset), BigInt(limit)),\n  ).data;\n}\n\nexport function useFarmUserPositions(\n  canisterId: string | undefined,\n  principal: string | undefined,\n  offset: number,\n  limit: number,\n  reload?: boolean,\n) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !principal || !isAvailablePageArgs(offset, limit)) return undefined;\n\n      return await getFarmUserPositions(canisterId, principal, offset, limit);\n    }, [canisterId, principal, offset, limit]),\n    reload,\n  );\n}\n\nexport function useFarmUserAllPositions(canisterId: string | undefined, user: string | undefined, reload?: boolean) {\n  const callback = useCallback(\n    async (offset: number, limit: number) => {\n      if (!canisterId || !user) return undefined;\n      return await getFarmUserPositions(canisterId, user, offset, limit);\n    },\n    [canisterId, user],\n  );\n\n  return usePaginationAllData<StakingFarmDepositArgs>(callback, 300, reload);\n}\n\nexport async function getFarmTVL(canisterId: string) {\n  return resultFormat<{ stakedTokenTVL: number; rewardTokenTVL: number }>(await (await v3Farm(canisterId)).getTVL())\n    .data;\n}\n\nexport function useFarmTVL(canisterId: string | undefined, reload?: boolean) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId) return undefined;\n\n      return await getFarmTVL(canisterId);\n    }, [canisterId]),\n    reload,\n  );\n}\n\nexport async function getFarmUserTVL(canisterId: string, principal: string) {\n  return resultFormat<number>(await (await v3Farm(canisterId)).getUserTVL(Principal.fromText(principal))).data;\n}\n\nexport function useFarmUserTVL(canisterId: string | undefined, principal: string | undefined, reload?: boolean) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !principal) return undefined;\n\n      return await getFarmUserTVL(canisterId, principal);\n    }, [canisterId, principal]),\n    reload,\n  );\n}\n\nexport type V3FarmRewardMeta = {\n  secondPerCycle: bigint;\n  totalRewardBalance: bigint;\n  rewardPerCycle: bigint;\n  totalRewardClaimed: bigint;\n  totalCycleCount: bigint;\n  currentCycleCount: bigint;\n  totalReward: bigint;\n  totalRewardUnclaimed: bigint;\n};\n\nexport function useV3FarmRewardMeta(canisterId: string | undefined, reload?: boolean) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId) return undefined;\n\n      return resultFormat<V3FarmRewardMeta>(await (await v3Farm(canisterId!)).getRewardMeta()).data;\n    }, [canisterId]),\n    reload,\n  );\n}\n\nexport async function getV3UserFarmRewardInfo(canisterId: string, positionIds: bigint[]) {\n  return resultFormat<bigint>(await (await v3Farm(canisterId!)).getRewardInfo(positionIds)).data;\n}\n\nexport function useV3UserFarmRewardInfo(\n  canisterId: string | undefined,\n  positionIds: bigint[] | undefined,\n  reload?: boolean,\n) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId || !positionIds?.length) return undefined;\n      return await getV3UserFarmRewardInfo(canisterId, positionIds);\n    }, [canisterId, positionIds]),\n    reload,\n  );\n}\n\nexport type CreateFarmArgs = {\n  rewardToken: { address: string; standard: string };\n  rewardAmount: bigint;\n  rewardPool: string;\n  pool: string;\n  startTime: bigint;\n  endTime: bigint;\n  secondPerCycle: bigint;\n  token0AmountLimit: bigint;\n  token1AmountLimit: bigint;\n  priceInsideLimit: boolean;\n};\n\nexport async function createV3Farm(identity: ActorIdentity, args: CreateFarmArgs) {\n  return resultFormat<string>(\n    await (\n      await v3FarmController(identity)\n    ).create(\n      args.rewardToken,\n      args.rewardAmount,\n      args.rewardPool,\n      args.pool,\n      args.startTime,\n      args.endTime,\n      args.secondPerCycle,\n      args.token0AmountLimit,\n      args.token1AmountLimit,\n      args.priceInsideLimit,\n    ),\n  );\n}\n\nexport async function getV3StakingFarms(offset: number, limit: number, state: string) {\n  return resultFormat<PaginationResult<StakingFarmInfo>>(\n    await (await v3FarmController()).getFarmList(BigInt(offset), BigInt(limit), state),\n  ).data;\n}\n\nexport function useV3StakingFarms(offset: number, limit: number, state: string | undefined, reload?: boolean) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!isAvailablePageArgs(offset, limit) || !state) return undefined;\n      return await getV3StakingFarms(offset, limit, state);\n    }, [offset, limit, state]),\n    reload,\n  );\n}\n\nexport async function getV3FarmMetadata(canisterId: string) {\n  return resultFormat<FarmMetadata>(await (await v3Farm(canisterId)).getRewardMeta()).data;\n}\n\nexport function useV3FarmMetadata(canisterId: string | undefined) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!canisterId) return undefined;\n      return await getV3FarmMetadata(canisterId!);\n    }, [canisterId]),\n  );\n}\n\n/* v3 farm storage */\n\nexport async function getV3FarmStakeRecords(canisterId: string, offset: number, limit: number, from: string) {\n  return resultFormat<PaginationResult<StakingFarmStakeTransaction>>(\n    await (await v3Farm(canisterId)).getStakeRecord(BigInt(offset), BigInt(limit), from),\n  ).data;\n}\n\nexport function useV3FarmStakeRecords(\n  storageId: string | undefined,\n  offset: number,\n  limit: number,\n  from: string = \"\",\n  reload?: boolean,\n) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!isAvailablePageArgs(offset, limit) || !storageId) return undefined;\n      return await getV3FarmStakeRecords(storageId, offset, limit, from);\n    }, [offset, limit, from, storageId]),\n    reload,\n  );\n}\n\nexport async function getV3FarmDistributeRecords(canisterId: string, offset: number, limit: number, owner: string) {\n  return resultFormat<PaginationResult<StakingFarmDistributeTransaction>>(\n    await (await v3Farm(canisterId)).getDistributeRecord(BigInt(offset), BigInt(limit), owner),\n  ).data;\n}\n\nexport function useV3FarmDistributeRecords(\n  storageId: string | undefined,\n  offset: number,\n  limit: number,\n  owner: string = \"\",\n  reload?: boolean,\n) {\n  return useCallsData(\n    useCallback(async () => {\n      if (!isAvailablePageArgs(offset, limit) || !storageId) return undefined;\n      return await getV3FarmDistributeRecords(storageId, offset, limit, owner);\n    }, [offset, limit, owner, storageId]),\n    reload,\n  );\n}\n\n/* v3 farm storage */\n","import { Position } from \"../entities/position\";\n\nexport function getPriceOrderingFromPositionForUI(position: Position | undefined) {\n  if (!position) return {};\n\n  const token0 = position.amount0.currency;\n  const token1 = position.amount1.currency;\n\n  // if both prices are below 1, invert\n  if (position.token0PriceUpper.lessThan(1)) {\n    return {\n      priceLower: position.token0PriceUpper.invert(),\n      priceUpper: position.token0PriceLower.invert(),\n      quote: token0,\n      base: token1,\n    };\n  }\n\n  // otherwise, just return the default\n  return {\n    priceLower: position.token0PriceLower,\n    priceUpper: position.token0PriceUpper,\n    quote: token1,\n    base: token0,\n  };\n}\n","import { Token } from \"../core/entities/token\";\nimport { Price } from \"../core/entities/fractions/price\";\n\ninterface useInverterProps {\n  priceLower: Price<Token, Token> | undefined;\n  priceUpper: Price<Token, Token> | undefined;\n  quote: Token | undefined;\n  base: Token | undefined;\n  invert: boolean;\n}\n\nexport function useInverter({ priceLower, priceUpper, quote, base, invert }: useInverterProps) {\n  return {\n    priceUpper: invert ? priceLower?.invert() : priceUpper,\n    priceLower: invert ? priceUpper?.invert() : priceLower,\n    quote: invert ? base : quote,\n    base: invert ? quote : base,\n  };\n}\n","export function explorerLink(id: string) {\n  if (id.length > 27) {\n    return `https://icscan.io/principal/${id}`;\n  }\n\n  return `https://dashboard.internetcomputer.org/canister/${id}`;\n}\n","import dayjs from \"dayjs\";\nimport { SECONDS_IN_DAY } from \"@w2e/constants\";\n\nexport function nanosecond2Millisecond(time: string | number | bigint) {\n  return Number(BigInt(time) / BigInt(1000000));\n}\n\nexport function millisecond2Nanosecond(time: string | number | bigint) {\n  return Number(BigInt(time) * BigInt(1000000));\n}\n\nexport function timestampFormat(timestamp: bigint | string | number, format = \"YYYY-MM-DD HH:mm:ss\"): string {\n  if (!timestamp) return \"\";\n\n  const newTimestamp = Number(String(timestamp).substr(0, 13));\n  return dayjs(newTimestamp).format(format);\n}\n\nexport const secondsToDays = (seconds: number): number => seconds / SECONDS_IN_DAY;\nexport const daysToSeconds = (days: number): number => Math.round(days * SECONDS_IN_DAY);\n"],"names":["useStyle","makeStyles","theme","wrapper","display","alignItems","height","padding","borderRadius","fontSize","fontWeight","background","colors","darkPrimary400","color","darkLevel1","marginLeft","Marker","props","_jsx","SvgIcon","width","viewBox","children","d","fill","Closed","classes","_jsxs","Box","component","className","concat","Typography","sx","Trans","id","OutOfRange","InRange","marginRight","PositionRangeState","_ref","outOfRange","closed","TokenAmount","logo","amount","Avatar","margin","src","async","collectPositionFee","pool","positionId","identity","getActorIdentity","collect","useCollectFeeSteps","principal","useAccountPrincipal","stepContentManage","useStepContentManager","handleReclaim","useReclaimCallback","useCallback","key","_ref4","retry","currencyFeeAmount0","currencyFeeAmount1","content","_ref2","_principal$toString","principalString","shorten","toString","withdrawAmountA","toSignificant","groupSeparator","_withdrawAmountA","withdrawAmountB","_withdrawAmountB","tokenA","currency","wrapped","tokenB","withdrawAmountALessThanZero","formatTokenAmount","decimals","minus","transFee","isLessThan","withdrawAmountBLessThanZero","title","symbol","step","label","i18n","_","value","errorActions","TextButton","onClick","values","0","errorMessage","skipError","undefined","getCollectFeeSteps","String","useCollectFeeCallback","getCalls","openErrorTip","useErrorTip","withdraw","useSwapWithdraw","openExternalTip","stepKey","_getLocaleMessage","status","message","getLocaleMessage","BigNumber","quotient","isGreaterThan","tipKey","_ref3","useCollectFeeCalls","formatCall","useStepCalls","initialSteps","_ref5","newStepKey","calls","call","reset","usePosition","userPosition","result","poolMetadata","useSwapPoolMetadata","poolId","currency0","useToken","token0","address","currency1","token1","poolState","usePool","fee","Number","position","tickLower","tickUpper","liquidity","Position","loading","PoolState","LOADING","checking","NOT_CHECK","useIntervalFetch","force","arguments","length","interval","data","setData","useState","tick","setTick","useEffect","_call","timer","setInterval","prevState","clearInterval","useMemo","STATE","getCardActionsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardActionsRoot","styled","name","overridesResolver","styles","ownerState","root","disableSpacing","spacing","_extends","React","inProps","ref","useThemeProps","other","_objectWithoutPropertiesLoose","slots","composeClasses","useUtilityClasses","clsx","getCardContentUtilityClass","CardContentRoot","paddingBottom","as","useFarmUSDValue","rewardToken","farm","userRewardAmount","rewardTokenPrice","useUSDPrice","icpPrice","useICPPrice","useAccountPrincipalString","farmTVL","canisterId","getFarmTVL","userIntervalFarmTVL","farmCid","poolTVL","multipliedBy","stakedTokenTVL","toFixed","totalRewardUSD","totalReward","toNumber","userRewardUSD","parseTokenAmount","parsedUserRewardAmount","userTVLAmount","getFarmUserTVL","userIntervalFarmUserTVL","userTVL","createContext","POOL_STATE","selectNFTBox","nft","filter","checked","border","checkbox","ArrowIcon","xmlns","clipPath","DetailsItem","justifyContent","PositionItem","_position$liquidity","positionInfo","selectedPositionId","setSelectedPositionId","useTheme","show","setShow","token0Amount","amount0","token1Amount","amount1","tickCurrent","pricesFromPosition","getPriceOrderingFromPositionForUI","priceLower","priceUpper","base","useInverter","quote","invert","inverted","equals","currencyQuote","currencyBase","pairName","_tickAtLimit","useIsTickAtLimit","tickAtLimit","Bound","LOWER","UPPER","token0USDPrice","useUSDPriceById","token1USDPrice","totalUSDValue","toExact","plus","_Fragment","gridTemplateColumns","cursor","palette","level2","handleToggle","gap","flexDirection","Checkbox","onChange","BigInt","event","stopPropagation","nativeEvent","stopImmediatePropagation","TokenImage","size","tokenId","left","formatDollarAmount","priceOf","toFormat","formatTickPrice","LoadingRow","UnStakingModal","open","onClose","resetData","userAllPositions","openTip","useTips","confirmLoading","setConfirmLoading","handelUnStakeToken","farmId","v3Farm","unstake","resultFormat","unStake","Modal","maxWidth","dialogProps","level1","Grid","style","minHeight","maxHeight","overflow","map","index","NoData","mt","Identity","onSubmit","submit","Button","disabled","variant","fullWidth","type","startIcon","CircularProgress","StakingModal","swapPoolId","allUserPositions","useSwapUserPositions","selectedPosition","ListLoading","mask","approveStatus","approveMessage","approvePosition","ResultStatus","ERROR","positionIndex","stake","button","minWidth","lineHeight","mode","darkTextSecondary","lightPrimaryMain","OptionStaking","_userIncentives$numbe","userIncentives","unStakingModal","setUnStakingModal","stakingModal","setStakingModal","state","toLowerCase","CLOSURE","now","Date","getTime","end","endTime","startTime","UNSTARTED","FINISHED","LIVE","getFarmsState","container","numberOfStakes","cardHeader","headerImage","marginTop","marginBottom","collapseContent","borderTop","CountdownBox","nowTime","parseInt","expand","date","Countdown","FarmPool","_useToken","_useToken2","_useToken3","_farm$totalReward","_positionIds$length","_userFarmInfo$numberO","_farmMetadata$totalRe","_farmMetadata$totalRe2","_farmMetadata$totalRe3","_farmMetadata$totalRe4","_farmMetadata$secondP","stakeOnly","expanded","setExpanded","forceUpdate","setForceUpdate","userFarmInfo","user","getV3UserFarmInfo","useIntervalUserFarmInfo","AnonymousPrincipal","useFarmUserAllPositions","positionIds","getV3UserFarmRewardInfo","useIntervalUserRewardInfo","poolToken0","poolToken1","walletIsConnected","useConnectorStateConnected","updateUnStakedFarms","deleteUnStakedFarms","useContext","FarmContext","farmMetadata","useV3FarmMetadata","cycles","useCallsData","getCycleInfo","MainCard","level","top","textAlign","darkTextPrimary","primaryMain","NOT_STARTED","upperFirst","item","flex","CountUp","preserveValue","totalRewardUnclaimed","duration","separator","direction","prefix","mb","ConnectWallet","CardActions","paddingTop","handleExpandClick","Collapse","in","timeout","unmountOnExit","CardContent","textDecoration","handleGoToGetPosition","window","ICRocksLoadIcon","secondaryMain","totalRewardClaimed","secondPerCycle","rewardPerCycle","timestampFormat","Link","href","creator","target","explorerLink","balance","cycleValueFormat","INFO_URL","GlobalBg1","GlobalBg3","itemTitle","GlobalData","_result$stakeTokenTVL","_result$rewardTokenTV","update","_ICPPrice","stakeTokenTVL","rewardTokenTVL","v3FarmController","getGlobalTVL","useGetGlobalData","setTimeout","gridSpacing","xs","md","Pages","path","CLOSED","MainContent","history","useHistory","setStakeOnly","useParsedQueryString","_state","useV3StakingFarms","list","unStakedFarms","setUnStakedFarms","Provider","unStakedFarm","indexOf","splice","ele","push","textTransform","Switch","handleToggleCheck","StakingPoolItem","StaticLoading","Farms","fulfilled","generator","next","e","reject","rejected","throw","done","resolve","then","apply","thisArg","_arguments","__awaiter","getFarmInfo","getFarmUserPositions","offset","limit","getUserPositions","Principal","from","reload","usePaginationAllData","callback","getTVL","getUserTVL","fromText","getRewardInfo","createV3Farm","args","create","rewardAmount","rewardPool","token0AmountLimit","token1AmountLimit","priceInsideLimit","isAvailablePageArgs","getFarmList","getV3StakingFarms","getRewardMeta","getV3FarmMetadata","token0PriceUpper","lessThan","token0PriceLower","nanosecond2Millisecond","time","millisecond2Nanosecond","timestamp","format","newTimestamp","substr","dayjs"],"sourceRoot":""}
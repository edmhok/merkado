{"version":3,"file":"static/js/1847.2bba4b6f.chunk.js","mappings":"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","sources":["components/ConnectWallet.tsx","assets/images/console/NFT.svg","assets/images/console/Burn.svg","views/console/index.tsx"],"sourcesContent":["import { Grid, Box, Typography, Button } from \"@mui/material\";\nimport { MainCard } from \"components/index\";\nimport NoData from \"components/no-data\";\nimport { useWalletConnectorManager } from \"store/auth/hooks\";\nimport { Trans } from \"@lingui/macro\";\n\nexport default function ConnectWallet() {\n  const [, walletManager] = useWalletConnectorManager();\n\n  return (\n    <Grid container justifyContent=\"center\">\n      <Box sx={{ maxWidth: \"1400px\", width: \"100%\" }}>\n        <MainCard level={3}>\n          <Grid container alignItems=\"center\" flexDirection=\"column\" sx={{ height: \"250px\" }}>\n            <NoData />\n            <Typography color=\"text.primary\">\n              <Trans>Connect wallet to view</Trans>\n            </Typography>\n            <Button\n              variant=\"contained\"\n              onClick={() => walletManager(true)}\n              sx={{ width: \"100%\", maxWidth: \"522px\", marginTop: \"23px\" }}\n              size=\"large\"\n            >\n              <Trans>Connect Wallet</Trans>\n            </Button>\n          </Grid>\n        </MainCard>\n      </Box>\n    </Grid>\n  );\n}\n","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgNft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 50,\n    height: 50,\n    viewBox: \"0 0 50 50\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.289 31.2606L8.30078 21.457V27.2606L24.289 37.5097V31.2606Z\",\n    fill: \"#5464F8\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.2897 31.2766L41.7227 21.457V27.2606L24.2897 37.5117V31.2766Z\",\n    fill: \"#5464F8\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.289 40.2606L8.30078 30.457V36.2606L24.289 46.5097V40.2606Z\",\n    fill: \"#5464F8\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.2897 40.2766L41.7227 30.457V36.2606L24.2897 46.5117V40.2766Z\",\n    fill: \"#5464F8\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.289 23.1043L8.30078 13.3008V18.1043L24.289 28.3535V23.1043Z\",\n    fill: \"#5464F8\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.2698 23.2954L41.7227 13.3008V18.1043L24.2698 28.3464V23.2954Z\",\n    fill: \"#5464F8\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M41.7219 13.2996L24.7886 3.49609L8.30078 13.2996L24.289 23.299L41.7219 13.2996Z\",\n    fill: \"#5464F8\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M38.1 13.3262L24.876 5.82031L12 13.3262L24.876 21.1733L38.1 13.3262Z\",\n    fill: \"#4450C1\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.5736 8.33952L21.3555 11.9691L21.3824 11.9826L25.7245 9.49561L26.4638 9.88546L20.3876 13.3806L19.7155 12.9773L22.0142 9.25364L21.9873 9.2402L17.6453 11.7271L17 11.3239L22.888 7.97656L23.5736 8.33952Z\",\n    fill: \"white\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30.5635 12.0744L29.6897 12.5853L27.2566 11.2544L25.5493 12.2358L27.8077 13.5128L26.9205 14.0237L24.6755 12.7331L21.9332 14.3194L21.2207 13.8892L27.3507 10.3672L30.5635 12.0744Z\",\n    fill: \"white\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.9999 14.4542L34.0857 14.9919L32.3919 14.0643L26.84 17.3041L26.0469 16.8201L31.5585 13.6073L29.9453 12.7335L30.8191 12.2227L34.9999 14.4542Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgNft);\nexport default __webpack_public_path__ + \"static/media/NFT.27724511a41fae5195224909356946fb.svg\";\nexport { ForwardRef as ReactComponent };","var _rect, _path, _path2;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgBurn(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 50,\n    height: 50,\n    viewBox: \"0 0 50 50\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 8,\n    y: 7,\n    width: 33,\n    height: 28,\n    rx: 3,\n    fill: \"#4450C1\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.5338 40.2857H15.6014C14.79 40.2857 14.2491 40.9643 14.2491 41.6429C14.2491 42.3214 14.79 42.8643 15.6014 43H34.5338C35.3452 43 35.8861 42.3214 35.8861 41.6429C35.7509 40.9643 35.21 40.4214 34.5338 40.2857ZM38.0498 5H11.8149C8.56939 5 6 7.71429 6 10.8357V30.8714C6 34.1286 8.56939 36.7071 11.8149 36.7071H38.1851C41.4306 36.7071 44 34.1286 44 30.8714V10.8357C43.8648 7.71429 41.2954 5.13571 38.0498 5ZM41.0249 30.8714C41.0249 32.5 39.6726 33.7214 38.1851 33.7214H11.8149C10.1922 33.7214 8.97509 32.3643 8.97509 30.8714V10.8357C8.83986 9.20714 10.1922 7.98571 11.8149 7.98571H38.1851C39.8078 7.98571 41.0249 9.34286 41.0249 10.8357V30.8714Z\",\n    fill: \"#5464F8\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M26.8942 31C26.8942 31 29.2837 27.6622 26.8942 25.7365C24.5047 23.8108 25.0078 21.8851 25.0078 21.8851C18.8455 25.7365 23.6244 30.8716 23.6244 30.8716C14.1923 26.6351 18.9712 20.9865 21.2349 19.0608C23.4986 17.1351 24.1275 12 24.1275 12C28.7806 13.9257 28.7806 19.5743 28.7806 19.5743L30.164 18.1622C38.0869 28.1757 26.8942 31 26.8942 31Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBurn);\nexport default __webpack_public_path__ + \"static/media/Burn.7ebec08f223c0cb5b61094c61fcf2654.svg\";\nexport { ForwardRef as ReactComponent };","import { Grid, Box, useTheme, Typography, createTheme, useMediaQuery, SvgIcon } from \"@mui/material\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { MainCard } from \"components/index\";\nimport { t, Trans } from \"@lingui/macro\";\nimport NFTIcon from \"assets/images/console/NFT.svg\";\nimport BurnIcon from \"assets/images/console/Burn.svg\";\nimport { mockALinkAndOpen } from \"@w2e/utils\";\nimport { Theme } from \"@mui/material/styles\";\nimport { useConnectorStateConnected } from \"store/auth/hooks\";\nimport ConnectWallet from \"../../components/ConnectWallet\";\n\nexport type Route = {\n  label: string;\n  path?: string;\n  link?: string;\n};\n\nexport type Console = {\n  label: string;\n  title?: string;\n  comingSoon?: boolean;\n  routes?: Route[];\n  path?: string;\n  demo?: boolean;\n  Icon?: any;\n  link?: string;\n};\n\nconst customizeTheme = createTheme({\n  breakpoints: {\n    values: {\n      sm: 690,\n      md: 1220,\n      lg: 1520,\n      xs: 375,\n      xl: 1920,\n    },\n  },\n});\n\nconst customizeBreakPoints = customizeTheme.breakpoints;\n\nexport function ArrowBackIos(props: any) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M11.67 3.87L9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z\" />\n    </SvgIcon>\n  );\n}\n\nexport function ConsoleItem({ label, Icon, comingSoon, path, link, title, demo, routes = [] }: Console) {\n  const theme = useTheme() as Theme;\n  const history = useHistory();\n  const [onHover, setOnHover] = useState(false);\n\n  const handleClick = () => {\n    if (comingSoon) return;\n    if (routes.length) {\n      setOnHover(true);\n      return;\n    }\n\n    if (link) {\n      mockALinkAndOpen(link, \"console_link\");\n      return;\n    }\n\n    if (path) history.push(path);\n  };\n\n  const handleRouteClick = (route: Route) => {\n    if (comingSoon) return;\n\n    if (route.link) {\n      mockALinkAndOpen(route.link, \"console_link\");\n      return;\n    }\n    if (!route.path) return;\n    history.push(route.path);\n  };\n\n  const handleMouseEnter = () => {\n    setOnHover(true);\n  };\n\n  const handleMouseLeave = () => {\n    setOnHover(false);\n  };\n\n  return (\n    <Grid\n      container\n      sx={{\n        background: theme.palette.background.level1,\n        boxShadow: \"0px 4px 34px rgba(0, 0, 0, 0.25)\",\n        borderRadius: \"12px\",\n        height: \"140px\",\n        position: \"relative\",\n        cursor: !comingSoon && (!!path || !!link) ? \"pointer\" : \"default\",\n      }}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      flexDirection=\"column\"\n      onClick={handleClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      {comingSoon && (\n        <Typography\n          fontSize=\"10px\"\n          sx={{\n            position: \"absolute\",\n            top: \"10px\",\n            right: \"14px\",\n          }}\n        >\n          <Trans>Coming soon</Trans>\n        </Typography>\n      )}\n      {demo && (\n        <Typography\n          fontSize=\"10px\"\n          sx={{\n            position: \"absolute\",\n            top: \"10px\",\n            right: \"14px\",\n          }}\n        >\n          <Trans>Demo</Trans>\n        </Typography>\n      )}\n      {!!routes.length && onHover && (\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\" }}>\n          <Box\n            sx={{\n              position: \"absolute\",\n              top: 0,\n              left: 0,\n              width: \"100%\",\n              height: \"100%\",\n              background: \"rgba(17, 25, 54, 0.94)\",\n              boxShadow: \"0px 4px 34px rgba(0, 0, 0, 0.25)\",\n              borderRadius: \"12px\",\n            }}\n          />\n          <Box sx={{ position: \"absolute\", top: 0, left: 0, width: \"100%\", height: \"100%\", padding: \"16px 0 0 40px\" }}>\n            <Box mb=\"12px\">\n              <Typography color=\"text.primary\" fontWeight=\"700\" fontSize=\"16px\">\n                {title}\n              </Typography>\n            </Box>\n            {routes.map((route, index) => (\n              <Grid\n                container\n                alignItems=\"center\"\n                key={route.path}\n                mb={index === routes.length - 1 ? \"0px\" : \"6px\"}\n                sx={{\n                  \"&:hover\": {\n                    \"& .MuiSvgIcon-root\": {\n                      transform: \"translateX(5px) rotate(180deg)\",\n                    },\n                  },\n                }}\n              >\n                <Typography\n                  fontSize=\"14px\"\n                  sx={{ cursor: \"pointer\" }}\n                  component=\"span\"\n                  onClick={() => handleRouteClick(route)}\n                >\n                  {route.label}\n                </Typography>\n                <ArrowBackIos\n                  sx={{\n                    transition: \"transform 200ms\",\n                    transform: \"rotate(180deg)\",\n                    fontSize: \"12px\",\n                    color: theme.palette.text.secondary,\n                  }}\n                />\n              </Grid>\n            ))}\n          </Box>\n        </Box>\n      )}\n      <Grid item>\n        <img src={Icon} alt=\"\" />\n      </Grid>\n      <Grid item>\n        <Typography\n          color=\"text.primary\"\n          fontSize=\"20px\"\n          sx={{\n            marginTop: \"12px\",\n          }}\n        >\n          {label}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst items: Console[] = [\n  {\n    label: t`NFT`,\n    Icon: NFTIcon,\n    path: \"/nft/mint\",\n    title: t`NFT`,\n    routes: [\n      { label: t`Mint NFT`, path: \"/console/nft/mint\" },\n      { label: t`NFT Canisters`, path: \"/console/nft/canister/list\" },\n    ],\n  },\n  {\n    label: t`Burn Tool`,\n    Icon: BurnIcon,\n    path: \"/console/burn\",\n  },\n];\n\nexport default function ConsolePage() {\n  const matchDownMD = useMediaQuery(customizeBreakPoints.down(\"lg\"));\n  const matchDownSM = useMediaQuery(customizeBreakPoints.down(\"md\"));\n  const matchDownSM1 = useMediaQuery(customizeBreakPoints.down(\"sm\"));\n\n  const walletIsConnected = useConnectorStateConnected();\n\n  return walletIsConnected ? (\n    <MainCard>\n      <Box>\n        <Grid container spacing=\"29px\">\n          {items.map((item, index) => (\n            <Grid key={item.path ?? index} item xs={matchDownMD ? (matchDownSM ? (matchDownSM1 ? 12 : 6) : 4) : 3}>\n              <ConsoleItem comingSoon={!!item.comingSoon} {...item} />\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n    </MainCard>\n  ) : (\n    <ConnectWallet />\n  );\n}\n"],"names":["ConnectWallet","walletManager","useWalletConnectorManager","_jsx","Grid","container","justifyContent","children","Box","sx","maxWidth","width","MainCard","level","_jsxs","alignItems","flexDirection","height","NoData","Typography","color","Trans","id","Button","variant","onClick","marginTop","size","customizeBreakPoints","createTheme","breakpoints","values","sm","md","lg","xs","xl","ArrowBackIos","props","SvgIcon","d","ConsoleItem","_ref","label","Icon","comingSoon","path","link","title","demo","routes","theme","useTheme","history","useHistory","onHover","setOnHover","useState","background","palette","level1","boxShadow","borderRadius","position","cursor","handleClick","length","mockALinkAndOpen","push","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","fontSize","top","right","left","padding","mb","fontWeight","map","route","index","transform","component","handleRouteClick","transition","text","secondary","item","src","alt","items","i18n","_","NFTIcon","BurnIcon","ConsolePage","matchDownMD","useMediaQuery","down","matchDownSM","matchDownSM1","useConnectorStateConnected","spacing","_item$path"],"sourceRoot":""}